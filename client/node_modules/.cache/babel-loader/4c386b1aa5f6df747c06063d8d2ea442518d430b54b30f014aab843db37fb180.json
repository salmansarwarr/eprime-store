{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OptionsOperation = void 0;\nvar error_1 = require(\"../error\");\nvar operation_1 = require(\"./operation\");\n/** @internal */\nvar OptionsOperation = /*#__PURE__*/function (_operation_1$Abstract) {\n  _inherits(OptionsOperation, _operation_1$Abstract);\n  var _super = _createSuper(OptionsOperation);\n  function OptionsOperation(collection, options) {\n    var _this;\n    _classCallCheck(this, OptionsOperation);\n    _this = _super.call(this, options);\n    _this.options = options;\n    _this.collection = collection;\n    return _this;\n  }\n  _createClass(OptionsOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var coll = this.collection;\n      coll.s.db.listCollections({\n        name: coll.collectionName\n      }, _objectSpread(_objectSpread({}, this.options), {}, {\n        nameOnly: false,\n        readPreference: this.readPreference,\n        session: session\n      })).toArray().then(function (collections) {\n        if (collections.length === 0) {\n          // TODO(NODE-3485)\n          return callback(new error_1.MongoAPIError(\"collection \".concat(coll.namespace, \" not found\")));\n        }\n        callback(undefined, collections[0].options);\n      }, function (error) {\n        return callback(error);\n      });\n    }\n  }]);\n  return OptionsOperation;\n}(operation_1.AbstractCallbackOperation);\nexports.OptionsOperation = OptionsOperation;","map":{"version":3,"names":["error_1","require","operation_1","OptionsOperation","_operation_1$Abstract","_inherits","_super","_createSuper","collection","options","_this","_classCallCheck","call","_createClass","key","value","executeCallback","server","session","callback","coll","s","db","listCollections","name","collectionName","_objectSpread","nameOnly","readPreference","toArray","then","collections","length","MongoAPIError","concat","namespace","undefined","error","AbstractCallbackOperation","exports"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/operations/options_operation.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport { MongoAPIError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { AbstractCallbackOperation, type OperationOptions } from './operation';\n\n/** @internal */\nexport class OptionsOperation extends AbstractCallbackOperation<Document> {\n  override options: OperationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: OperationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const coll = this.collection;\n\n    coll.s.db\n      .listCollections(\n        { name: coll.collectionName },\n        { ...this.options, nameOnly: false, readPreference: this.readPreference, session }\n      )\n      .toArray()\n      .then(\n        collections => {\n          if (collections.length === 0) {\n            // TODO(NODE-3485)\n            return callback(new MongoAPIError(`collection ${coll.namespace} not found`));\n          }\n\n          callback(undefined, collections[0].options);\n        },\n        error => callback(error)\n      );\n  }\n}\n"],"mappings":";;;;;;;;;;;AAEA,IAAAA,OAAA,GAAAC,OAAA;AAIA,IAAAC,WAAA,GAAAD,OAAA;AAEA;AAAA,IACaE,gBAAiB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EAI5B,SAAAA,iBAAYK,UAAsB,EAAEC,OAAyB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,gBAAA;IAC3DO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAMH,OAAO;IACbC,KAAA,CAAKD,OAAO,GAAGA,OAAO;IACtBC,KAAA,CAAKF,UAAU,GAAGA,UAAU;IAAC,OAAAE,KAAA;EAC/B;EAACG,YAAA,CAAAV,gBAAA;IAAAW,GAAA;IAAAC,KAAA,EAEQ,SAAAC,gBACPC,MAAc,EACdC,OAAkC,EAClCC,QAA4B;MAE5B,IAAMC,IAAI,GAAG,IAAI,CAACZ,UAAU;MAE5BY,IAAI,CAACC,CAAC,CAACC,EAAE,CACNC,eAAe,CACd;QAAEC,IAAI,EAAEJ,IAAI,CAACK;MAAc,CAAE,EAAAC,aAAA,CAAAA,aAAA,KACxB,IAAI,CAACjB,OAAO;QAAEkB,QAAQ,EAAE,KAAK;QAAEC,cAAc,EAAE,IAAI,CAACA,cAAc;QAAEV,OAAO,EAAPA;MAAO,EAAE,CACnF,CACAW,OAAO,EAAE,CACTC,IAAI,CACH,UAAAC,WAAW,EAAG;QACZ,IAAIA,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE;UAC5B;UACA,OAAOb,QAAQ,CAAC,IAAInB,OAAA,CAAAiC,aAAa,eAAAC,MAAA,CAAed,IAAI,CAACe,SAAS,eAAY,CAAC,CAAC;;QAG9EhB,QAAQ,CAACiB,SAAS,EAAEL,WAAW,CAAC,CAAC,CAAC,CAACtB,OAAO,CAAC;MAC7C,CAAC,EACD,UAAA4B,KAAK;QAAA,OAAIlB,QAAQ,CAACkB,KAAK,CAAC;MAAA,EACzB;IACL;EAAC;EAAA,OAAAlC,gBAAA;AAAA,EAlCmCD,WAAA,CAAAoC,yBAAmC;AAAzEC,OAAA,CAAApC,gBAAA,GAAAA,gBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}