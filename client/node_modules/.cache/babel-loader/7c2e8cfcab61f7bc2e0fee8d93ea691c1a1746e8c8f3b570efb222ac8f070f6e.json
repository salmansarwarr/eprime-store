{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProfilingLevelOperation = void 0;\nvar error_1 = require(\"../error\");\nvar command_1 = require(\"./command\");\n/** @internal */\nvar ProfilingLevelOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(ProfilingLevelOperation, _command_1$CommandOpe);\n  var _super = _createSuper(ProfilingLevelOperation);\n  function ProfilingLevelOperation(db, options) {\n    var _this;\n    _classCallCheck(this, ProfilingLevelOperation);\n    _this = _super.call(this, db, options);\n    _this.options = options;\n    return _this;\n  }\n  _createClass(ProfilingLevelOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      _get(_getPrototypeOf(ProfilingLevelOperation.prototype), \"executeCommand\", this).call(this, server, session, {\n        profile: -1\n      }, function (err, doc) {\n        if (err == null && doc.ok === 1) {\n          var was = doc.was;\n          if (was === 0) return callback(undefined, 'off');\n          if (was === 1) return callback(undefined, 'slow_only');\n          if (was === 2) return callback(undefined, 'all');\n          // TODO(NODE-3483)\n          return callback(new error_1.MongoRuntimeError(\"Illegal profiling level value \".concat(was)));\n        } else {\n          // TODO(NODE-3483): Consider MongoUnexpectedServerResponseError\n          err != null ? callback(err) : callback(new error_1.MongoRuntimeError('Error with profile command'));\n        }\n      });\n    }\n  }]);\n  return ProfilingLevelOperation;\n}(command_1.CommandOperation);\nexports.ProfilingLevelOperation = ProfilingLevelOperation;","map":{"version":3,"names":["error_1","require","command_1","ProfilingLevelOperation","_command_1$CommandOpe","_inherits","_super","_createSuper","db","options","_this","_classCallCheck","call","_createClass","key","value","executeCallback","server","session","callback","_get","_getPrototypeOf","prototype","profile","err","doc","ok","was","undefined","MongoRuntimeError","concat","CommandOperation","exports"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/operations/profiling_level.ts"],"sourcesContent":["import type { Db } from '../db';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\n\n/** @public */\nexport type ProfilingLevelOptions = CommandOperationOptions;\n\n/** @internal */\nexport class ProfilingLevelOperation extends CommandOperation<string> {\n  override options: ProfilingLevelOptions;\n\n  constructor(db: Db, options: ProfilingLevelOptions) {\n    super(db, options);\n    this.options = options;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<string>\n  ): void {\n    super.executeCommand(server, session, { profile: -1 }, (err, doc) => {\n      if (err == null && doc.ok === 1) {\n        const was = doc.was;\n        if (was === 0) return callback(undefined, 'off');\n        if (was === 1) return callback(undefined, 'slow_only');\n        if (was === 2) return callback(undefined, 'all');\n        // TODO(NODE-3483)\n        return callback(new MongoRuntimeError(`Illegal profiling level value ${was}`));\n      } else {\n        // TODO(NODE-3483): Consider MongoUnexpectedServerResponseError\n        err != null ? callback(err) : callback(new MongoRuntimeError('Error with profile command'));\n      }\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;AACA,IAAAA,OAAA,GAAAC,OAAA;AAIA,IAAAC,SAAA,GAAAD,OAAA;AAKA;AAAA,IACaE,uBAAwB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,uBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,uBAAA;EAGnC,SAAAA,wBAAYK,EAAM,EAAEC,OAA8B;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,uBAAA;IAChDO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAMJ,EAAE,EAAEC,OAAO;IACjBC,KAAA,CAAKD,OAAO,GAAGA,OAAO;IAAC,OAAAC,KAAA;EACzB;EAACG,YAAA,CAAAV,uBAAA;IAAAW,GAAA;IAAAC,KAAA,EAEQ,SAAAC,gBACPC,MAAc,EACdC,OAAkC,EAClCC,QAA0B;MAE1BC,IAAA,CAAAC,eAAA,CAAAlB,uBAAA,CAAAmB,SAAA,2BAAAV,IAAA,OAAqBK,MAAM,EAAEC,OAAO,EAAE;QAAEK,OAAO,EAAE,CAAC;MAAC,CAAE,EAAE,UAACC,GAAG,EAAEC,GAAG,EAAI;QAClE,IAAID,GAAG,IAAI,IAAI,IAAIC,GAAG,CAACC,EAAE,KAAK,CAAC,EAAE;UAC/B,IAAMC,GAAG,GAAGF,GAAG,CAACE,GAAG;UACnB,IAAIA,GAAG,KAAK,CAAC,EAAE,OAAOR,QAAQ,CAACS,SAAS,EAAE,KAAK,CAAC;UAChD,IAAID,GAAG,KAAK,CAAC,EAAE,OAAOR,QAAQ,CAACS,SAAS,EAAE,WAAW,CAAC;UACtD,IAAID,GAAG,KAAK,CAAC,EAAE,OAAOR,QAAQ,CAACS,SAAS,EAAE,KAAK,CAAC;UAChD;UACA,OAAOT,QAAQ,CAAC,IAAInB,OAAA,CAAA6B,iBAAiB,kCAAAC,MAAA,CAAkCH,GAAG,CAAE,CAAC,CAAC;SAC/E,MAAM;UACL;UACAH,GAAG,IAAI,IAAI,GAAGL,QAAQ,CAACK,GAAG,CAAC,GAAGL,QAAQ,CAAC,IAAInB,OAAA,CAAA6B,iBAAiB,CAAC,4BAA4B,CAAC,CAAC;;MAE/F,CAAC;IACH;EAAC;EAAA,OAAA1B,uBAAA;AAAA,EA1B0CD,SAAA,CAAA6B,gBAAwB;AAArEC,OAAA,CAAA7B,uBAAA,GAAAA,uBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}