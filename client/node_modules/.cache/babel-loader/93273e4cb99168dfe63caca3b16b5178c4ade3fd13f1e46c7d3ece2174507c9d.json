{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DropDatabaseOperation = exports.DropCollectionOperation = void 0;\nvar error_1 = require(\"../error\");\nvar command_1 = require(\"./command\");\nvar operation_1 = require(\"./operation\");\n/** @internal */\nvar DropCollectionOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(DropCollectionOperation, _command_1$CommandOpe);\n  var _super = _createSuper(DropCollectionOperation);\n  function DropCollectionOperation(db, name) {\n    var _this;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, DropCollectionOperation);\n    _this = _super.call(this, db, options);\n    _this.db = db;\n    _this.options = options;\n    _this.name = name;\n    return _this;\n  }\n  _createClass(DropCollectionOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var _this2 = this;\n      _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _db$client$options$au, _options$encryptedFie;\n        var db, options, name, encryptedFieldsMap, encryptedFields, _listCollectionsResul, listCollectionsResult, escCollection, ecocCollection, _i, _arr, collectionName, dropOp;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              db = _this2.db;\n              options = _this2.options;\n              name = _this2.name;\n              encryptedFieldsMap = (_db$client$options$au = db.client.options.autoEncryption) === null || _db$client$options$au === void 0 ? void 0 : _db$client$options$au.encryptedFieldsMap;\n              encryptedFields = (_options$encryptedFie = options.encryptedFields) !== null && _options$encryptedFie !== void 0 ? _options$encryptedFie : encryptedFieldsMap === null || encryptedFieldsMap === void 0 ? void 0 : encryptedFieldsMap[\"\".concat(db.databaseName, \".\").concat(name)];\n              if (!(!encryptedFields && encryptedFieldsMap)) {\n                _context.next = 10;\n                break;\n              }\n              _context.next = 8;\n              return db.listCollections({\n                name: name\n              }, {\n                nameOnly: false\n              }).toArray();\n            case 8:\n              listCollectionsResult = _context.sent;\n              encryptedFields = listCollectionsResult === null || listCollectionsResult === void 0 || (_listCollectionsResul = listCollectionsResult[0]) === null || _listCollectionsResul === void 0 || (_listCollectionsResul = _listCollectionsResul.options) === null || _listCollectionsResul === void 0 ? void 0 : _listCollectionsResul.encryptedFields;\n            case 10:\n              if (!encryptedFields) {\n                _context.next = 29;\n                break;\n              }\n              escCollection = encryptedFields.escCollection || \"enxcol_.\".concat(name, \".esc\");\n              ecocCollection = encryptedFields.ecocCollection || \"enxcol_.\".concat(name, \".ecoc\");\n              _i = 0, _arr = [escCollection, ecocCollection];\n            case 14:\n              if (!(_i < _arr.length)) {\n                _context.next = 29;\n                break;\n              }\n              collectionName = _arr[_i];\n              // Drop auxilliary collections, ignoring potential NamespaceNotFound errors.\n              dropOp = new DropCollectionOperation(db, collectionName);\n              _context.prev = 17;\n              _context.next = 20;\n              return dropOp.executeWithoutEncryptedFieldsCheck(server, session);\n            case 20:\n              _context.next = 26;\n              break;\n            case 22:\n              _context.prev = 22;\n              _context.t0 = _context[\"catch\"](17);\n              if (!(!(_context.t0 instanceof error_1.MongoServerError) || _context.t0.code !== error_1.MONGODB_ERROR_CODES.NamespaceNotFound)) {\n                _context.next = 26;\n                break;\n              }\n              throw _context.t0;\n            case 26:\n              _i++;\n              _context.next = 14;\n              break;\n            case 29:\n              return _context.abrupt(\"return\", _this2.executeWithoutEncryptedFieldsCheck(server, session));\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[17, 22]]);\n      }))().then(function (result) {\n        return callback(undefined, result);\n      }, function (err) {\n        return callback(err);\n      });\n    }\n  }, {\n    key: \"executeWithoutEncryptedFieldsCheck\",\n    value: function executeWithoutEncryptedFieldsCheck(server, session) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        _get(_getPrototypeOf(DropCollectionOperation.prototype), \"executeCommand\", _this3).call(_this3, server, session, {\n          drop: _this3.name\n        }, function (err, result) {\n          if (err) return reject(err);\n          resolve(!!result.ok);\n        });\n      });\n    }\n  }]);\n  return DropCollectionOperation;\n}(command_1.CommandOperation);\nexports.DropCollectionOperation = DropCollectionOperation;\n/** @internal */\nvar DropDatabaseOperation = /*#__PURE__*/function (_command_1$CommandOpe2) {\n  _inherits(DropDatabaseOperation, _command_1$CommandOpe2);\n  var _super2 = _createSuper(DropDatabaseOperation);\n  function DropDatabaseOperation(db, options) {\n    var _this4;\n    _classCallCheck(this, DropDatabaseOperation);\n    _this4 = _super2.call(this, db, options);\n    _this4.options = options;\n    return _this4;\n  }\n  _createClass(DropDatabaseOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      _get(_getPrototypeOf(DropDatabaseOperation.prototype), \"executeCommand\", this).call(this, server, session, {\n        dropDatabase: 1\n      }, function (err, result) {\n        if (err) return callback(err);\n        if (result.ok) return callback(undefined, true);\n        callback(undefined, false);\n      });\n    }\n  }]);\n  return DropDatabaseOperation;\n}(command_1.CommandOperation);\nexports.DropDatabaseOperation = DropDatabaseOperation;\n(0, operation_1.defineAspects)(DropCollectionOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DropDatabaseOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"names":["error_1","require","command_1","operation_1","DropCollectionOperation","_command_1$CommandOpe","_inherits","_super","_createSuper","db","name","_this","options","arguments","length","undefined","_classCallCheck","call","_createClass","key","value","executeCallback","server","session","callback","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_db$client$options$au","_options$encryptedFie","encryptedFieldsMap","encryptedFields","_listCollectionsResul","listCollectionsResult","escCollection","ecocCollection","_i","_arr","collectionName","dropOp","wrap","_callee$","_context","prev","next","client","autoEncryption","concat","databaseName","listCollections","nameOnly","toArray","sent","executeWithoutEncryptedFieldsCheck","t0","MongoServerError","code","MONGODB_ERROR_CODES","NamespaceNotFound","abrupt","stop","then","result","err","_this3","Promise","resolve","reject","_get","_getPrototypeOf","prototype","drop","ok","CommandOperation","exports","DropDatabaseOperation","_command_1$CommandOpe2","_super2","_this4","dropDatabase","defineAspects","Aspect","WRITE_OPERATION"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/operations/drop.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Db } from '../db';\nimport { MONGODB_ERROR_CODES, MongoServerError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface DropCollectionOptions extends CommandOperationOptions {\n  /** @experimental */\n  encryptedFields?: Document;\n}\n\n/** @internal */\nexport class DropCollectionOperation extends CommandOperation<boolean> {\n  override options: DropCollectionOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options: DropCollectionOptions = {}) {\n    super(db, options);\n    this.db = db;\n    this.options = options;\n    this.name = name;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<boolean>\n  ): void {\n    (async () => {\n      const db = this.db;\n      const options = this.options;\n      const name = this.name;\n\n      const encryptedFieldsMap = db.client.options.autoEncryption?.encryptedFieldsMap;\n      let encryptedFields: Document | undefined =\n        options.encryptedFields ?? encryptedFieldsMap?.[`${db.databaseName}.${name}`];\n\n      if (!encryptedFields && encryptedFieldsMap) {\n        // If the MongoClient was configured with an encryptedFieldsMap,\n        // and no encryptedFields config was available in it or explicitly\n        // passed as an argument, the spec tells us to look one up using\n        // listCollections().\n        const listCollectionsResult = await db\n          .listCollections({ name }, { nameOnly: false })\n          .toArray();\n        encryptedFields = listCollectionsResult?.[0]?.options?.encryptedFields;\n      }\n\n      if (encryptedFields) {\n        const escCollection = encryptedFields.escCollection || `enxcol_.${name}.esc`;\n        const ecocCollection = encryptedFields.ecocCollection || `enxcol_.${name}.ecoc`;\n\n        for (const collectionName of [escCollection, ecocCollection]) {\n          // Drop auxilliary collections, ignoring potential NamespaceNotFound errors.\n          const dropOp = new DropCollectionOperation(db, collectionName);\n          try {\n            await dropOp.executeWithoutEncryptedFieldsCheck(server, session);\n          } catch (err) {\n            if (\n              !(err instanceof MongoServerError) ||\n              err.code !== MONGODB_ERROR_CODES.NamespaceNotFound\n            ) {\n              throw err;\n            }\n          }\n        }\n      }\n\n      return this.executeWithoutEncryptedFieldsCheck(server, session);\n    })().then(\n      result => callback(undefined, result),\n      err => callback(err)\n    );\n  }\n\n  private executeWithoutEncryptedFieldsCheck(\n    server: Server,\n    session: ClientSession | undefined\n  ): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      super.executeCommand(server, session, { drop: this.name }, (err, result) => {\n        if (err) return reject(err);\n        resolve(!!result.ok);\n      });\n    });\n  }\n}\n\n/** @public */\nexport type DropDatabaseOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropDatabaseOperation extends CommandOperation<boolean> {\n  override options: DropDatabaseOptions;\n\n  constructor(db: Db, options: DropDatabaseOptions) {\n    super(db, options);\n    this.options = options;\n  }\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<boolean>\n  ): void {\n    super.executeCommand(server, session, { dropDatabase: 1 }, (err, result) => {\n      if (err) return callback(err);\n      if (result.ok) return callback(undefined, true);\n      callback(undefined, false);\n    });\n  }\n}\n\ndefineAspects(DropCollectionOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropDatabaseOperation, [Aspect.WRITE_OPERATION]);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}