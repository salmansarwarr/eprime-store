{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DistinctOperation = void 0;\nvar utils_1 = require(\"../utils\");\nvar command_1 = require(\"./command\");\nvar operation_1 = require(\"./operation\");\n/**\n * Return a list of distinct values for the given key across a collection.\n * @internal\n */\nvar DistinctOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(DistinctOperation, _command_1$CommandOpe);\n  var _super = _createSuper(DistinctOperation);\n  /**\n   * Construct a Distinct operation.\n   *\n   * @param collection - Collection instance.\n   * @param key - Field of the document to find distinct values for.\n   * @param query - The query for filtering the set of documents to which we apply the distinct filter.\n   * @param options - Optional settings. See Collection.prototype.distinct for a list of options.\n   */\n  function DistinctOperation(collection, key, query, options) {\n    var _this;\n    _classCallCheck(this, DistinctOperation);\n    _this = _super.call(this, collection, options);\n    _this.options = options !== null && options !== void 0 ? options : {};\n    _this.collection = collection;\n    _this.key = key;\n    _this.query = query;\n    return _this;\n  }\n  _createClass(DistinctOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var _this2 = this;\n      var coll = this.collection;\n      var key = this.key;\n      var query = this.query;\n      var options = this.options;\n      // Distinct command\n      var cmd = {\n        distinct: coll.collectionName,\n        key: key,\n        query: query\n      };\n      // Add maxTimeMS if defined\n      if (typeof options.maxTimeMS === 'number') {\n        cmd.maxTimeMS = options.maxTimeMS;\n      }\n      // we check for undefined specifically here to allow falsy values\n      // eslint-disable-next-line no-restricted-syntax\n      if (typeof options.comment !== 'undefined') {\n        cmd.comment = options.comment;\n      }\n      // Do we have a readConcern specified\n      (0, utils_1.decorateWithReadConcern)(cmd, coll, options);\n      // Have we specified collation\n      try {\n        (0, utils_1.decorateWithCollation)(cmd, coll, options);\n      } catch (err) {\n        return callback(err);\n      }\n      _get(_getPrototypeOf(DistinctOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd, function (err, result) {\n        if (err) {\n          callback(err);\n          return;\n        }\n        callback(undefined, _this2.explain ? result : result.values);\n      });\n    }\n  }]);\n  return DistinctOperation;\n}(command_1.CommandOperation);\nexports.DistinctOperation = DistinctOperation;\n(0, operation_1.defineAspects)(DistinctOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.EXPLAINABLE]);","map":{"version":3,"names":["utils_1","require","command_1","operation_1","DistinctOperation","_command_1$CommandOpe","_inherits","_super","_createSuper","collection","key","query","options","_this","_classCallCheck","call","_createClass","value","executeCallback","server","session","callback","_this2","coll","cmd","distinct","collectionName","maxTimeMS","comment","decorateWithReadConcern","decorateWithCollation","err","_get","_getPrototypeOf","prototype","result","undefined","explain","values","CommandOperation","exports","defineAspects","Aspect","READ_OPERATION","RETRYABLE","EXPLAINABLE"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/operations/distinct.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, decorateWithCollation, decorateWithReadConcern } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport type DistinctOptions = CommandOperationOptions;\n\n/**\n * Return a list of distinct values for the given key across a collection.\n * @internal\n */\nexport class DistinctOperation extends CommandOperation<any[]> {\n  override options: DistinctOptions;\n  collection: Collection;\n  /** Field of the document to find distinct values for. */\n  key: string;\n  /** The query for filtering the set of documents to which we apply the distinct filter. */\n  query: Document;\n\n  /**\n   * Construct a Distinct operation.\n   *\n   * @param collection - Collection instance.\n   * @param key - Field of the document to find distinct values for.\n   * @param query - The query for filtering the set of documents to which we apply the distinct filter.\n   * @param options - Optional settings. See Collection.prototype.distinct for a list of options.\n   */\n  constructor(collection: Collection, key: string, query: Document, options?: DistinctOptions) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collection = collection;\n    this.key = key;\n    this.query = query;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<any[]>\n  ): void {\n    const coll = this.collection;\n    const key = this.key;\n    const query = this.query;\n    const options = this.options;\n\n    // Distinct command\n    const cmd: Document = {\n      distinct: coll.collectionName,\n      key: key,\n      query: query\n    };\n\n    // Add maxTimeMS if defined\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (typeof options.comment !== 'undefined') {\n      cmd.comment = options.comment;\n    }\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(cmd, coll, options);\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(cmd, coll, options);\n    } catch (err) {\n      return callback(err);\n    }\n\n    super.executeCommand(server, session, cmd, (err, result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, this.explain ? result : result.values);\n    });\n  }\n}\n\ndefineAspects(DistinctOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXPLAINABLE]);\n"],"mappings":";;;;;;;;;;;;AAIA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAKA;;;;AAAA,IAIaG,iBAAkB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,iBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,iBAAA;EAQ7B;;;;;;;;EAQA,SAAAA,kBAAYK,UAAsB,EAAEC,GAAW,EAAEC,KAAe,EAAEC,OAAyB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAV,iBAAA;IACzFS,KAAA,GAAAN,MAAA,CAAAQ,IAAA,OAAMN,UAAU,EAAEG,OAAO;IAEzBC,KAAA,CAAKD,OAAO,GAAGA,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAI,EAAE;IAC5BC,KAAA,CAAKJ,UAAU,GAAGA,UAAU;IAC5BI,KAAA,CAAKH,GAAG,GAAGA,GAAG;IACdG,KAAA,CAAKF,KAAK,GAAGA,KAAK;IAAC,OAAAE,KAAA;EACrB;EAACG,YAAA,CAAAZ,iBAAA;IAAAM,GAAA;IAAAO,KAAA,EAEQ,SAAAC,gBACPC,MAAc,EACdC,OAAkC,EAClCC,QAAyB;MAAA,IAAAC,MAAA;MAEzB,IAAMC,IAAI,GAAG,IAAI,CAACd,UAAU;MAC5B,IAAMC,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,IAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMC,OAAO,GAAG,IAAI,CAACA,OAAO;MAE5B;MACA,IAAMY,GAAG,GAAa;QACpBC,QAAQ,EAAEF,IAAI,CAACG,cAAc;QAC7BhB,GAAG,EAAEA,GAAG;QACRC,KAAK,EAAEA;OACR;MAED;MACA,IAAI,OAAOC,OAAO,CAACe,SAAS,KAAK,QAAQ,EAAE;QACzCH,GAAG,CAACG,SAAS,GAAGf,OAAO,CAACe,SAAS;;MAGnC;MACA;MACA,IAAI,OAAOf,OAAO,CAACgB,OAAO,KAAK,WAAW,EAAE;QAC1CJ,GAAG,CAACI,OAAO,GAAGhB,OAAO,CAACgB,OAAO;;MAG/B;MACA,IAAA5B,OAAA,CAAA6B,uBAAuB,EAACL,GAAG,EAAED,IAAI,EAAEX,OAAO,CAAC;MAE3C;MACA,IAAI;QACF,IAAAZ,OAAA,CAAA8B,qBAAqB,EAACN,GAAG,EAAED,IAAI,EAAEX,OAAO,CAAC;OAC1C,CAAC,OAAOmB,GAAG,EAAE;QACZ,OAAOV,QAAQ,CAACU,GAAG,CAAC;;MAGtBC,IAAA,CAAAC,eAAA,CAAA7B,iBAAA,CAAA8B,SAAA,2BAAAnB,IAAA,OAAqBI,MAAM,EAAEC,OAAO,EAAEI,GAAG,EAAE,UAACO,GAAG,EAAEI,MAAM,EAAI;QACzD,IAAIJ,GAAG,EAAE;UACPV,QAAQ,CAACU,GAAG,CAAC;UACb;;QAGFV,QAAQ,CAACe,SAAS,EAAEd,MAAI,CAACe,OAAO,GAAGF,MAAM,GAAGA,MAAM,CAACG,MAAM,CAAC;MAC5D,CAAC;IACH;EAAC;EAAA,OAAAlC,iBAAA;AAAA,EAvEoCF,SAAA,CAAAqC,gBAAuB;AAA9DC,OAAA,CAAApC,iBAAA,GAAAA,iBAAA;AA0EA,IAAAD,WAAA,CAAAsC,aAAa,EAACrC,iBAAiB,EAAE,CAACD,WAAA,CAAAuC,MAAM,CAACC,cAAc,EAAExC,WAAA,CAAAuC,MAAM,CAACE,SAAS,EAAEzC,WAAA,CAAAuC,MAAM,CAACG,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}