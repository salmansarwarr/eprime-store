{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BinMsg = exports.Msg = exports.Response = exports.Query = void 0;\nvar BSON = require(\"../bson\");\nvar error_1 = require(\"../error\");\nvar read_preference_1 = require(\"../read_preference\");\nvar utils_1 = require(\"../utils\");\nvar constants_1 = require(\"./wire_protocol/constants\");\n// Incrementing request id\nvar _requestId = 0;\n// Query flags\nvar OPTS_TAILABLE_CURSOR = 2;\nvar OPTS_SECONDARY = 4;\nvar OPTS_OPLOG_REPLAY = 8;\nvar OPTS_NO_CURSOR_TIMEOUT = 16;\nvar OPTS_AWAIT_DATA = 32;\nvar OPTS_EXHAUST = 64;\nvar OPTS_PARTIAL = 128;\n// Response flags\nvar CURSOR_NOT_FOUND = 1;\nvar QUERY_FAILURE = 2;\nvar SHARD_CONFIG_STALE = 4;\nvar AWAIT_CAPABLE = 8;\n/**************************************************************\n * QUERY\n **************************************************************/\n/** @internal */\nvar Query = /*#__PURE__*/function () {\n  function Query(ns, query, options) {\n    _classCallCheck(this, Query);\n    // Basic options needed to be passed in\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (ns == null) throw new error_1.MongoRuntimeError('Namespace must be specified for query');\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (query == null) throw new error_1.MongoRuntimeError('A query document must be specified for query');\n    // Validate that we are not passing 0x00 in the collection name\n    if (ns.indexOf('\\x00') !== -1) {\n      // TODO(NODE-3483): Use MongoNamespace static method\n      throw new error_1.MongoRuntimeError('Namespace cannot contain a null character');\n    }\n    // Basic options\n    this.ns = ns;\n    this.query = query;\n    // Additional options\n    this.numberToSkip = options.numberToSkip || 0;\n    this.numberToReturn = options.numberToReturn || 0;\n    this.returnFieldSelector = options.returnFieldSelector || undefined;\n    this.requestId = Query.getRequestId();\n    // special case for pre-3.2 find commands, delete ASAP\n    this.pre32Limit = options.pre32Limit;\n    // Serialization option\n    this.serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.batchSize = this.numberToReturn;\n    // Flags\n    this.tailable = false;\n    this.secondaryOk = typeof options.secondaryOk === 'boolean' ? options.secondaryOk : false;\n    this.oplogReplay = false;\n    this.noCursorTimeout = false;\n    this.awaitData = false;\n    this.exhaust = false;\n    this.partial = false;\n  }\n  /** Assign next request Id. */\n  _createClass(Query, [{\n    key: \"incRequestId\",\n    value: function incRequestId() {\n      this.requestId = _requestId++;\n    }\n    /** Peek next request Id. */\n  }, {\n    key: \"nextRequestId\",\n    value: function nextRequestId() {\n      return _requestId + 1;\n    }\n    /** Increment then return next request Id. */\n  }, {\n    key: \"toBin\",\n    value:\n    // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n    function toBin() {\n      var buffers = [];\n      var projection = null;\n      // Set up the flags\n      var flags = 0;\n      if (this.tailable) {\n        flags |= OPTS_TAILABLE_CURSOR;\n      }\n      if (this.secondaryOk) {\n        flags |= OPTS_SECONDARY;\n      }\n      if (this.oplogReplay) {\n        flags |= OPTS_OPLOG_REPLAY;\n      }\n      if (this.noCursorTimeout) {\n        flags |= OPTS_NO_CURSOR_TIMEOUT;\n      }\n      if (this.awaitData) {\n        flags |= OPTS_AWAIT_DATA;\n      }\n      if (this.exhaust) {\n        flags |= OPTS_EXHAUST;\n      }\n      if (this.partial) {\n        flags |= OPTS_PARTIAL;\n      }\n      // If batchSize is different to this.numberToReturn\n      if (this.batchSize !== this.numberToReturn) this.numberToReturn = this.batchSize;\n      // Allocate write protocol header buffer\n      var header = Buffer.alloc(4 * 4 +\n      // Header\n      4 +\n      // Flags\n      Buffer.byteLength(this.ns) + 1 +\n      // namespace\n      4 +\n      // numberToSkip\n      4 // numberToReturn\n      );\n      // Add header to buffers\n      buffers.push(header);\n      // Serialize the query\n      var query = BSON.serialize(this.query, {\n        checkKeys: this.checkKeys,\n        serializeFunctions: this.serializeFunctions,\n        ignoreUndefined: this.ignoreUndefined\n      });\n      // Add query document\n      buffers.push(query);\n      if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n        // Serialize the projection document\n        projection = BSON.serialize(this.returnFieldSelector, {\n          checkKeys: this.checkKeys,\n          serializeFunctions: this.serializeFunctions,\n          ignoreUndefined: this.ignoreUndefined\n        });\n        // Add projection document\n        buffers.push(projection);\n      }\n      // Total message size\n      var totalLength = header.length + query.length + (projection ? projection.length : 0);\n      // Set up the index\n      var index = 4;\n      // Write total document length\n      header[3] = totalLength >> 24 & 0xff;\n      header[2] = totalLength >> 16 & 0xff;\n      header[1] = totalLength >> 8 & 0xff;\n      header[0] = totalLength & 0xff;\n      // Write header information requestId\n      header[index + 3] = this.requestId >> 24 & 0xff;\n      header[index + 2] = this.requestId >> 16 & 0xff;\n      header[index + 1] = this.requestId >> 8 & 0xff;\n      header[index] = this.requestId & 0xff;\n      index = index + 4;\n      // Write header information responseTo\n      header[index + 3] = 0 >> 24 & 0xff;\n      header[index + 2] = 0 >> 16 & 0xff;\n      header[index + 1] = 0 >> 8 & 0xff;\n      header[index] = 0 & 0xff;\n      index = index + 4;\n      // Write header information OP_QUERY\n      header[index + 3] = constants_1.OP_QUERY >> 24 & 0xff;\n      header[index + 2] = constants_1.OP_QUERY >> 16 & 0xff;\n      header[index + 1] = constants_1.OP_QUERY >> 8 & 0xff;\n      header[index] = constants_1.OP_QUERY & 0xff;\n      index = index + 4;\n      // Write header information flags\n      header[index + 3] = flags >> 24 & 0xff;\n      header[index + 2] = flags >> 16 & 0xff;\n      header[index + 1] = flags >> 8 & 0xff;\n      header[index] = flags & 0xff;\n      index = index + 4;\n      // Write collection name\n      index = index + header.write(this.ns, index, 'utf8') + 1;\n      header[index - 1] = 0;\n      // Write header information flags numberToSkip\n      header[index + 3] = this.numberToSkip >> 24 & 0xff;\n      header[index + 2] = this.numberToSkip >> 16 & 0xff;\n      header[index + 1] = this.numberToSkip >> 8 & 0xff;\n      header[index] = this.numberToSkip & 0xff;\n      index = index + 4;\n      // Write header information flags numberToReturn\n      header[index + 3] = this.numberToReturn >> 24 & 0xff;\n      header[index + 2] = this.numberToReturn >> 16 & 0xff;\n      header[index + 1] = this.numberToReturn >> 8 & 0xff;\n      header[index] = this.numberToReturn & 0xff;\n      index = index + 4;\n      // Return the buffers\n      return buffers;\n    }\n  }], [{\n    key: \"getRequestId\",\n    value: function getRequestId() {\n      return ++_requestId;\n    }\n  }]);\n  return Query;\n}();\nexports.Query = Query;\n/** @internal */\nvar Response = /*#__PURE__*/function () {\n  function Response(message, msgHeader, msgBody, opts) {\n    _classCallCheck(this, Response);\n    this.documents = new Array(0);\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts !== null && opts !== void 0 ? opts : {\n      useBigInt64: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    };\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n    // Flag values\n    this.useBigInt64 = typeof this.opts.useBigInt64 === 'boolean' ? this.opts.useBigInt64 : false;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues = typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers = typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n  }\n  _createClass(Response, [{\n    key: \"isParsed\",\n    value: function isParsed() {\n      return this.parsed;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(options) {\n      var _options2, _options$useBigInt, _options$promoteLongs, _options$promoteValue, _options$promoteBuffe, _options$bsonRegExp;\n      // Don't parse again if not needed\n      if (this.parsed) return;\n      options = (_options2 = options) !== null && _options2 !== void 0 ? _options2 : {};\n      // Allow the return of raw documents instead of parsing\n      var raw = options.raw || false;\n      var documentsReturnedIn = options.documentsReturnedIn || null;\n      var useBigInt64 = (_options$useBigInt = options.useBigInt64) !== null && _options$useBigInt !== void 0 ? _options$useBigInt : this.opts.useBigInt64;\n      var promoteLongs = (_options$promoteLongs = options.promoteLongs) !== null && _options$promoteLongs !== void 0 ? _options$promoteLongs : this.opts.promoteLongs;\n      var promoteValues = (_options$promoteValue = options.promoteValues) !== null && _options$promoteValue !== void 0 ? _options$promoteValue : this.opts.promoteValues;\n      var promoteBuffers = (_options$promoteBuffe = options.promoteBuffers) !== null && _options$promoteBuffe !== void 0 ? _options$promoteBuffe : this.opts.promoteBuffers;\n      var bsonRegExp = (_options$bsonRegExp = options.bsonRegExp) !== null && _options$bsonRegExp !== void 0 ? _options$bsonRegExp : this.opts.bsonRegExp;\n      var bsonSize;\n      // Set up the options\n      var _options = {\n        useBigInt64: useBigInt64,\n        promoteLongs: promoteLongs,\n        promoteValues: promoteValues,\n        promoteBuffers: promoteBuffers,\n        bsonRegExp: bsonRegExp\n      };\n      // Position within OP_REPLY at which documents start\n      // (See https://www.mongodb.com/docs/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n      this.index = 20;\n      // Read the message body\n      this.responseFlags = this.data.readInt32LE(0);\n      this.cursorId = new BSON.Long(this.data.readInt32LE(4), this.data.readInt32LE(8));\n      this.startingFrom = this.data.readInt32LE(12);\n      this.numberReturned = this.data.readInt32LE(16);\n      // Preallocate document array\n      this.documents = new Array(this.numberReturned);\n      this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n      this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n      this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n      this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n      // Parse Body\n      for (var i = 0; i < this.numberReturned; i++) {\n        bsonSize = this.data[this.index] | this.data[this.index + 1] << 8 | this.data[this.index + 2] << 16 | this.data[this.index + 3] << 24;\n        // If we have raw results specified slice the return document\n        if (raw) {\n          this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n        } else {\n          this.documents[i] = BSON.deserialize(this.data.slice(this.index, this.index + bsonSize), _options);\n        }\n        // Adjust the index\n        this.index = this.index + bsonSize;\n      }\n      if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n        var fieldsAsRaw = {};\n        fieldsAsRaw[documentsReturnedIn] = true;\n        _options.fieldsAsRaw = fieldsAsRaw;\n        var doc = BSON.deserialize(this.documents[0], _options);\n        this.documents = [doc];\n      }\n      // Set parsed\n      this.parsed = true;\n    }\n  }]);\n  return Response;\n}();\nexports.Response = Response;\n// Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n// Msg Flags\nvar OPTS_CHECKSUM_PRESENT = 1;\nvar OPTS_MORE_TO_COME = 2;\nvar OPTS_EXHAUST_ALLOWED = 1 << 16;\n/** @internal */\nvar Msg = /*#__PURE__*/function () {\n  function Msg(ns, command, options) {\n    _classCallCheck(this, Msg);\n    // Basic options needed to be passed in\n    if (command == null) throw new error_1.MongoInvalidArgumentError('Query document must be specified for query');\n    // Basic options\n    this.ns = ns;\n    this.command = command;\n    this.command.$db = (0, utils_1.databaseNamespace)(ns);\n    if (options.readPreference && options.readPreference.mode !== read_preference_1.ReadPreference.PRIMARY) {\n      this.command.$readPreference = options.readPreference.toJSON();\n    }\n    // Ensure empty options\n    this.options = options !== null && options !== void 0 ? options : {};\n    // Additional options\n    this.requestId = options.requestId ? options.requestId : Msg.getRequestId();\n    // Serialization option\n    this.serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n    // flags\n    this.checksumPresent = false;\n    this.moreToCome = options.moreToCome || false;\n    this.exhaustAllowed = typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n  }\n  _createClass(Msg, [{\n    key: \"toBin\",\n    value: function toBin() {\n      var buffers = [];\n      var flags = 0;\n      if (this.checksumPresent) {\n        flags |= OPTS_CHECKSUM_PRESENT;\n      }\n      if (this.moreToCome) {\n        flags |= OPTS_MORE_TO_COME;\n      }\n      if (this.exhaustAllowed) {\n        flags |= OPTS_EXHAUST_ALLOWED;\n      }\n      var header = Buffer.alloc(4 * 4 +\n      // Header\n      4 // Flags\n      );\n\n      buffers.push(header);\n      var totalLength = header.length;\n      var command = this.command;\n      totalLength += this.makeDocumentSegment(buffers, command);\n      header.writeInt32LE(totalLength, 0); // messageLength\n      header.writeInt32LE(this.requestId, 4); // requestID\n      header.writeInt32LE(0, 8); // responseTo\n      header.writeInt32LE(constants_1.OP_MSG, 12); // opCode\n      header.writeUInt32LE(flags, 16); // flags\n      return buffers;\n    }\n  }, {\n    key: \"makeDocumentSegment\",\n    value: function makeDocumentSegment(buffers, document) {\n      var payloadTypeBuffer = Buffer.alloc(1);\n      payloadTypeBuffer[0] = 0;\n      var documentBuffer = this.serializeBson(document);\n      buffers.push(payloadTypeBuffer);\n      buffers.push(documentBuffer);\n      return payloadTypeBuffer.length + documentBuffer.length;\n    }\n  }, {\n    key: \"serializeBson\",\n    value: function serializeBson(document) {\n      return BSON.serialize(document, {\n        checkKeys: this.checkKeys,\n        serializeFunctions: this.serializeFunctions,\n        ignoreUndefined: this.ignoreUndefined\n      });\n    }\n  }], [{\n    key: \"getRequestId\",\n    value: function getRequestId() {\n      _requestId = _requestId + 1 & 0x7fffffff;\n      return _requestId;\n    }\n  }]);\n  return Msg;\n}();\nexports.Msg = Msg;\n/** @internal */\nvar BinMsg = /*#__PURE__*/function () {\n  function BinMsg(message, msgHeader, msgBody, opts) {\n    _classCallCheck(this, BinMsg);\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts !== null && opts !== void 0 ? opts : {\n      useBigInt64: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    };\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n    // Read response flags\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n    this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n    this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n    this.useBigInt64 = typeof this.opts.useBigInt64 === 'boolean' ? this.opts.useBigInt64 : false;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues = typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers = typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n    this.documents = [];\n  }\n  _createClass(BinMsg, [{\n    key: \"isParsed\",\n    value: function isParsed() {\n      return this.parsed;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(options) {\n      var _options3, _options$useBigInt2, _options$promoteLongs2, _options$promoteValue2, _options$promoteBuffe2, _options$bsonRegExp2;\n      // Don't parse again if not needed\n      if (this.parsed) return;\n      options = (_options3 = options) !== null && _options3 !== void 0 ? _options3 : {};\n      this.index = 4;\n      // Allow the return of raw documents instead of parsing\n      var raw = options.raw || false;\n      var documentsReturnedIn = options.documentsReturnedIn || null;\n      var useBigInt64 = (_options$useBigInt2 = options.useBigInt64) !== null && _options$useBigInt2 !== void 0 ? _options$useBigInt2 : this.opts.useBigInt64;\n      var promoteLongs = (_options$promoteLongs2 = options.promoteLongs) !== null && _options$promoteLongs2 !== void 0 ? _options$promoteLongs2 : this.opts.promoteLongs;\n      var promoteValues = (_options$promoteValue2 = options.promoteValues) !== null && _options$promoteValue2 !== void 0 ? _options$promoteValue2 : this.opts.promoteValues;\n      var promoteBuffers = (_options$promoteBuffe2 = options.promoteBuffers) !== null && _options$promoteBuffe2 !== void 0 ? _options$promoteBuffe2 : this.opts.promoteBuffers;\n      var bsonRegExp = (_options$bsonRegExp2 = options.bsonRegExp) !== null && _options$bsonRegExp2 !== void 0 ? _options$bsonRegExp2 : this.opts.bsonRegExp;\n      var validation = this.parseBsonSerializationOptions(options);\n      // Set up the options\n      var bsonOptions = {\n        useBigInt64: useBigInt64,\n        promoteLongs: promoteLongs,\n        promoteValues: promoteValues,\n        promoteBuffers: promoteBuffers,\n        bsonRegExp: bsonRegExp,\n        validation: validation\n        // Due to the strictness of the BSON libraries validation option we need this cast\n      };\n\n      while (this.index < this.data.length) {\n        var payloadType = this.data.readUInt8(this.index++);\n        if (payloadType === 0) {\n          var bsonSize = this.data.readUInt32LE(this.index);\n          var bin = this.data.slice(this.index, this.index + bsonSize);\n          this.documents.push(raw ? bin : BSON.deserialize(bin, bsonOptions));\n          this.index += bsonSize;\n        } else if (payloadType === 1) {\n          // It was decided that no driver makes use of payload type 1\n          // TODO(NODE-3483): Replace with MongoDeprecationError\n          throw new error_1.MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n        }\n      }\n      if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n        var fieldsAsRaw = {};\n        fieldsAsRaw[documentsReturnedIn] = true;\n        bsonOptions.fieldsAsRaw = fieldsAsRaw;\n        var doc = BSON.deserialize(this.documents[0], bsonOptions);\n        this.documents = [doc];\n      }\n      this.parsed = true;\n    }\n  }, {\n    key: \"parseBsonSerializationOptions\",\n    value: function parseBsonSerializationOptions(_ref) {\n      var enableUtf8Validation = _ref.enableUtf8Validation;\n      if (enableUtf8Validation === false) {\n        return {\n          utf8: false\n        };\n      }\n      return {\n        utf8: {\n          writeErrors: false\n        }\n      };\n    }\n  }]);\n  return BinMsg;\n}();\nexports.BinMsg = BinMsg;","map":{"version":3,"names":["BSON","require","error_1","read_preference_1","utils_1","constants_1","_requestId","OPTS_TAILABLE_CURSOR","OPTS_SECONDARY","OPTS_OPLOG_REPLAY","OPTS_NO_CURSOR_TIMEOUT","OPTS_AWAIT_DATA","OPTS_EXHAUST","OPTS_PARTIAL","CURSOR_NOT_FOUND","QUERY_FAILURE","SHARD_CONFIG_STALE","AWAIT_CAPABLE","Query","ns","query","options","_classCallCheck","MongoRuntimeError","indexOf","numberToSkip","numberToReturn","returnFieldSelector","undefined","requestId","getRequestId","pre32Limit","serializeFunctions","ignoreUndefined","maxBsonSize","checkKeys","batchSize","tailable","secondaryOk","oplogReplay","noCursorTimeout","awaitData","exhaust","partial","_createClass","key","value","incRequestId","nextRequestId","toBin","buffers","projection","flags","header","Buffer","alloc","byteLength","push","serialize","Object","keys","length","totalLength","index","OP_QUERY","write","exports","Response","message","msgHeader","msgBody","opts","documents","Array","parsed","raw","data","useBigInt64","promoteLongs","promoteValues","promoteBuffers","bsonRegExp","responseTo","opCode","fromCompressed","isParsed","parse","_options2","_options$useBigInt","_options$promoteLongs","_options$promoteValue","_options$promoteBuffe","_options$bsonRegExp","documentsReturnedIn","bsonSize","_options","responseFlags","readInt32LE","cursorId","Long","startingFrom","numberReturned","cursorNotFound","queryFailure","shardConfigStale","awaitCapable","i","slice","deserialize","fieldsAsRaw","doc","OPTS_CHECKSUM_PRESENT","OPTS_MORE_TO_COME","OPTS_EXHAUST_ALLOWED","Msg","command","MongoInvalidArgumentError","$db","databaseNamespace","readPreference","mode","ReadPreference","PRIMARY","$readPreference","toJSON","checksumPresent","moreToCome","exhaustAllowed","makeDocumentSegment","writeInt32LE","OP_MSG","writeUInt32LE","document","payloadTypeBuffer","documentBuffer","serializeBson","BinMsg","_options3","_options$useBigInt2","_options$promoteLongs2","_options$promoteValue2","_options$promoteBuffe2","_options$bsonRegExp2","validation","parseBsonSerializationOptions","bsonOptions","payloadType","readUInt8","readUInt32LE","bin","_ref","enableUtf8Validation","utf8","writeErrors"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/cmap/commands.ts"],"sourcesContent":["import type { BSONSerializeOptions, Document, Long } from '../bson';\nimport * as BSON from '../bson';\nimport { MongoInvalidArgumentError, MongoRuntimeError } from '../error';\nimport { ReadPreference } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport { databaseNamespace } from '../utils';\nimport type { CommandOptions } from './connection';\nimport { OP_MSG, OP_QUERY } from './wire_protocol/constants';\n\n// Incrementing request id\nlet _requestId = 0;\n\n// Query flags\nconst OPTS_TAILABLE_CURSOR = 2;\nconst OPTS_SECONDARY = 4;\nconst OPTS_OPLOG_REPLAY = 8;\nconst OPTS_NO_CURSOR_TIMEOUT = 16;\nconst OPTS_AWAIT_DATA = 32;\nconst OPTS_EXHAUST = 64;\nconst OPTS_PARTIAL = 128;\n\n// Response flags\nconst CURSOR_NOT_FOUND = 1;\nconst QUERY_FAILURE = 2;\nconst SHARD_CONFIG_STALE = 4;\nconst AWAIT_CAPABLE = 8;\n\n/** @internal */\nexport type WriteProtocolMessageType = Query | Msg;\n\n/** @internal */\nexport interface OpQueryOptions extends CommandOptions {\n  socketTimeoutMS?: number;\n  session?: ClientSession;\n  documentsReturnedIn?: string;\n  numberToSkip?: number;\n  numberToReturn?: number;\n  returnFieldSelector?: Document;\n  pre32Limit?: number;\n  serializeFunctions?: boolean;\n  ignoreUndefined?: boolean;\n  maxBsonSize?: number;\n  checkKeys?: boolean;\n  secondaryOk?: boolean;\n\n  requestId?: number;\n  moreToCome?: boolean;\n  exhaustAllowed?: boolean;\n  readPreference?: ReadPreference;\n}\n\n/**************************************************************\n * QUERY\n **************************************************************/\n/** @internal */\nexport class Query {\n  ns: string;\n  query: Document;\n  numberToSkip: number;\n  numberToReturn: number;\n  returnFieldSelector?: Document;\n  requestId: number;\n  pre32Limit?: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  maxBsonSize: number;\n  checkKeys: boolean;\n  batchSize: number;\n  tailable: boolean;\n  secondaryOk: boolean;\n  oplogReplay: boolean;\n  noCursorTimeout: boolean;\n  awaitData: boolean;\n  exhaust: boolean;\n  partial: boolean;\n  documentsReturnedIn?: string;\n\n  constructor(ns: string, query: Document, options: OpQueryOptions) {\n    // Basic options needed to be passed in\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (ns == null) throw new MongoRuntimeError('Namespace must be specified for query');\n    // TODO(NODE-3483): Replace with MongoCommandError\n    if (query == null) throw new MongoRuntimeError('A query document must be specified for query');\n\n    // Validate that we are not passing 0x00 in the collection name\n    if (ns.indexOf('\\x00') !== -1) {\n      // TODO(NODE-3483): Use MongoNamespace static method\n      throw new MongoRuntimeError('Namespace cannot contain a null character');\n    }\n\n    // Basic options\n    this.ns = ns;\n    this.query = query;\n\n    // Additional options\n    this.numberToSkip = options.numberToSkip || 0;\n    this.numberToReturn = options.numberToReturn || 0;\n    this.returnFieldSelector = options.returnFieldSelector || undefined;\n    this.requestId = Query.getRequestId();\n\n    // special case for pre-3.2 find commands, delete ASAP\n    this.pre32Limit = options.pre32Limit;\n\n    // Serialization option\n    this.serializeFunctions =\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined =\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.batchSize = this.numberToReturn;\n\n    // Flags\n    this.tailable = false;\n    this.secondaryOk = typeof options.secondaryOk === 'boolean' ? options.secondaryOk : false;\n    this.oplogReplay = false;\n    this.noCursorTimeout = false;\n    this.awaitData = false;\n    this.exhaust = false;\n    this.partial = false;\n  }\n\n  /** Assign next request Id. */\n  incRequestId(): void {\n    this.requestId = _requestId++;\n  }\n\n  /** Peek next request Id. */\n  nextRequestId(): number {\n    return _requestId + 1;\n  }\n\n  /** Increment then return next request Id. */\n  static getRequestId(): number {\n    return ++_requestId;\n  }\n\n  // Uses a single allocated buffer for the process, avoiding multiple memory allocations\n  toBin(): Uint8Array[] {\n    const buffers = [];\n    let projection = null;\n\n    // Set up the flags\n    let flags = 0;\n    if (this.tailable) {\n      flags |= OPTS_TAILABLE_CURSOR;\n    }\n\n    if (this.secondaryOk) {\n      flags |= OPTS_SECONDARY;\n    }\n\n    if (this.oplogReplay) {\n      flags |= OPTS_OPLOG_REPLAY;\n    }\n\n    if (this.noCursorTimeout) {\n      flags |= OPTS_NO_CURSOR_TIMEOUT;\n    }\n\n    if (this.awaitData) {\n      flags |= OPTS_AWAIT_DATA;\n    }\n\n    if (this.exhaust) {\n      flags |= OPTS_EXHAUST;\n    }\n\n    if (this.partial) {\n      flags |= OPTS_PARTIAL;\n    }\n\n    // If batchSize is different to this.numberToReturn\n    if (this.batchSize !== this.numberToReturn) this.numberToReturn = this.batchSize;\n\n    // Allocate write protocol header buffer\n    const header = Buffer.alloc(\n      4 * 4 + // Header\n        4 + // Flags\n        Buffer.byteLength(this.ns) +\n        1 + // namespace\n        4 + // numberToSkip\n        4 // numberToReturn\n    );\n\n    // Add header to buffers\n    buffers.push(header);\n\n    // Serialize the query\n    const query = BSON.serialize(this.query, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n\n    // Add query document\n    buffers.push(query);\n\n    if (this.returnFieldSelector && Object.keys(this.returnFieldSelector).length > 0) {\n      // Serialize the projection document\n      projection = BSON.serialize(this.returnFieldSelector, {\n        checkKeys: this.checkKeys,\n        serializeFunctions: this.serializeFunctions,\n        ignoreUndefined: this.ignoreUndefined\n      });\n      // Add projection document\n      buffers.push(projection);\n    }\n\n    // Total message size\n    const totalLength = header.length + query.length + (projection ? projection.length : 0);\n\n    // Set up the index\n    let index = 4;\n\n    // Write total document length\n    header[3] = (totalLength >> 24) & 0xff;\n    header[2] = (totalLength >> 16) & 0xff;\n    header[1] = (totalLength >> 8) & 0xff;\n    header[0] = totalLength & 0xff;\n\n    // Write header information requestId\n    header[index + 3] = (this.requestId >> 24) & 0xff;\n    header[index + 2] = (this.requestId >> 16) & 0xff;\n    header[index + 1] = (this.requestId >> 8) & 0xff;\n    header[index] = this.requestId & 0xff;\n    index = index + 4;\n\n    // Write header information responseTo\n    header[index + 3] = (0 >> 24) & 0xff;\n    header[index + 2] = (0 >> 16) & 0xff;\n    header[index + 1] = (0 >> 8) & 0xff;\n    header[index] = 0 & 0xff;\n    index = index + 4;\n\n    // Write header information OP_QUERY\n    header[index + 3] = (OP_QUERY >> 24) & 0xff;\n    header[index + 2] = (OP_QUERY >> 16) & 0xff;\n    header[index + 1] = (OP_QUERY >> 8) & 0xff;\n    header[index] = OP_QUERY & 0xff;\n    index = index + 4;\n\n    // Write header information flags\n    header[index + 3] = (flags >> 24) & 0xff;\n    header[index + 2] = (flags >> 16) & 0xff;\n    header[index + 1] = (flags >> 8) & 0xff;\n    header[index] = flags & 0xff;\n    index = index + 4;\n\n    // Write collection name\n    index = index + header.write(this.ns, index, 'utf8') + 1;\n    header[index - 1] = 0;\n\n    // Write header information flags numberToSkip\n    header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n    header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n    header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n    header[index] = this.numberToSkip & 0xff;\n    index = index + 4;\n\n    // Write header information flags numberToReturn\n    header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n    header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n    header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n    header[index] = this.numberToReturn & 0xff;\n    index = index + 4;\n\n    // Return the buffers\n    return buffers;\n  }\n}\n\n/** @internal */\nexport interface MessageHeader {\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n}\n\n/** @internal */\nexport interface OpResponseOptions extends BSONSerializeOptions {\n  documentsReturnedIn?: string | null;\n}\n\n/** @internal */\nexport class Response {\n  parsed: boolean;\n  raw: Buffer;\n  data: Buffer;\n  opts: OpResponseOptions;\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n  responseFlags?: number;\n  cursorId?: Long;\n  startingFrom?: number;\n  numberReturned?: number;\n  documents: (Document | Buffer)[] = new Array(0);\n  cursorNotFound?: boolean;\n  queryFailure?: boolean;\n  shardConfigStale?: boolean;\n  awaitCapable?: boolean;\n  useBigInt64: boolean;\n  promoteLongs: boolean;\n  promoteValues: boolean;\n  promoteBuffers: boolean;\n  bsonRegExp?: boolean;\n  index?: number;\n\n  constructor(\n    message: Buffer,\n    msgHeader: MessageHeader,\n    msgBody: Buffer,\n    opts?: OpResponseOptions\n  ) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts ?? {\n      useBigInt64: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    };\n\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n\n    // Flag values\n    this.useBigInt64 = typeof this.opts.useBigInt64 === 'boolean' ? this.opts.useBigInt64 : false;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues =\n      typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers =\n      typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n  }\n\n  isParsed(): boolean {\n    return this.parsed;\n  }\n\n  parse(options: OpResponseOptions): void {\n    // Don't parse again if not needed\n    if (this.parsed) return;\n    options = options ?? {};\n\n    // Allow the return of raw documents instead of parsing\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const useBigInt64 = options.useBigInt64 ?? this.opts.useBigInt64;\n    const promoteLongs = options.promoteLongs ?? this.opts.promoteLongs;\n    const promoteValues = options.promoteValues ?? this.opts.promoteValues;\n    const promoteBuffers = options.promoteBuffers ?? this.opts.promoteBuffers;\n    const bsonRegExp = options.bsonRegExp ?? this.opts.bsonRegExp;\n    let bsonSize;\n\n    // Set up the options\n    const _options: BSONSerializeOptions = {\n      useBigInt64,\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp\n    };\n\n    // Position within OP_REPLY at which documents start\n    // (See https://www.mongodb.com/docs/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n    this.index = 20;\n\n    // Read the message body\n    this.responseFlags = this.data.readInt32LE(0);\n    this.cursorId = new BSON.Long(this.data.readInt32LE(4), this.data.readInt32LE(8));\n    this.startingFrom = this.data.readInt32LE(12);\n    this.numberReturned = this.data.readInt32LE(16);\n\n    // Preallocate document array\n    this.documents = new Array(this.numberReturned);\n\n    this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n    this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n    this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n    this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n\n    // Parse Body\n    for (let i = 0; i < this.numberReturned; i++) {\n      bsonSize =\n        this.data[this.index] |\n        (this.data[this.index + 1] << 8) |\n        (this.data[this.index + 2] << 16) |\n        (this.data[this.index + 3] << 24);\n\n      // If we have raw results specified slice the return document\n      if (raw) {\n        this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n      } else {\n        this.documents[i] = BSON.deserialize(\n          this.data.slice(this.index, this.index + bsonSize),\n          _options\n        );\n      }\n\n      // Adjust the index\n      this.index = this.index + bsonSize;\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw: Document = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      _options.fieldsAsRaw = fieldsAsRaw;\n\n      const doc = BSON.deserialize(this.documents[0] as Buffer, _options);\n      this.documents = [doc];\n    }\n\n    // Set parsed\n    this.parsed = true;\n  }\n}\n\n// Implementation of OP_MSG spec:\n// https://github.com/mongodb/specifications/blob/master/source/message/OP_MSG.rst\n//\n// struct Section {\n//   uint8 payloadType;\n//   union payload {\n//       document  document; // payloadType == 0\n//       struct sequence { // payloadType == 1\n//           int32      size;\n//           cstring    identifier;\n//           document*  documents;\n//       };\n//   };\n// };\n\n// struct OP_MSG {\n//   struct MsgHeader {\n//       int32  messageLength;\n//       int32  requestID;\n//       int32  responseTo;\n//       int32  opCode = 2013;\n//   };\n//   uint32      flagBits;\n//   Section+    sections;\n//   [uint32     checksum;]\n// };\n\n// Msg Flags\nconst OPTS_CHECKSUM_PRESENT = 1;\nconst OPTS_MORE_TO_COME = 2;\nconst OPTS_EXHAUST_ALLOWED = 1 << 16;\n\n/** @internal */\nexport interface OpMsgOptions {\n  requestId: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  checkKeys: boolean;\n  maxBsonSize: number;\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n  readPreference: ReadPreference;\n}\n\n/** @internal */\nexport class Msg {\n  ns: string;\n  command: Document;\n  options: OpQueryOptions;\n  requestId: number;\n  serializeFunctions: boolean;\n  ignoreUndefined: boolean;\n  checkKeys: boolean;\n  maxBsonSize: number;\n  checksumPresent: boolean;\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n\n  constructor(ns: string, command: Document, options: OpQueryOptions) {\n    // Basic options needed to be passed in\n    if (command == null)\n      throw new MongoInvalidArgumentError('Query document must be specified for query');\n\n    // Basic options\n    this.ns = ns;\n    this.command = command;\n    this.command.$db = databaseNamespace(ns);\n\n    if (options.readPreference && options.readPreference.mode !== ReadPreference.PRIMARY) {\n      this.command.$readPreference = options.readPreference.toJSON();\n    }\n\n    // Ensure empty options\n    this.options = options ?? {};\n\n    // Additional options\n    this.requestId = options.requestId ? options.requestId : Msg.getRequestId();\n\n    // Serialization option\n    this.serializeFunctions =\n      typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    this.ignoreUndefined =\n      typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n    this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n\n    // flags\n    this.checksumPresent = false;\n    this.moreToCome = options.moreToCome || false;\n    this.exhaustAllowed =\n      typeof options.exhaustAllowed === 'boolean' ? options.exhaustAllowed : false;\n  }\n\n  toBin(): Buffer[] {\n    const buffers: Buffer[] = [];\n    let flags = 0;\n\n    if (this.checksumPresent) {\n      flags |= OPTS_CHECKSUM_PRESENT;\n    }\n\n    if (this.moreToCome) {\n      flags |= OPTS_MORE_TO_COME;\n    }\n\n    if (this.exhaustAllowed) {\n      flags |= OPTS_EXHAUST_ALLOWED;\n    }\n\n    const header = Buffer.alloc(\n      4 * 4 + // Header\n        4 // Flags\n    );\n\n    buffers.push(header);\n\n    let totalLength = header.length;\n    const command = this.command;\n    totalLength += this.makeDocumentSegment(buffers, command);\n\n    header.writeInt32LE(totalLength, 0); // messageLength\n    header.writeInt32LE(this.requestId, 4); // requestID\n    header.writeInt32LE(0, 8); // responseTo\n    header.writeInt32LE(OP_MSG, 12); // opCode\n    header.writeUInt32LE(flags, 16); // flags\n    return buffers;\n  }\n\n  makeDocumentSegment(buffers: Uint8Array[], document: Document): number {\n    const payloadTypeBuffer = Buffer.alloc(1);\n    payloadTypeBuffer[0] = 0;\n\n    const documentBuffer = this.serializeBson(document);\n    buffers.push(payloadTypeBuffer);\n    buffers.push(documentBuffer);\n\n    return payloadTypeBuffer.length + documentBuffer.length;\n  }\n\n  serializeBson(document: Document): Uint8Array {\n    return BSON.serialize(document, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n  }\n\n  static getRequestId(): number {\n    _requestId = (_requestId + 1) & 0x7fffffff;\n    return _requestId;\n  }\n}\n\n/** @internal */\nexport class BinMsg {\n  parsed: boolean;\n  raw: Buffer;\n  data: Buffer;\n  opts: OpResponseOptions;\n  length: number;\n  requestId: number;\n  responseTo: number;\n  opCode: number;\n  fromCompressed?: boolean;\n  responseFlags: number;\n  checksumPresent: boolean;\n  moreToCome: boolean;\n  exhaustAllowed: boolean;\n  useBigInt64: boolean;\n  promoteLongs: boolean;\n  promoteValues: boolean;\n  promoteBuffers: boolean;\n  bsonRegExp: boolean;\n  documents: (Document | Buffer)[];\n  index?: number;\n\n  constructor(\n    message: Buffer,\n    msgHeader: MessageHeader,\n    msgBody: Buffer,\n    opts?: OpResponseOptions\n  ) {\n    this.parsed = false;\n    this.raw = message;\n    this.data = msgBody;\n    this.opts = opts ?? {\n      useBigInt64: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      bsonRegExp: false\n    };\n\n    // Read the message header\n    this.length = msgHeader.length;\n    this.requestId = msgHeader.requestId;\n    this.responseTo = msgHeader.responseTo;\n    this.opCode = msgHeader.opCode;\n    this.fromCompressed = msgHeader.fromCompressed;\n\n    // Read response flags\n    this.responseFlags = msgBody.readInt32LE(0);\n    this.checksumPresent = (this.responseFlags & OPTS_CHECKSUM_PRESENT) !== 0;\n    this.moreToCome = (this.responseFlags & OPTS_MORE_TO_COME) !== 0;\n    this.exhaustAllowed = (this.responseFlags & OPTS_EXHAUST_ALLOWED) !== 0;\n    this.useBigInt64 = typeof this.opts.useBigInt64 === 'boolean' ? this.opts.useBigInt64 : false;\n    this.promoteLongs = typeof this.opts.promoteLongs === 'boolean' ? this.opts.promoteLongs : true;\n    this.promoteValues =\n      typeof this.opts.promoteValues === 'boolean' ? this.opts.promoteValues : true;\n    this.promoteBuffers =\n      typeof this.opts.promoteBuffers === 'boolean' ? this.opts.promoteBuffers : false;\n    this.bsonRegExp = typeof this.opts.bsonRegExp === 'boolean' ? this.opts.bsonRegExp : false;\n\n    this.documents = [];\n  }\n\n  isParsed(): boolean {\n    return this.parsed;\n  }\n\n  parse(options: OpResponseOptions): void {\n    // Don't parse again if not needed\n    if (this.parsed) return;\n    options = options ?? {};\n\n    this.index = 4;\n    // Allow the return of raw documents instead of parsing\n    const raw = options.raw || false;\n    const documentsReturnedIn = options.documentsReturnedIn || null;\n    const useBigInt64 = options.useBigInt64 ?? this.opts.useBigInt64;\n    const promoteLongs = options.promoteLongs ?? this.opts.promoteLongs;\n    const promoteValues = options.promoteValues ?? this.opts.promoteValues;\n    const promoteBuffers = options.promoteBuffers ?? this.opts.promoteBuffers;\n    const bsonRegExp = options.bsonRegExp ?? this.opts.bsonRegExp;\n    const validation = this.parseBsonSerializationOptions(options);\n\n    // Set up the options\n    const bsonOptions: BSONSerializeOptions = {\n      useBigInt64,\n      promoteLongs,\n      promoteValues,\n      promoteBuffers,\n      bsonRegExp,\n      validation\n      // Due to the strictness of the BSON libraries validation option we need this cast\n    } as BSONSerializeOptions & { validation: { utf8: { writeErrors: boolean } } };\n\n    while (this.index < this.data.length) {\n      const payloadType = this.data.readUInt8(this.index++);\n      if (payloadType === 0) {\n        const bsonSize = this.data.readUInt32LE(this.index);\n        const bin = this.data.slice(this.index, this.index + bsonSize);\n        this.documents.push(raw ? bin : BSON.deserialize(bin, bsonOptions));\n        this.index += bsonSize;\n      } else if (payloadType === 1) {\n        // It was decided that no driver makes use of payload type 1\n\n        // TODO(NODE-3483): Replace with MongoDeprecationError\n        throw new MongoRuntimeError('OP_MSG Payload Type 1 detected unsupported protocol');\n      }\n    }\n\n    if (this.documents.length === 1 && documentsReturnedIn != null && raw) {\n      const fieldsAsRaw: Document = {};\n      fieldsAsRaw[documentsReturnedIn] = true;\n      bsonOptions.fieldsAsRaw = fieldsAsRaw;\n      const doc = BSON.deserialize(this.documents[0] as Buffer, bsonOptions);\n      this.documents = [doc];\n    }\n\n    this.parsed = true;\n  }\n\n  parseBsonSerializationOptions({ enableUtf8Validation }: BSONSerializeOptions): {\n    utf8: { writeErrors: false } | false;\n  } {\n    if (enableUtf8Validation === false) {\n      return { utf8: false };\n    }\n\n    return { utf8: { writeErrors: false } };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}