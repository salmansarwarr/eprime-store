{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RunCommandCursor = void 0;\nvar error_1 = require(\"../error\");\nvar execute_operation_1 = require(\"../operations/execute_operation\");\nvar get_more_1 = require(\"../operations/get_more\");\nvar run_command_1 = require(\"../operations/run_command\");\nvar utils_1 = require(\"../utils\");\nvar abstract_cursor_1 = require(\"./abstract_cursor\");\n/** @public */\nvar RunCommandCursor = /*#__PURE__*/function (_abstract_cursor_1$Ab) {\n  _inherits(RunCommandCursor, _abstract_cursor_1$Ab);\n  var _super = _createSuper(RunCommandCursor);\n  /** @internal */\n  function RunCommandCursor(db, command) {\n    var _this;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, RunCommandCursor);\n    _this = _super.call(this, db.client, (0, utils_1.ns)(db.namespace), options);\n    _this.getMoreOptions = {};\n    _this.db = db;\n    _this.command = Object.freeze(_objectSpread({}, command));\n    return _this;\n  }\n  /** @internal */\n  _createClass(RunCommandCursor, [{\n    key: \"setComment\",\n    value:\n    /**\n     * Controls the `getMore.comment` field\n     * @param comment - any BSON value\n     */\n    function setComment(comment) {\n      this.getMoreOptions.comment = comment;\n      return this;\n    }\n    /**\n     * Controls the `getMore.maxTimeMS` field. Only valid when cursor is tailable await\n     * @param maxTimeMS - the number of milliseconds to wait for new data\n     */\n  }, {\n    key: \"setMaxTimeMS\",\n    value: function setMaxTimeMS(maxTimeMS) {\n      this.getMoreOptions.maxAwaitTimeMS = maxTimeMS;\n      return this;\n    }\n    /**\n     * Controls the `getMore.batchSize` field\n     * @param maxTimeMS - the number documents to return in the `nextBatch`\n     */\n  }, {\n    key: \"setBatchSize\",\n    value: function setBatchSize(batchSize) {\n      this.getMoreOptions.batchSize = batchSize;\n      return this;\n    }\n    /** Unsupported for RunCommandCursor */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      throw new error_1.MongoAPIError('Clone not supported, create a new cursor with db.runCursorCommand');\n    }\n    /** Unsupported for RunCommandCursor: readConcern must be configured directly on command document */\n  }, {\n    key: \"withReadConcern\",\n    value: function withReadConcern(_) {\n      throw new error_1.MongoAPIError('RunCommandCursor does not support readConcern it must be attached to the command being run');\n    }\n    /** Unsupported for RunCommandCursor: various cursor flags must be configured directly on command document */\n  }, {\n    key: \"addCursorFlag\",\n    value: function addCursorFlag(_, __) {\n      throw new error_1.MongoAPIError('RunCommandCursor does not support cursor flags, they must be attached to the command being run');\n    }\n    /** Unsupported for RunCommandCursor: maxTimeMS must be configured directly on command document */\n  }, {\n    key: \"maxTimeMS\",\n    value: function maxTimeMS(_) {\n      throw new error_1.MongoAPIError('maxTimeMS must be configured on the command document directly, to configure getMore.maxTimeMS use cursor.setMaxTimeMS()');\n    }\n    /** Unsupported for RunCommandCursor: batchSize must be configured directly on command document */\n  }, {\n    key: \"batchSize\",\n    value: function batchSize(_) {\n      throw new error_1.MongoAPIError('batchSize must be configured on the command document directly, to configure getMore.batchSize use cursor.setBatchSize()');\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize(session, callback) {\n      var operation = new run_command_1.RunCommandOperation(this.db, this.command, _objectSpread(_objectSpread({}, this.cursorOptions), {}, {\n        session: session,\n        readPreference: this.cursorOptions.readPreference\n      }));\n      (0, execute_operation_1.executeOperation)(this.client, operation).then(function (response) {\n        if (response.cursor == null) {\n          callback(new error_1.MongoUnexpectedServerResponseError('Expected server to respond with cursor'));\n          return;\n        }\n        callback(undefined, {\n          server: operation.server,\n          session: session,\n          response: response\n        });\n      }, function (err) {\n        return callback(err);\n      });\n    }\n    /** @internal */\n  }, {\n    key: \"_getMore\",\n    value: function _getMore(_batchSize, callback) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      var getMoreOperation = new get_more_1.GetMoreOperation(this.namespace, this.id, this.server, _objectSpread(_objectSpread({}, this.cursorOptions), {}, {\n        session: this.session\n      }, this.getMoreOptions));\n      (0, execute_operation_1.executeOperation)(this.client, getMoreOperation, callback);\n    }\n  }]);\n  return RunCommandCursor;\n}(abstract_cursor_1.AbstractCursor);\nexports.RunCommandCursor = RunCommandCursor;","map":{"version":3,"names":["error_1","require","execute_operation_1","get_more_1","run_command_1","utils_1","abstract_cursor_1","RunCommandCursor","_abstract_cursor_1$Ab","_inherits","_super","_createSuper","db","command","_this","options","arguments","length","undefined","_classCallCheck","call","client","ns","namespace","getMoreOptions","Object","freeze","_objectSpread","_createClass","key","value","setComment","comment","setMaxTimeMS","maxTimeMS","maxAwaitTimeMS","setBatchSize","batchSize","clone","MongoAPIError","withReadConcern","_","addCursorFlag","__","_initialize","session","callback","operation","RunCommandOperation","cursorOptions","readPreference","executeOperation","then","response","cursor","MongoUnexpectedServerResponseError","server","err","_getMore","_batchSize","getMoreOperation","GetMoreOperation","id","AbstractCursor","exports"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/cursor/run_command_cursor.ts"],"sourcesContent":["import type { BSONSerializeOptions, Document, Long } from '../bson';\nimport type { Db } from '../db';\nimport { MongoAPIError, MongoUnexpectedServerResponseError } from '../error';\nimport { executeOperation, type ExecutionResult } from '../operations/execute_operation';\nimport { GetMoreOperation } from '../operations/get_more';\nimport { RunCommandOperation } from '../operations/run_command';\nimport type { ReadConcernLike } from '../read_concern';\nimport type { ReadPreferenceLike } from '../read_preference';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, ns } from '../utils';\nimport { AbstractCursor } from './abstract_cursor';\n\n/** @public */\nexport type RunCursorCommandOptions = {\n  readPreference?: ReadPreferenceLike;\n  session?: ClientSession;\n} & BSONSerializeOptions;\n\n/** @internal */\ntype RunCursorCommandResponse = {\n  cursor: { id: bigint | Long | number; ns: string; firstBatch: Document[] };\n  ok: 1;\n};\n\n/** @public */\nexport class RunCommandCursor extends AbstractCursor {\n  public readonly command: Readonly<Record<string, any>>;\n  public readonly getMoreOptions: {\n    comment?: any;\n    maxAwaitTimeMS?: number;\n    batchSize?: number;\n  } = {};\n\n  /**\n   * Controls the `getMore.comment` field\n   * @param comment - any BSON value\n   */\n  public setComment(comment: any): this {\n    this.getMoreOptions.comment = comment;\n    return this;\n  }\n\n  /**\n   * Controls the `getMore.maxTimeMS` field. Only valid when cursor is tailable await\n   * @param maxTimeMS - the number of milliseconds to wait for new data\n   */\n  public setMaxTimeMS(maxTimeMS: number): this {\n    this.getMoreOptions.maxAwaitTimeMS = maxTimeMS;\n    return this;\n  }\n\n  /**\n   * Controls the `getMore.batchSize` field\n   * @param maxTimeMS - the number documents to return in the `nextBatch`\n   */\n  public setBatchSize(batchSize: number): this {\n    this.getMoreOptions.batchSize = batchSize;\n    return this;\n  }\n\n  /** Unsupported for RunCommandCursor */\n  public override clone(): never {\n    throw new MongoAPIError('Clone not supported, create a new cursor with db.runCursorCommand');\n  }\n\n  /** Unsupported for RunCommandCursor: readConcern must be configured directly on command document */\n  public override withReadConcern(_: ReadConcernLike): never {\n    throw new MongoAPIError(\n      'RunCommandCursor does not support readConcern it must be attached to the command being run'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: various cursor flags must be configured directly on command document */\n  public override addCursorFlag(_: string, __: boolean): never {\n    throw new MongoAPIError(\n      'RunCommandCursor does not support cursor flags, they must be attached to the command being run'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: maxTimeMS must be configured directly on command document */\n  public override maxTimeMS(_: number): never {\n    throw new MongoAPIError(\n      'maxTimeMS must be configured on the command document directly, to configure getMore.maxTimeMS use cursor.setMaxTimeMS()'\n    );\n  }\n\n  /** Unsupported for RunCommandCursor: batchSize must be configured directly on command document */\n  public override batchSize(_: number): never {\n    throw new MongoAPIError(\n      'batchSize must be configured on the command document directly, to configure getMore.batchSize use cursor.setBatchSize()'\n    );\n  }\n\n  /** @internal */\n  private db: Db;\n\n  /** @internal */\n  constructor(db: Db, command: Document, options: RunCursorCommandOptions = {}) {\n    super(db.client, ns(db.namespace), options);\n    this.db = db;\n    this.command = Object.freeze({ ...command });\n  }\n\n  /** @internal */\n  protected _initialize(session: ClientSession, callback: Callback<ExecutionResult>) {\n    const operation = new RunCommandOperation<RunCursorCommandResponse>(this.db, this.command, {\n      ...this.cursorOptions,\n      session: session,\n      readPreference: this.cursorOptions.readPreference\n    });\n    executeOperation(this.client, operation).then(\n      response => {\n        if (response.cursor == null) {\n          callback(\n            new MongoUnexpectedServerResponseError('Expected server to respond with cursor')\n          );\n          return;\n        }\n        callback(undefined, {\n          server: operation.server,\n          session,\n          response\n        });\n      },\n      err => callback(err)\n    );\n  }\n\n  /** @internal */\n  override _getMore(_batchSize: number, callback: Callback<Document>) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const getMoreOperation = new GetMoreOperation(this.namespace, this.id!, this.server!, {\n      ...this.cursorOptions,\n      session: this.session,\n      ...this.getMoreOptions\n    });\n\n    executeOperation(this.client, getMoreOperation, callback);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}