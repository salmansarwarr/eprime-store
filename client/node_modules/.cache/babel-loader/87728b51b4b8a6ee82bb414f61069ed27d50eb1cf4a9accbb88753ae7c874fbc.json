{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EstimatedDocumentCountOperation = void 0;\nvar command_1 = require(\"./command\");\nvar operation_1 = require(\"./operation\");\n/** @internal */\nvar EstimatedDocumentCountOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(EstimatedDocumentCountOperation, _command_1$CommandOpe);\n  var _super = _createSuper(EstimatedDocumentCountOperation);\n  function EstimatedDocumentCountOperation(collection) {\n    var _this;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, EstimatedDocumentCountOperation);\n    _this = _super.call(this, collection, options);\n    _this.options = options;\n    _this.collectionName = collection.collectionName;\n    return _this;\n  }\n  _createClass(EstimatedDocumentCountOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var cmd = {\n        count: this.collectionName\n      };\n      if (typeof this.options.maxTimeMS === 'number') {\n        cmd.maxTimeMS = this.options.maxTimeMS;\n      }\n      // we check for undefined specifically here to allow falsy values\n      // eslint-disable-next-line no-restricted-syntax\n      if (this.options.comment !== undefined) {\n        cmd.comment = this.options.comment;\n      }\n      _get(_getPrototypeOf(EstimatedDocumentCountOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd, function (err, response) {\n        if (err) {\n          callback(err);\n          return;\n        }\n        callback(undefined, (response === null || response === void 0 ? void 0 : response.n) || 0);\n      });\n    }\n  }]);\n  return EstimatedDocumentCountOperation;\n}(command_1.CommandOperation);\nexports.EstimatedDocumentCountOperation = EstimatedDocumentCountOperation;\n(0, operation_1.defineAspects)(EstimatedDocumentCountOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.CURSOR_CREATING]);","map":{"version":3,"names":["command_1","require","operation_1","EstimatedDocumentCountOperation","_command_1$CommandOpe","_inherits","_super","_createSuper","collection","_this","options","arguments","length","undefined","_classCallCheck","call","collectionName","_createClass","key","value","executeCallback","server","session","callback","cmd","count","maxTimeMS","comment","_get","_getPrototypeOf","prototype","err","response","n","CommandOperation","exports","defineAspects","Aspect","READ_OPERATION","RETRYABLE","CURSOR_CREATING"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/operations/estimated_document_count.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback } from '../utils';\nimport { CommandOperation, type CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\n\n/** @public */\nexport interface EstimatedDocumentCountOptions extends CommandOperationOptions {\n  /**\n   * The maximum amount of time to allow the operation to run.\n   *\n   * This option is sent only if the caller explicitly provides a value. The default is to not send a value.\n   */\n  maxTimeMS?: number;\n}\n\n/** @internal */\nexport class EstimatedDocumentCountOperation extends CommandOperation<number> {\n  override options: EstimatedDocumentCountOptions;\n  collectionName: string;\n\n  constructor(collection: Collection, options: EstimatedDocumentCountOptions = {}) {\n    super(collection, options);\n    this.options = options;\n    this.collectionName = collection.collectionName;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<number>\n  ): void {\n    const cmd: Document = { count: this.collectionName };\n\n    if (typeof this.options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = this.options.maxTimeMS;\n    }\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n\n    super.executeCommand(server, session, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(undefined, response?.n || 0);\n    });\n  }\n}\n\ndefineAspects(EstimatedDocumentCountOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\n"],"mappings":";;;;;;;;;;;;AAKA,IAAAA,SAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AAYA;AAAA,IACaE,+BAAgC,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,+BAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,+BAAA;EAI3C,SAAAA,gCAAYK,UAAsB,EAA6C;IAAA,IAAAC,KAAA;IAAA,IAA3CC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAyC,EAAE;IAAAG,eAAA,OAAAX,+BAAA;IAC7EM,KAAA,GAAAH,MAAA,CAAAS,IAAA,OAAMP,UAAU,EAAEE,OAAO;IACzBD,KAAA,CAAKC,OAAO,GAAGA,OAAO;IACtBD,KAAA,CAAKO,cAAc,GAAGR,UAAU,CAACQ,cAAc;IAAC,OAAAP,KAAA;EAClD;EAACQ,YAAA,CAAAd,+BAAA;IAAAe,GAAA;IAAAC,KAAA,EAEQ,SAAAC,gBACPC,MAAc,EACdC,OAAkC,EAClCC,QAA0B;MAE1B,IAAMC,GAAG,GAAa;QAAEC,KAAK,EAAE,IAAI,CAACT;MAAc,CAAE;MAEpD,IAAI,OAAO,IAAI,CAACN,OAAO,CAACgB,SAAS,KAAK,QAAQ,EAAE;QAC9CF,GAAG,CAACE,SAAS,GAAG,IAAI,CAAChB,OAAO,CAACgB,SAAS;;MAGxC;MACA;MACA,IAAI,IAAI,CAAChB,OAAO,CAACiB,OAAO,KAAKd,SAAS,EAAE;QACtCW,GAAG,CAACG,OAAO,GAAG,IAAI,CAACjB,OAAO,CAACiB,OAAO;;MAGpCC,IAAA,CAAAC,eAAA,CAAA1B,+BAAA,CAAA2B,SAAA,2BAAAf,IAAA,OAAqBM,MAAM,EAAEC,OAAO,EAAEE,GAAG,EAAE,UAACO,GAAG,EAAEC,QAAQ,EAAI;QAC3D,IAAID,GAAG,EAAE;UACPR,QAAQ,CAACQ,GAAG,CAAC;UACb;;QAGFR,QAAQ,CAACV,SAAS,EAAE,CAAAmB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,CAAC,KAAI,CAAC,CAAC;MACvC,CAAC;IACH;EAAC;EAAA,OAAA9B,+BAAA;AAAA,EAnCkDH,SAAA,CAAAkC,gBAAwB;AAA7EC,OAAA,CAAAhC,+BAAA,GAAAA,+BAAA;AAsCA,IAAAD,WAAA,CAAAkC,aAAa,EAACjC,+BAA+B,EAAE,CAC7CD,WAAA,CAAAmC,MAAM,CAACC,cAAc,EACrBpC,WAAA,CAAAmC,MAAM,CAACE,SAAS,EAChBrC,WAAA,CAAAmC,MAAM,CAACG,eAAe,CACvB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}