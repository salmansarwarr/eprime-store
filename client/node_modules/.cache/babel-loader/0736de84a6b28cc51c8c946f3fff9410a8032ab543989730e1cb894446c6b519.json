{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthProvider = exports.AuthContext = void 0;\nvar error_1 = require(\"../../error\");\n/**\n * Context used during authentication\n * @internal\n */\nvar AuthContext = /*#__PURE__*/_createClass(function AuthContext(connection, credentials, options) {\n  _classCallCheck(this, AuthContext);\n  /** If the context is for reauthentication. */\n  this.reauthenticating = false;\n  this.connection = connection;\n  this.credentials = credentials;\n  this.options = options;\n});\nexports.AuthContext = AuthContext;\nvar AuthProvider = /*#__PURE__*/function () {\n  function AuthProvider() {\n    _classCallCheck(this, AuthProvider);\n  }\n  _createClass(AuthProvider, [{\n    key: \"prepare\",\n    value:\n    /**\n     * Prepare the handshake document before the initial handshake.\n     *\n     * @param handshakeDoc - The document used for the initial handshake on a connection\n     * @param authContext - Context for authentication flow\n     */\n    function () {\n      var _prepare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(handshakeDoc, _authContext) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", handshakeDoc);\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function prepare(_x, _x2) {\n        return _prepare.apply(this, arguments);\n      }\n      return prepare;\n    }()\n    /**\n     * Reauthenticate.\n     * @param context - The shared auth context.\n     */\n  }, {\n    key: \"reauth\",\n    value: function () {\n      var _reauth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(context) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!context.reauthenticating) {\n                _context2.next = 2;\n                break;\n              }\n              throw new error_1.MongoRuntimeError('Reauthentication already in progress.');\n            case 2:\n              _context2.prev = 2;\n              context.reauthenticating = true;\n              _context2.next = 6;\n              return this.auth(context);\n            case 6:\n              _context2.prev = 6;\n              context.reauthenticating = false;\n              return _context2.finish(6);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[2,, 6, 9]]);\n      }));\n      function reauth(_x3) {\n        return _reauth.apply(this, arguments);\n      }\n      return reauth;\n    }()\n  }]);\n  return AuthProvider;\n}();\nexports.AuthProvider = AuthProvider;","map":{"version":3,"names":["error_1","require","AuthContext","_createClass","connection","credentials","options","_classCallCheck","reauthenticating","exports","AuthProvider","key","value","_prepare","_asyncToGenerator","_regeneratorRuntime","mark","_callee","handshakeDoc","_authContext","wrap","_callee$","_context","prev","next","abrupt","stop","prepare","_x","_x2","apply","arguments","_reauth","_callee2","context","_callee2$","_context2","MongoRuntimeError","auth","finish","reauth","_x3"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/cmap/auth/auth_provider.ts"],"sourcesContent":["import type { Document } from '../../bson';\nimport { MongoRuntimeError } from '../../error';\nimport type { HandshakeDocument } from '../connect';\nimport type { Connection, ConnectionOptions } from '../connection';\nimport type { MongoCredentials } from './mongo_credentials';\n\n/**\n * Context used during authentication\n * @internal\n */\nexport class AuthContext {\n  /** The connection to authenticate */\n  connection: Connection;\n  /** The credentials to use for authentication */\n  credentials?: MongoCredentials;\n  /** If the context is for reauthentication. */\n  reauthenticating = false;\n  /** The options passed to the `connect` method */\n  options: ConnectionOptions;\n\n  /** A response from an initial auth attempt, only some mechanisms use this (e.g, SCRAM) */\n  response?: Document;\n  /** A random nonce generated for use in an authentication conversation */\n  nonce?: Buffer;\n\n  constructor(\n    connection: Connection,\n    credentials: MongoCredentials | undefined,\n    options: ConnectionOptions\n  ) {\n    this.connection = connection;\n    this.credentials = credentials;\n    this.options = options;\n  }\n}\n\nexport abstract class AuthProvider {\n  /**\n   * Prepare the handshake document before the initial handshake.\n   *\n   * @param handshakeDoc - The document used for the initial handshake on a connection\n   * @param authContext - Context for authentication flow\n   */\n  async prepare(\n    handshakeDoc: HandshakeDocument,\n    _authContext: AuthContext\n  ): Promise<HandshakeDocument> {\n    return handshakeDoc;\n  }\n\n  /**\n   * Authenticate\n   *\n   * @param context - A shared context for authentication flow\n   */\n  abstract auth(context: AuthContext): Promise<void>;\n\n  /**\n   * Reauthenticate.\n   * @param context - The shared auth context.\n   */\n  async reauth(context: AuthContext): Promise<void> {\n    if (context.reauthenticating) {\n      throw new MongoRuntimeError('Reauthentication already in progress.');\n    }\n    try {\n      context.reauthenticating = true;\n      await this.auth(context);\n    } finally {\n      context.reauthenticating = false;\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;AACA,IAAAA,OAAA,GAAAC,OAAA;AAKA;;;;AAAA,IAIaC,WAAW,gBAAAC,YAAA,CAetB,SAAAD,YACEE,UAAsB,EACtBC,WAAyC,EACzCC,OAA0B;EAAAC,eAAA,OAAAL,WAAA;EAb5B;EACA,KAAAM,gBAAgB,GAAG,KAAK;EActB,IAAI,CAACJ,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,WAAW,GAAGA,WAAW;EAC9B,IAAI,CAACC,OAAO,GAAGA,OAAO;AACxB,CAAC;AAvBHG,OAAA,CAAAP,WAAA,GAAAA,WAAA;AAwBC,IAEqBQ,YAAY;EAAA,SAAAA,aAAA;IAAAH,eAAA,OAAAG,YAAA;EAAA;EAAAP,YAAA,CAAAO,YAAA;IAAAC,GAAA;IAAAC,KAAA;IAChC;;;;;;IAAA;MAAA,IAAAC,QAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAMA,SAAAC,QACEC,YAA+B,EAC/BC,YAAyB;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA,WAElBP,YAAY;YAAA;YAAA;cAAA,OAAAI,QAAA,CAAAI,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA,CACpB;MAAA,SAAAU,QAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAhB,QAAA,CAAAiB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,OAAA;IAAA;IASD;;;;EAAA;IAAAhB,GAAA;IAAAC,KAAA;MAAA,IAAAoB,OAAA,GAAAlB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAIA,SAAAiB,SAAaC,OAAoB;QAAA,OAAAnB,mBAAA,GAAAK,IAAA,UAAAe,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAb,IAAA,GAAAa,SAAA,CAAAZ,IAAA;YAAA;cAAA,KAC3BU,OAAO,CAAC1B,gBAAgB;gBAAA4B,SAAA,CAAAZ,IAAA;gBAAA;cAAA;cAAA,MACpB,IAAIxB,OAAA,CAAAqC,iBAAiB,CAAC,uCAAuC,CAAC;YAAA;cAAAD,SAAA,CAAAb,IAAA;cAGpEW,OAAO,CAAC1B,gBAAgB,GAAG,IAAI;cAAC4B,SAAA,CAAAZ,IAAA;cAAA,OAC1B,IAAI,CAACc,IAAI,CAACJ,OAAO,CAAC;YAAA;cAAAE,SAAA,CAAAb,IAAA;cAExBW,OAAO,CAAC1B,gBAAgB,GAAG,KAAK;cAAC,OAAA4B,SAAA,CAAAG,MAAA;YAAA;YAAA;cAAA,OAAAH,SAAA,CAAAV,IAAA;UAAA;QAAA,GAAAO,QAAA;MAAA,CAEpC;MAAA,SAAAO,OAAAC,GAAA;QAAA,OAAAT,OAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAS,MAAA;IAAA;EAAA;EAAA,OAAA9B,YAAA;AAAA;AAnCHD,OAAA,CAAAC,YAAA,GAAAA,YAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}