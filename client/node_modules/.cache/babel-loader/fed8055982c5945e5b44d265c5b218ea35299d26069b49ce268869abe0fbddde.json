{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AzureServiceWorkflow = void 0;\nvar error_1 = require(\"../../../error\");\nvar utils_1 = require(\"../../../utils\");\nvar azure_token_cache_1 = require(\"./azure_token_cache\");\nvar service_workflow_1 = require(\"./service_workflow\");\n/** Base URL for getting Azure tokens. */\nvar AZURE_BASE_URL = 'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01';\n/** Azure request headers. */\nvar AZURE_HEADERS = Object.freeze({\n  Metadata: 'true',\n  Accept: 'application/json'\n});\n/** Invalid endpoint result error. */\nvar ENDPOINT_RESULT_ERROR = 'Azure endpoint did not return a value with only access_token and expires_in properties';\n/** Error for when the token audience is missing in the environment. */\nvar TOKEN_AUDIENCE_MISSING_ERROR = 'TOKEN_AUDIENCE must be set in the auth mechanism properties when PROVIDER_NAME is azure.';\n/**\n * Device workflow implementation for Azure.\n *\n * @internal\n */\nvar AzureServiceWorkflow = /*#__PURE__*/function (_service_workflow_1$S) {\n  _inherits(AzureServiceWorkflow, _service_workflow_1$S);\n  var _super = _createSuper(AzureServiceWorkflow);\n  function AzureServiceWorkflow() {\n    var _this;\n    _classCallCheck(this, AzureServiceWorkflow);\n    _this = _super.apply(this, arguments);\n    _this.cache = new azure_token_cache_1.AzureTokenCache();\n    return _this;\n  }\n  /**\n   * Get the token from the environment.\n   */\n  _createClass(AzureServiceWorkflow, [{\n    key: \"getToken\",\n    value: function () {\n      var _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(credentials) {\n        var tokenAudience, token, entry, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              tokenAudience = credentials === null || credentials === void 0 ? void 0 : credentials.mechanismProperties.TOKEN_AUDIENCE;\n              if (tokenAudience) {\n                _context.next = 3;\n                break;\n              }\n              throw new error_1.MongoAzureError(TOKEN_AUDIENCE_MISSING_ERROR);\n            case 3:\n              entry = this.cache.getEntry(tokenAudience);\n              if (!(entry !== null && entry !== void 0 && entry.isValid())) {\n                _context.next = 8;\n                break;\n              }\n              token = entry.token;\n              _context.next = 16;\n              break;\n            case 8:\n              this.cache.deleteEntry(tokenAudience);\n              _context.next = 11;\n              return getAzureTokenData(tokenAudience);\n            case 11:\n              response = _context.sent;\n              if (isEndpointResultValid(response)) {\n                _context.next = 14;\n                break;\n              }\n              throw new error_1.MongoAzureError(ENDPOINT_RESULT_ERROR);\n            case 14:\n              this.cache.addEntry(tokenAudience, response);\n              token = response.access_token;\n            case 16:\n              return _context.abrupt(\"return\", token);\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getToken(_x) {\n        return _getToken.apply(this, arguments);\n      }\n      return getToken;\n    }()\n  }]);\n  return AzureServiceWorkflow;\n}(service_workflow_1.ServiceWorkflow);\nexports.AzureServiceWorkflow = AzureServiceWorkflow;\n/**\n * Hit the Azure endpoint to get the token data.\n */\nfunction getAzureTokenData(_x2) {\n  return _getAzureTokenData.apply(this, arguments);\n}\n/**\n * Determines if a result returned from the endpoint is valid.\n * This means the result is not nullish, contains the access_token required field\n * and the expires_in required field.\n */\nfunction _getAzureTokenData() {\n  _getAzureTokenData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(tokenAudience) {\n    var url, data;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          url = \"\".concat(AZURE_BASE_URL, \"&resource=\").concat(tokenAudience);\n          _context2.next = 3;\n          return (0, utils_1.request)(url, {\n            json: true,\n            headers: AZURE_HEADERS\n          });\n        case 3:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", data);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _getAzureTokenData.apply(this, arguments);\n}\nfunction isEndpointResultValid(token) {\n  if (token == null || typeof token !== 'object') return false;\n  return 'access_token' in token && 'expires_in' in token;\n}","map":{"version":3,"names":["error_1","require","utils_1","azure_token_cache_1","service_workflow_1","AZURE_BASE_URL","AZURE_HEADERS","Object","freeze","Metadata","Accept","ENDPOINT_RESULT_ERROR","TOKEN_AUDIENCE_MISSING_ERROR","AzureServiceWorkflow","_service_workflow_1$S","_inherits","_super","_createSuper","_this","_classCallCheck","cache","AzureTokenCache","_createClass","key","value","_getToken","_asyncToGenerator","_regeneratorRuntime","mark","_callee","credentials","tokenAudience","token","entry","response","wrap","_callee$","_context","prev","next","mechanismProperties","TOKEN_AUDIENCE","MongoAzureError","getEntry","isValid","deleteEntry","getAzureTokenData","sent","isEndpointResultValid","addEntry","access_token","abrupt","stop","getToken","_x","apply","arguments","ServiceWorkflow","exports","_x2","_getAzureTokenData","_callee2","url","data","_callee2$","_context2","concat","request","json","headers"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/cmap/auth/mongodb_oidc/azure_service_workflow.ts"],"sourcesContent":["import { MongoAzureError } from '../../../error';\nimport { request } from '../../../utils';\nimport type { MongoCredentials } from '../mongo_credentials';\nimport { AzureTokenCache } from './azure_token_cache';\nimport { ServiceWorkflow } from './service_workflow';\n\n/** Base URL for getting Azure tokens. */\nconst AZURE_BASE_URL =\n  'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01';\n\n/** Azure request headers. */\nconst AZURE_HEADERS = Object.freeze({ Metadata: 'true', Accept: 'application/json' });\n\n/** Invalid endpoint result error. */\nconst ENDPOINT_RESULT_ERROR =\n  'Azure endpoint did not return a value with only access_token and expires_in properties';\n\n/** Error for when the token audience is missing in the environment. */\nconst TOKEN_AUDIENCE_MISSING_ERROR =\n  'TOKEN_AUDIENCE must be set in the auth mechanism properties when PROVIDER_NAME is azure.';\n\n/**\n * The Azure access token format.\n * @internal\n */\nexport interface AzureAccessToken {\n  access_token: string;\n  expires_in: number;\n}\n\n/**\n * Device workflow implementation for Azure.\n *\n * @internal\n */\nexport class AzureServiceWorkflow extends ServiceWorkflow {\n  cache = new AzureTokenCache();\n\n  /**\n   * Get the token from the environment.\n   */\n  async getToken(credentials?: MongoCredentials): Promise<string> {\n    const tokenAudience = credentials?.mechanismProperties.TOKEN_AUDIENCE;\n    if (!tokenAudience) {\n      throw new MongoAzureError(TOKEN_AUDIENCE_MISSING_ERROR);\n    }\n    let token;\n    const entry = this.cache.getEntry(tokenAudience);\n    if (entry?.isValid()) {\n      token = entry.token;\n    } else {\n      this.cache.deleteEntry(tokenAudience);\n      const response = await getAzureTokenData(tokenAudience);\n      if (!isEndpointResultValid(response)) {\n        throw new MongoAzureError(ENDPOINT_RESULT_ERROR);\n      }\n      this.cache.addEntry(tokenAudience, response);\n      token = response.access_token;\n    }\n    return token;\n  }\n}\n\n/**\n * Hit the Azure endpoint to get the token data.\n */\nasync function getAzureTokenData(tokenAudience: string): Promise<AzureAccessToken> {\n  const url = `${AZURE_BASE_URL}&resource=${tokenAudience}`;\n  const data = await request(url, {\n    json: true,\n    headers: AZURE_HEADERS\n  });\n  return data as AzureAccessToken;\n}\n\n/**\n * Determines if a result returned from the endpoint is valid.\n * This means the result is not nullish, contains the access_token required field\n * and the expires_in required field.\n */\nfunction isEndpointResultValid(\n  token: unknown\n): token is { access_token: unknown; expires_in: unknown } {\n  if (token == null || typeof token !== 'object') return false;\n  return 'access_token' in token && 'expires_in' in token;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}