{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _objectSpread = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncToGenerator = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.X509 = void 0;\nvar error_1 = require(\"../../error\");\nvar utils_1 = require(\"../../utils\");\nvar auth_provider_1 = require(\"./auth_provider\");\nvar X509 = /*#__PURE__*/function (_auth_provider_1$Auth) {\n  _inherits(X509, _auth_provider_1$Auth);\n  var _super = _createSuper(X509);\n  function X509() {\n    _classCallCheck(this, X509);\n    return _super.apply(this, arguments);\n  }\n  _createClass(X509, [{\n    key: \"prepare\",\n    value: function () {\n      var _prepare = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(handshakeDoc, authContext) {\n        var credentials;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              credentials = authContext.credentials;\n              if (credentials) {\n                _context.next = 3;\n                break;\n              }\n              throw new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.');\n            case 3:\n              return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, handshakeDoc), {}, {\n                speculativeAuthenticate: x509AuthenticateCommand(credentials)\n              }));\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function prepare(_x, _x2) {\n        return _prepare.apply(this, arguments);\n      }\n      return prepare;\n    }()\n  }, {\n    key: \"auth\",\n    value: function () {\n      var _auth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(authContext) {\n        var connection, credentials, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              connection = authContext.connection;\n              credentials = authContext.credentials;\n              if (credentials) {\n                _context2.next = 4;\n                break;\n              }\n              throw new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.');\n            case 4:\n              response = authContext.response;\n              if (!(response !== null && response !== void 0 && response.speculativeAuthenticate)) {\n                _context2.next = 7;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 7:\n              _context2.next = 9;\n              return connection.commandAsync((0, utils_1.ns)('$external.$cmd'), x509AuthenticateCommand(credentials), undefined);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function auth(_x3) {\n        return _auth.apply(this, arguments);\n      }\n      return auth;\n    }()\n  }]);\n  return X509;\n}(auth_provider_1.AuthProvider);\nexports.X509 = X509;\nfunction x509AuthenticateCommand(credentials) {\n  var command = {\n    authenticate: 1,\n    mechanism: 'MONGODB-X509'\n  };\n  if (credentials.username) {\n    command.user = credentials.username;\n  }\n  return command;\n}","map":{"version":3,"names":["error_1","require","utils_1","auth_provider_1","X509","_auth_provider_1$Auth","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_prepare","_asyncToGenerator","_regeneratorRuntime","mark","_callee","handshakeDoc","authContext","credentials","wrap","_callee$","_context","prev","next","MongoMissingCredentialsError","abrupt","_objectSpread","speculativeAuthenticate","x509AuthenticateCommand","stop","prepare","_x","_x2","_auth","_callee2","connection","response","_callee2$","_context2","commandAsync","ns","undefined","auth","_x3","AuthProvider","exports","command","authenticate","mechanism","username","user"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/cmap/auth/x509.ts"],"sourcesContent":["import type { Document } from '../../bson';\nimport { MongoMissingCredentialsError } from '../../error';\nimport { ns } from '../../utils';\nimport type { HandshakeDocument } from '../connect';\nimport { type AuthContext, AuthProvider } from './auth_provider';\nimport type { MongoCredentials } from './mongo_credentials';\n\nexport class X509 extends AuthProvider {\n  override async prepare(\n    handshakeDoc: HandshakeDocument,\n    authContext: AuthContext\n  ): Promise<HandshakeDocument> {\n    const { credentials } = authContext;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n    return { ...handshakeDoc, speculativeAuthenticate: x509AuthenticateCommand(credentials) };\n  }\n\n  override async auth(authContext: AuthContext) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n    const response = authContext.response;\n\n    if (response?.speculativeAuthenticate) {\n      return;\n    }\n\n    await connection.commandAsync(\n      ns('$external.$cmd'),\n      x509AuthenticateCommand(credentials),\n      undefined\n    );\n  }\n}\n\nfunction x509AuthenticateCommand(credentials: MongoCredentials) {\n  const command: Document = { authenticate: 1, mechanism: 'MONGODB-X509' };\n  if (credentials.username) {\n    command.user = credentials.username;\n  }\n\n  return command;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}