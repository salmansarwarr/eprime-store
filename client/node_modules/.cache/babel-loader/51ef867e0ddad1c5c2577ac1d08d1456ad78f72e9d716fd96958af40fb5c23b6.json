{"ast":null,"code":"import _objectWithoutProperties from \"/home/salman/Documents/GitHub/FakeShop/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/home/salman/Documents/GitHub/FakeShop/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/home/salman/Documents/GitHub/FakeShop/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _defineProperty from \"/home/salman/Documents/GitHub/FakeShop/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/home/salman/Documents/GitHub/FakeShop/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/salman/Documents/GitHub/FakeShop/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"crossAxis\", \"alignment\", \"allowedPlacements\", \"autoAlignment\"],\n  _excluded2 = [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"fallbackAxisSideDirection\", \"flipAlignment\"],\n  _excluded3 = [\"strategy\"],\n  _excluded4 = [\"mainAxis\", \"crossAxis\", \"limiter\"],\n  _excluded5 = [\"apply\"];\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n    floating = _ref.floating;\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var commonAlign = reference[length] / 2 - floating[length] / 2;\n  var side = getSide(placement);\n  var isVertical = mainAxis === 'x';\n  var coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n          validMiddleware = middleware.filter(Boolean);\n          _context.next = 4;\n          return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n        case 4:\n          rtl = _context.sent;\n          _context.next = 7;\n          return platform.getElementRects({\n            reference: reference,\n            floating: floating,\n            strategy: strategy\n          });\n        case 7:\n          rects = _context.sent;\n          _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n          statefulPlacement = placement;\n          middlewareData = {};\n          resetCount = 0;\n          i = 0;\n        case 13:\n          if (!(i < validMiddleware.length)) {\n            _context.next = 46;\n            break;\n          }\n          _validMiddleware$i = validMiddleware[i], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;\n          _context.next = 17;\n          return fn({\n            x: x,\n            y: y,\n            initialPlacement: placement,\n            placement: statefulPlacement,\n            strategy: strategy,\n            middlewareData: middlewareData,\n            rects: rects,\n            platform: platform,\n            elements: {\n              reference: reference,\n              floating: floating\n            }\n          });\n        case 17:\n          _yield$fn = _context.sent;\n          nextX = _yield$fn.x;\n          nextY = _yield$fn.y;\n          data = _yield$fn.data;\n          reset = _yield$fn.reset;\n          x = nextX != null ? nextX : x;\n          y = nextY != null ? nextY : y;\n          middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n          if (!(reset && resetCount <= 50)) {\n            _context.next = 43;\n            break;\n          }\n          resetCount++;\n          if (!(typeof reset === 'object')) {\n            _context.next = 41;\n            break;\n          }\n          if (reset.placement) {\n            statefulPlacement = reset.placement;\n          }\n          if (!reset.rects) {\n            _context.next = 38;\n            break;\n          }\n          if (!(reset.rects === true)) {\n            _context.next = 36;\n            break;\n          }\n          _context.next = 33;\n          return platform.getElementRects({\n            reference: reference,\n            floating: floating,\n            strategy: strategy\n          });\n        case 33:\n          _context.t0 = _context.sent;\n          _context.next = 37;\n          break;\n        case 36:\n          _context.t0 = reset.rects;\n        case 37:\n          rects = _context.t0;\n        case 38:\n          _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n          x = _computeCoordsFromPla2.x;\n          y = _computeCoordsFromPla2.y;\n        case 41:\n          i = -1;\n          return _context.abrupt(\"continue\", 43);\n        case 43:\n          i++;\n          _context.next = 13;\n          break;\n        case 46:\n          return _context.abrupt(\"return\", {\n            x: x,\n            y: y,\n            placement: statefulPlacement,\n            strategy: strategy,\n            middlewareData: middlewareData\n          });\n        case 47:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction expandPaddingObject(padding) {\n  return _objectSpread({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, padding);\n}\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return _objectSpread(_objectSpread({}, rect), {}, {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(state, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _evaluate8, _evaluate8$boundary, boundary, _evaluate8$rootBounda, rootBoundary, _evaluate8$elementCon, elementContext, _evaluate8$altBoundar, altBoundary, _evaluate8$padding, padding, paddingObject, altContext, element, clippingClientRect, rect, offsetParent, offsetScale, elementClientRect;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          if (options === void 0) {\n            options = {};\n          }\n          x = state.x, y = state.y, platform = state.platform, rects = state.rects, elements = state.elements, strategy = state.strategy;\n          _evaluate8 = evaluate(options, state), _evaluate8$boundary = _evaluate8.boundary, boundary = _evaluate8$boundary === void 0 ? 'clippingAncestors' : _evaluate8$boundary, _evaluate8$rootBounda = _evaluate8.rootBoundary, rootBoundary = _evaluate8$rootBounda === void 0 ? 'viewport' : _evaluate8$rootBounda, _evaluate8$elementCon = _evaluate8.elementContext, elementContext = _evaluate8$elementCon === void 0 ? 'floating' : _evaluate8$elementCon, _evaluate8$altBoundar = _evaluate8.altBoundary, altBoundary = _evaluate8$altBoundar === void 0 ? false : _evaluate8$altBoundar, _evaluate8$padding = _evaluate8.padding, padding = _evaluate8$padding === void 0 ? 0 : _evaluate8$padding;\n          paddingObject = getSideObjectFromPadding(padding);\n          altContext = elementContext === 'floating' ? 'reference' : 'floating';\n          element = elements[altBoundary ? altContext : elementContext];\n          _context10.t0 = rectToClientRect;\n          _context10.t1 = platform;\n          _context10.next = 10;\n          return platform.isElement == null ? void 0 : platform.isElement(element);\n        case 10:\n          _context10.t2 = _await$platform$isEle = _context10.sent;\n          if (!(_context10.t2 != null)) {\n            _context10.next = 15;\n            break;\n          }\n          _context10.t3 = _await$platform$isEle;\n          _context10.next = 16;\n          break;\n        case 15:\n          _context10.t3 = true;\n        case 16:\n          if (!_context10.t3) {\n            _context10.next = 20;\n            break;\n          }\n          _context10.t4 = element;\n          _context10.next = 26;\n          break;\n        case 20:\n          _context10.t5 = element.contextElement;\n          if (_context10.t5) {\n            _context10.next = 25;\n            break;\n          }\n          _context10.next = 24;\n          return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n        case 24:\n          _context10.t5 = _context10.sent;\n        case 25:\n          _context10.t4 = _context10.t5;\n        case 26:\n          _context10.t6 = _context10.t4;\n          _context10.t7 = boundary;\n          _context10.t8 = rootBoundary;\n          _context10.t9 = strategy;\n          _context10.t10 = {\n            element: _context10.t6,\n            boundary: _context10.t7,\n            rootBoundary: _context10.t8,\n            strategy: _context10.t9\n          };\n          _context10.next = 33;\n          return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n        case 33:\n          _context10.t11 = _context10.sent;\n          clippingClientRect = (0, _context10.t0)(_context10.t11);\n          rect = elementContext === 'floating' ? _objectSpread(_objectSpread({}, rects.floating), {}, {\n            x: x,\n            y: y\n          }) : rects.reference;\n          _context10.next = 38;\n          return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n        case 38:\n          offsetParent = _context10.sent;\n          _context10.next = 41;\n          return platform.isElement == null ? void 0 : platform.isElement(offsetParent);\n        case 41:\n          if (!_context10.sent) {\n            _context10.next = 50;\n            break;\n          }\n          _context10.next = 44;\n          return platform.getScale == null ? void 0 : platform.getScale(offsetParent);\n        case 44:\n          _context10.t13 = _context10.sent;\n          if (_context10.t13) {\n            _context10.next = 47;\n            break;\n          }\n          _context10.t13 = {\n            x: 1,\n            y: 1\n          };\n        case 47:\n          _context10.t12 = _context10.t13;\n          _context10.next = 51;\n          break;\n        case 50:\n          _context10.t12 = {\n            x: 1,\n            y: 1\n          };\n        case 51:\n          offsetScale = _context10.t12;\n          _context10.t14 = rectToClientRect;\n          if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n            _context10.next = 59;\n            break;\n          }\n          _context10.next = 56;\n          return platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n            rect: rect,\n            offsetParent: offsetParent,\n            strategy: strategy\n          });\n        case 56:\n          _context10.t15 = _context10.sent;\n          _context10.next = 60;\n          break;\n        case 59:\n          _context10.t15 = rect;\n        case 60:\n          _context10.t16 = _context10.t15;\n          elementClientRect = (0, _context10.t14)(_context10.t16);\n          return _context10.abrupt(\"return\", {\n            top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n            bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n            left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n            right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n          });\n        case 63:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\nvar min = Math.min;\nvar max = Math.max;\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _data, _ref4;\n        var x, y, placement, rects, platform, elements, _ref3, element, _ref3$padding, padding, paddingObject, coords, axis, length, arrowDimensions, isYAxis, minProp, maxProp, clientProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, largestPossiblePadding, minPadding, maxPadding, min$1, max, center, offset, shouldAddOffset, alignmentOffset;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              x = state.x, y = state.y, placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements; // Since `element` is required, we don't Partial<> the type.\n              _ref3 = evaluate(options, state) || {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n              if (!(element == null)) {\n                _context2.next = 4;\n                break;\n              }\n              return _context2.abrupt(\"return\", {});\n            case 4:\n              paddingObject = getSideObjectFromPadding(padding);\n              coords = {\n                x: x,\n                y: y\n              };\n              axis = getMainAxisFromPlacement(placement);\n              length = getLengthFromAxis(axis);\n              _context2.next = 10;\n              return platform.getDimensions(element);\n            case 10:\n              arrowDimensions = _context2.sent;\n              isYAxis = axis === 'y';\n              minProp = isYAxis ? 'top' : 'left';\n              maxProp = isYAxis ? 'bottom' : 'right';\n              clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n              endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n              startDiff = coords[axis] - rects.reference[axis];\n              _context2.next = 19;\n              return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n            case 19:\n              arrowOffsetParent = _context2.sent;\n              clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0; // DOM platform can return `window` as the `offsetParent`.\n              _context2.t0 = !clientSize;\n              if (_context2.t0) {\n                _context2.next = 26;\n                break;\n              }\n              _context2.next = 25;\n              return platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent);\n            case 25:\n              _context2.t0 = !_context2.sent;\n            case 26:\n              if (!_context2.t0) {\n                _context2.next = 28;\n                break;\n              }\n              clientSize = elements.floating[clientProp] || rects.floating[length];\n            case 28:\n              centerToReference = endDiff / 2 - startDiff / 2; // If the padding is large enough that it causes the arrow to no longer be\n              // centered, modify the padding so that it is centered.\n              largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n              minPadding = min(paddingObject[minProp], largestPossiblePadding);\n              maxPadding = min(paddingObject[maxProp], largestPossiblePadding); // Make sure the arrow doesn't overflow the floating element if the center\n              // point is outside the floating element's bounds.\n              min$1 = minPadding;\n              max = clientSize - arrowDimensions[length] - maxPadding;\n              center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n              offset = within(min$1, center, max); // If the reference is small enough that the arrow's padding causes it to\n              // to point to nothing for an aligned placement, adjust the offset of the\n              // floating element itself. This stops `shift()` from taking action, but can\n              // be worked around by calling it again after the `arrow()` if desired.\n              shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n              alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n              return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] - alignmentOffset), _defineProperty(_ref4, \"data\", (_data = {}, _defineProperty(_data, axis, offset), _defineProperty(_data, \"centerOffset\", center - offset + alignmentOffset), _data)), _ref4));\n            case 39:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\nvar sides = ['top', 'right', 'bottom', 'left'];\nvar allPlacements = /*#__PURE__*/sides.reduce(function (acc, side) {\n  return acc.concat(side, side + \"-start\", side + \"-end\");\n}, []);\nvar oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (side) {\n    return oppositeSideMap[side];\n  });\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  var alignment = getAlignment(placement);\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\nvar oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, function (alignment) {\n    return oppositeAlignmentMap[alignment];\n  });\n}\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE, rects, middlewareData, placement, platform, elements, _evaluate, _evaluate$crossAxis, crossAxis, alignment, _evaluate$allowedPlac, allowedPlacements, _evaluate$autoAlignme, autoAlignment, detectOverflowOptions, placements, overflow, currentIndex, currentPlacement, _getAlignmentSides, main, cross, currentOverflows, allOverflows, nextPlacement, placementsSortedByMostSpace, placementsThatFitOnEachSide, resetPlacement;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              rects = state.rects, middlewareData = state.middlewareData, placement = state.placement, platform = state.platform, elements = state.elements;\n              _evaluate = evaluate(options, state), _evaluate$crossAxis = _evaluate.crossAxis, crossAxis = _evaluate$crossAxis === void 0 ? false : _evaluate$crossAxis, alignment = _evaluate.alignment, _evaluate$allowedPlac = _evaluate.allowedPlacements, allowedPlacements = _evaluate$allowedPlac === void 0 ? allPlacements : _evaluate$allowedPlac, _evaluate$autoAlignme = _evaluate.autoAlignment, autoAlignment = _evaluate$autoAlignme === void 0 ? true : _evaluate$autoAlignme, detectOverflowOptions = _objectWithoutProperties(_evaluate, _excluded);\n              placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n              _context3.next = 5;\n              return detectOverflow(state, detectOverflowOptions);\n            case 5:\n              overflow = _context3.sent;\n              currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n              currentPlacement = placements[currentIndex];\n              if (!(currentPlacement == null)) {\n                _context3.next = 10;\n                break;\n              }\n              return _context3.abrupt(\"return\", {});\n            case 10:\n              _context3.t0 = getAlignmentSides;\n              _context3.t1 = currentPlacement;\n              _context3.t2 = rects;\n              _context3.next = 15;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 15:\n              _context3.t3 = _context3.sent;\n              _getAlignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n              main = _getAlignmentSides.main;\n              cross = _getAlignmentSides.cross;\n              if (!(placement !== currentPlacement)) {\n                _context3.next = 21;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                reset: {\n                  placement: placements[0]\n                }\n              });\n            case 21:\n              currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n              allOverflows = [].concat(_toConsumableArray(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), [{\n                placement: currentPlacement,\n                overflows: currentOverflows\n              }]);\n              nextPlacement = placements[currentIndex + 1]; // There are more placements to check.\n              if (!nextPlacement) {\n                _context3.next = 26;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  index: currentIndex + 1,\n                  overflows: allOverflows\n                },\n                reset: {\n                  placement: nextPlacement\n                }\n              });\n            case 26:\n              placementsSortedByMostSpace = allOverflows.map(function (d) {\n                var alignment = getAlignment(d.placement);\n                return [d.placement, alignment && crossAxis ?\n                // Check along the mainAxis and main crossAxis side.\n                d.overflows.slice(0, 2).reduce(function (acc, v) {\n                  return acc + v;\n                }, 0) :\n                // Check only the mainAxis.\n                d.overflows[0], d.overflows];\n              }).sort(function (a, b) {\n                return a[1] - b[1];\n              });\n              placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(function (d) {\n                return d[2].slice(0,\n                // Aligned placements should not check their opposite crossAxis\n                // side.\n                getAlignment(d[0]) ? 2 : 3).every(function (v) {\n                  return v <= 0;\n                });\n              });\n              resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n              if (!(resetPlacement !== placement)) {\n                _context3.next = 31;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  index: currentIndex + 1,\n                  overflows: allOverflows\n                },\n                reset: {\n                  placement: resetPlacement\n                }\n              });\n            case 31:\n              return _context3.abrupt(\"return\", {});\n            case 32:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\nfunction getExpandedPlacements(placement) {\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getSideList(side, isStart, rtl) {\n  var lr = ['left', 'right'];\n  var rl = ['right', 'left'];\n  var tb = ['top', 'bottom'];\n  var bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  var alignment = getAlignment(placement);\n  var list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(function (side) {\n      return side + \"-\" + alignment;\n    });\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _evaluate2, _evaluate2$mainAxis, checkMainAxis, _evaluate2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _evaluate2$fallbackSt, fallbackStrategy, _evaluate2$fallbackAx, fallbackAxisSideDirection, _evaluate2$flipAlignm, flipAlignment, detectOverflowOptions, side, isBasePlacement, rtl, fallbackPlacements, placements, overflow, overflows, overflowsData, _getAlignmentSides2, main, cross, _middlewareData$flip2, _overflowsData$filter, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              placement = state.placement, middlewareData = state.middlewareData, rects = state.rects, initialPlacement = state.initialPlacement, platform = state.platform, elements = state.elements;\n              _evaluate2 = evaluate(options, state), _evaluate2$mainAxis = _evaluate2.mainAxis, checkMainAxis = _evaluate2$mainAxis === void 0 ? true : _evaluate2$mainAxis, _evaluate2$crossAxis = _evaluate2.crossAxis, checkCrossAxis = _evaluate2$crossAxis === void 0 ? true : _evaluate2$crossAxis, specifiedFallbackPlacements = _evaluate2.fallbackPlacements, _evaluate2$fallbackSt = _evaluate2.fallbackStrategy, fallbackStrategy = _evaluate2$fallbackSt === void 0 ? 'bestFit' : _evaluate2$fallbackSt, _evaluate2$fallbackAx = _evaluate2.fallbackAxisSideDirection, fallbackAxisSideDirection = _evaluate2$fallbackAx === void 0 ? 'none' : _evaluate2$fallbackAx, _evaluate2$flipAlignm = _evaluate2.flipAlignment, flipAlignment = _evaluate2$flipAlignm === void 0 ? true : _evaluate2$flipAlignm, detectOverflowOptions = _objectWithoutProperties(_evaluate2, _excluded2);\n              side = getSide(placement);\n              isBasePlacement = getSide(initialPlacement) === initialPlacement;\n              _context4.next = 6;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 6:\n              rtl = _context4.sent;\n              fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n              if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n                fallbackPlacements.push.apply(fallbackPlacements, _toConsumableArray(getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl)));\n              }\n              placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n              _context4.next = 12;\n              return detectOverflow(state, detectOverflowOptions);\n            case 12:\n              overflow = _context4.sent;\n              overflows = [];\n              overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n              if (checkMainAxis) {\n                overflows.push(overflow[side]);\n              }\n              if (checkCrossAxis) {\n                _getAlignmentSides2 = getAlignmentSides(placement, rects, rtl), main = _getAlignmentSides2.main, cross = _getAlignmentSides2.cross;\n                overflows.push(overflow[main], overflow[cross]);\n              }\n              overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                placement: placement,\n                overflows: overflows\n              }]);\n\n              // One or more sides is overflowing.\n              if (overflows.every(function (side) {\n                return side <= 0;\n              })) {\n                _context4.next = 35;\n                break;\n              }\n              nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n              nextPlacement = placements[nextIndex];\n              if (!nextPlacement) {\n                _context4.next = 23;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                data: {\n                  index: nextIndex,\n                  overflows: overflowsData\n                },\n                reset: {\n                  placement: nextPlacement\n                }\n              });\n            case 23:\n              // First, find the candidates that fit on the mainAxis side of overflow,\n              // then find the placement that fits the best on the main crossAxis side.\n              resetPlacement = (_overflowsData$filter = overflowsData.filter(function (d) {\n                return d.overflows[0] <= 0;\n              }).sort(function (a, b) {\n                return a.overflows[1] - b.overflows[1];\n              })[0]) == null ? void 0 : _overflowsData$filter.placement; // Otherwise fallback.\n              if (resetPlacement) {\n                _context4.next = 33;\n                break;\n              }\n              _context4.t0 = fallbackStrategy;\n              _context4.next = _context4.t0 === 'bestFit' ? 28 : _context4.t0 === 'initialPlacement' ? 31 : 33;\n              break;\n            case 28:\n              _placement = (_overflowsData$map$so = overflowsData.map(function (d) {\n                return [d.placement, d.overflows.filter(function (overflow) {\n                  return overflow > 0;\n                }).reduce(function (acc, overflow) {\n                  return acc + overflow;\n                }, 0)];\n              }).sort(function (a, b) {\n                return a[1] - b[1];\n              })[0]) == null ? void 0 : _overflowsData$map$so[0];\n              if (_placement) {\n                resetPlacement = _placement;\n              }\n              return _context4.abrupt(\"break\", 33);\n            case 31:\n              resetPlacement = initialPlacement;\n              return _context4.abrupt(\"break\", 33);\n            case 33:\n              if (!(placement !== resetPlacement)) {\n                _context4.next = 35;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                reset: {\n                  placement: resetPlacement\n                }\n              });\n            case 35:\n              return _context4.abrupt(\"return\", {});\n            case 36:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nvar hide = function hide(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var rects, _evaluate3, _evaluate3$strategy, strategy, detectOverflowOptions, overflow, offsets, _overflow, _offsets;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              rects = state.rects;\n              _evaluate3 = evaluate(options, state), _evaluate3$strategy = _evaluate3.strategy, strategy = _evaluate3$strategy === void 0 ? 'referenceHidden' : _evaluate3$strategy, detectOverflowOptions = _objectWithoutProperties(_evaluate3, _excluded3);\n              _context5.t0 = strategy;\n              _context5.next = _context5.t0 === 'referenceHidden' ? 5 : _context5.t0 === 'escaped' ? 10 : 15;\n              break;\n            case 5:\n              _context5.next = 7;\n              return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                elementContext: 'reference'\n              }));\n            case 7:\n              overflow = _context5.sent;\n              offsets = getSideOffsets(overflow, rects.reference);\n              return _context5.abrupt(\"return\", {\n                data: {\n                  referenceHiddenOffsets: offsets,\n                  referenceHidden: isAnySideFullyClipped(offsets)\n                }\n              });\n            case 10:\n              _context5.next = 12;\n              return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                altBoundary: true\n              }));\n            case 12:\n              _overflow = _context5.sent;\n              _offsets = getSideOffsets(_overflow, rects.floating);\n              return _context5.abrupt(\"return\", {\n                data: {\n                  escapedOffsets: _offsets,\n                  escaped: isAnySideFullyClipped(_offsets)\n                }\n              });\n            case 15:\n              return _context5.abrupt(\"return\", {});\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\nfunction getBoundingRect(rects) {\n  var minX = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.left;\n  })));\n  var minY = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.top;\n  })));\n  var maxX = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.right;\n  })));\n  var maxY = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.bottom;\n  })));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  var sortedRects = rects.slice().sort(function (a, b) {\n    return a.y - b.y;\n  });\n  var groups = [];\n  var prevRect = null;\n  for (var i = 0; i < sortedRects.length; i++) {\n    var rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(function (rect) {\n    return rectToClientRect(getBoundingRect(rect));\n  });\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var placement, elements, rects, platform, strategy, _evaluate4, _evaluate4$padding, padding, x, y, nativeClientRects, clientRects, fallback, paddingObject, getBoundingClientRect, resetRects;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              getBoundingClientRect = function _getBoundingClientRec() {\n                // There are two rects and they are disjoined.\n                if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                  // Find the first rect in which the point is fully inside.\n                  return clientRects.find(function (rect) {\n                    return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                  }) || fallback;\n                }\n\n                // There are 2 or more connected rects.\n                if (clientRects.length >= 2) {\n                  if (getMainAxisFromPlacement(placement) === 'x') {\n                    var firstRect = clientRects[0];\n                    var lastRect = clientRects[clientRects.length - 1];\n                    var isTop = getSide(placement) === 'top';\n                    var _top = firstRect.top;\n                    var _bottom = lastRect.bottom;\n                    var _left = isTop ? firstRect.left : lastRect.left;\n                    var _right = isTop ? firstRect.right : lastRect.right;\n                    var _width = _right - _left;\n                    var _height = _bottom - _top;\n                    return {\n                      top: _top,\n                      bottom: _bottom,\n                      left: _left,\n                      right: _right,\n                      width: _width,\n                      height: _height,\n                      x: _left,\n                      y: _top\n                    };\n                  }\n                  var isLeftSide = getSide(placement) === 'left';\n                  var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                    return rect.right;\n                  })));\n                  var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                    return rect.left;\n                  })));\n                  var measureRects = clientRects.filter(function (rect) {\n                    return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                  });\n                  var top = measureRects[0].top;\n                  var bottom = measureRects[measureRects.length - 1].bottom;\n                  var left = minLeft;\n                  var right = maxRight;\n                  var width = right - left;\n                  var height = bottom - top;\n                  return {\n                    top: top,\n                    bottom: bottom,\n                    left: left,\n                    right: right,\n                    width: width,\n                    height: height,\n                    x: left,\n                    y: top\n                  };\n                }\n                return fallback;\n              };\n              placement = state.placement, elements = state.elements, rects = state.rects, platform = state.platform, strategy = state.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n              // ClientRect's bounds, despite the event listener being triggered. A\n              // padding of 2 seems to handle this issue.\n              _evaluate4 = evaluate(options, state), _evaluate4$padding = _evaluate4.padding, padding = _evaluate4$padding === void 0 ? 2 : _evaluate4$padding, x = _evaluate4.x, y = _evaluate4.y;\n              _context6.t0 = Array;\n              _context6.next = 6;\n              return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n            case 6:\n              _context6.t1 = _context6.sent;\n              if (_context6.t1) {\n                _context6.next = 9;\n                break;\n              }\n              _context6.t1 = [];\n            case 9:\n              _context6.t2 = _context6.t1;\n              nativeClientRects = _context6.t0.from.call(_context6.t0, _context6.t2);\n              clientRects = getRectsByLine(nativeClientRects);\n              fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n              paddingObject = getSideObjectFromPadding(padding);\n              _context6.next = 16;\n              return platform.getElementRects({\n                reference: {\n                  getBoundingClientRect: getBoundingClientRect\n                },\n                floating: elements.floating,\n                strategy: strategy\n              });\n            case 16:\n              resetRects = _context6.sent;\n              if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                _context6.next = 19;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                reset: {\n                  rects: resetRects\n                }\n              });\n            case 19:\n              return _context6.abrupt(\"return\", {});\n            case 20:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(state, options) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref6, mainAxis, crossAxis, alignmentAxis;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          placement = state.placement, platform = state.platform, elements = state.elements;\n          _context11.next = 3;\n          return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n        case 3:\n          rtl = _context11.sent;\n          side = getSide(placement);\n          alignment = getAlignment(placement);\n          isVertical = getMainAxisFromPlacement(placement) === 'x';\n          mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n          crossAxisMulti = rtl && isVertical ? -1 : 1;\n          rawValue = evaluate(options, state); // eslint-disable-next-line prefer-const\n          _ref6 = typeof rawValue === 'number' ? {\n            mainAxis: rawValue,\n            crossAxis: 0,\n            alignmentAxis: null\n          } : _objectSpread({\n            mainAxis: 0,\n            crossAxis: 0,\n            alignmentAxis: null\n          }, rawValue), mainAxis = _ref6.mainAxis, crossAxis = _ref6.crossAxis, alignmentAxis = _ref6.alignmentAxis;\n          if (alignment && typeof alignmentAxis === 'number') {\n            crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n          }\n          return _context11.abrupt(\"return\", isVertical ? {\n            x: crossAxis * crossAxisMulti,\n            y: mainAxis * mainAxisMulti\n          } : {\n            x: mainAxis * mainAxisMulti,\n            y: crossAxis * crossAxisMulti\n          });\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\nvar offset = function offset(options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var x, y, diffCoords;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              x = state.x, y = state.y;\n              _context7.next = 3;\n              return convertValueToCoords(state, options);\n            case 3:\n              diffCoords = _context7.sent;\n              return _context7.abrupt(\"return\", {\n                x: x + diffCoords.x,\n                y: y + diffCoords.y,\n                data: diffCoords\n              });\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var _objectSpread3;\n        var x, y, placement, _evaluate5, _evaluate5$mainAxis, checkMainAxis, _evaluate5$crossAxis, checkCrossAxis, _evaluate5$limiter, limiter, detectOverflowOptions, coords, overflow, mainAxis, crossAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              x = state.x, y = state.y, placement = state.placement;\n              _evaluate5 = evaluate(options, state), _evaluate5$mainAxis = _evaluate5.mainAxis, checkMainAxis = _evaluate5$mainAxis === void 0 ? true : _evaluate5$mainAxis, _evaluate5$crossAxis = _evaluate5.crossAxis, checkCrossAxis = _evaluate5$crossAxis === void 0 ? false : _evaluate5$crossAxis, _evaluate5$limiter = _evaluate5.limiter, limiter = _evaluate5$limiter === void 0 ? {\n                fn: function fn(_ref) {\n                  var x = _ref.x,\n                    y = _ref.y;\n                  return {\n                    x: x,\n                    y: y\n                  };\n                }\n              } : _evaluate5$limiter, detectOverflowOptions = _objectWithoutProperties(_evaluate5, _excluded4);\n              coords = {\n                x: x,\n                y: y\n              };\n              _context8.next = 5;\n              return detectOverflow(state, detectOverflowOptions);\n            case 5:\n              overflow = _context8.sent;\n              mainAxis = getMainAxisFromPlacement(getSide(placement));\n              crossAxis = getCrossAxis(mainAxis);\n              mainAxisCoord = coords[mainAxis];\n              crossAxisCoord = coords[crossAxis];\n              if (checkMainAxis) {\n                minSide = mainAxis === 'y' ? 'top' : 'left';\n                maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                _min = mainAxisCoord + overflow[minSide];\n                _max = mainAxisCoord - overflow[maxSide];\n                mainAxisCoord = within(_min, mainAxisCoord, _max);\n              }\n              if (checkCrossAxis) {\n                _minSide = crossAxis === 'y' ? 'top' : 'left';\n                _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                _min2 = crossAxisCoord + overflow[_minSide];\n                _max2 = crossAxisCoord - overflow[_maxSide];\n                crossAxisCoord = within(_min2, crossAxisCoord, _max2);\n              }\n              limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, state), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, mainAxis, mainAxisCoord), _defineProperty(_objectSpread3, crossAxis, crossAxisCoord), _objectSpread3)));\n              return _context8.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                data: {\n                  x: limitedCoords.x - x,\n                  y: limitedCoords.y - y\n                }\n              }));\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options: options,\n    fn: function fn(state) {\n      var _ref5;\n      var x = state.x,\n        y = state.y,\n        placement = state.placement,\n        rects = state.rects,\n        middlewareData = state.middlewareData;\n      var _evaluate6 = evaluate(options, state),\n        _evaluate6$offset = _evaluate6.offset,\n        offset = _evaluate6$offset === void 0 ? 0 : _evaluate6$offset,\n        _evaluate6$mainAxis = _evaluate6.mainAxis,\n        checkMainAxis = _evaluate6$mainAxis === void 0 ? true : _evaluate6$mainAxis,\n        _evaluate6$crossAxis = _evaluate6.crossAxis,\n        checkCrossAxis = _evaluate6$crossAxis === void 0 ? true : _evaluate6$crossAxis;\n      var coords = {\n        x: x,\n        y: y\n      };\n      var mainAxis = getMainAxisFromPlacement(placement);\n      var crossAxis = getCrossAxis(mainAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = evaluate(offset, state);\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n      return _ref5 = {}, _defineProperty(_ref5, mainAxis, mainAxisCoord), _defineProperty(_ref5, crossAxis, crossAxisCoord), _ref5;\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var placement, rects, platform, elements, _evaluate7, _evaluate7$apply, apply, detectOverflowOptions, overflow, side, alignment, axis, isXAxis, _rects$floating, width, height, heightSide, widthSide, overflowAvailableHeight, overflowAvailableWidth, noShift, availableHeight, availableWidth, maximumClippingWidth, maximumClippingHeight, xMin, xMax, yMin, yMax, nextDimensions;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements;\n              _evaluate7 = evaluate(options, state), _evaluate7$apply = _evaluate7.apply, apply = _evaluate7$apply === void 0 ? function () {} : _evaluate7$apply, detectOverflowOptions = _objectWithoutProperties(_evaluate7, _excluded5);\n              _context9.next = 4;\n              return detectOverflow(state, detectOverflowOptions);\n            case 4:\n              overflow = _context9.sent;\n              side = getSide(placement);\n              alignment = getAlignment(placement);\n              axis = getMainAxisFromPlacement(placement);\n              isXAxis = axis === 'x';\n              _rects$floating = rects.floating, width = _rects$floating.width, height = _rects$floating.height;\n              if (!(side === 'top' || side === 'bottom')) {\n                _context9.next = 29;\n                break;\n              }\n              heightSide = side;\n              _context9.t0 = alignment;\n              _context9.next = 15;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 15:\n              if (!_context9.sent) {\n                _context9.next = 19;\n                break;\n              }\n              _context9.t1 = 'start';\n              _context9.next = 20;\n              break;\n            case 19:\n              _context9.t1 = 'end';\n            case 20:\n              _context9.t2 = _context9.t1;\n              if (!(_context9.t0 === _context9.t2)) {\n                _context9.next = 25;\n                break;\n              }\n              _context9.t3 = 'left';\n              _context9.next = 26;\n              break;\n            case 25:\n              _context9.t3 = 'right';\n            case 26:\n              widthSide = _context9.t3;\n              _context9.next = 31;\n              break;\n            case 29:\n              widthSide = side;\n              heightSide = alignment === 'end' ? 'top' : 'bottom';\n            case 31:\n              overflowAvailableHeight = height - overflow[heightSide];\n              overflowAvailableWidth = width - overflow[widthSide];\n              noShift = !state.middlewareData.shift;\n              availableHeight = overflowAvailableHeight;\n              availableWidth = overflowAvailableWidth;\n              if (isXAxis) {\n                maximumClippingWidth = width - overflow.left - overflow.right;\n                availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n              } else {\n                maximumClippingHeight = height - overflow.top - overflow.bottom;\n                availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n              }\n              if (noShift && !alignment) {\n                xMin = max(overflow.left, 0);\n                xMax = max(overflow.right, 0);\n                yMin = max(overflow.top, 0);\n                yMax = max(overflow.bottom, 0);\n                if (isXAxis) {\n                  availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n                } else {\n                  availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n                }\n              }\n              _context9.next = 40;\n              return apply(_objectSpread(_objectSpread({}, state), {}, {\n                availableWidth: availableWidth,\n                availableHeight: availableHeight\n              }));\n            case 40:\n              _context9.next = 42;\n              return platform.getDimensions(elements.floating);\n            case 42:\n              nextDimensions = _context9.sent;\n              if (!(width !== nextDimensions.width || height !== nextDimensions.height)) {\n                _context9.next = 45;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                reset: {\n                  rects: true\n                }\n              });\n            case 45:\n              return _context9.abrupt(\"return\", {});\n            case 46:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"names":["getAlignment","placement","split","getLengthFromAxis","axis","getSide","getMainAxisFromPlacement","includes","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_config$placement","_config$strategy","strategy","_config$middleware","middleware","platform","validMiddleware","rects","_computeCoordsFromPla","statefulPlacement","middlewareData","resetCount","i","_validMiddleware$i","name","fn","_yield$fn","nextX","nextY","data","reset","_computeCoordsFromPla2","wrap","_callee$","_context","prev","next","filter","Boolean","isRTL","sent","getElementRects","initialPlacement","elements","_objectSpread","_defineProperty","t0","abrupt","stop","_x","_x2","_x3","apply","arguments","evaluate","value","param","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","_x4","_x5","_detectOverflow","_callee10","state","options","_await$platform$isEle","_evaluate8","_evaluate8$boundary","boundary","_evaluate8$rootBounda","rootBoundary","_evaluate8$elementCon","elementContext","_evaluate8$altBoundar","altBoundary","_evaluate8$padding","paddingObject","altContext","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","_callee10$","_context10","t1","isElement","t2","t3","t4","t5","contextElement","getDocumentElement","t6","t7","t8","t9","t10","getClippingRect","call","t11","getOffsetParent","getScale","t13","t12","t14","convertOffsetParentRelativeRectToViewportRelativeRect","t15","t16","min","Math","max","within","min$1","max$1","arrow","_callee2","_data","_ref4","_ref3","_ref3$padding","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","center","offset","shouldAddOffset","alignmentOffset","_callee2$","_context2","getDimensions","sides","allPlacements","reduce","acc","concat","oppositeSideMap","getOppositePlacement","replace","getAlignmentSides","alignment","mainAlignmentSide","main","cross","oppositeAlignmentMap","start","end","getOppositeAlignmentPlacement","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","_toConsumableArray","autoPlacement","_callee3","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","_evaluate","_evaluate$crossAxis","crossAxis","_evaluate$allowedPlac","_evaluate$autoAlignme","detectOverflowOptions","placements","overflow","currentIndex","currentPlacement","_getAlignmentSides","currentOverflows","allOverflows","nextPlacement","placementsSortedByMostSpace","placementsThatFitOnEachSide","resetPlacement","_callee3$","_context3","_objectWithoutProperties","_excluded","undefined","index","overflows","map","d","slice","v","sort","a","b","every","getExpandedPlacements","oppositePlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","flip","_callee4","_middlewareData$flip","_evaluate2","_evaluate2$mainAxis","checkMainAxis","_evaluate2$crossAxis","checkCrossAxis","specifiedFallbackPlacements","_evaluate2$fallbackSt","fallbackStrategy","_evaluate2$fallbackAx","fallbackAxisSideDirection","_evaluate2$flipAlignm","isBasePlacement","fallbackPlacements","overflowsData","_getAlignmentSides2","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","_placement","_callee4$","_context4","_excluded2","push","getSideOffsets","isAnySideFullyClipped","some","hide","_callee5","_evaluate3","_evaluate3$strategy","offsets","_overflow","_offsets","_callee5$","_context5","_excluded3","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","_callee6","_evaluate4","_evaluate4$padding","nativeClientRects","clientRects","fallback","getBoundingClientRect","resetRects","_callee6$","_context6","_getBoundingClientRec","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","Array","getClientRects","from","convertValueToCoords","_x6","_x7","_convertValueToCoords","_callee11","mainAxisMulti","crossAxisMulti","rawValue","_ref6","alignmentAxis","_callee11$","_context11","_callee7","diffCoords","_callee7$","_context7","getCrossAxis","shift","_callee8","_objectSpread3","_evaluate5","_evaluate5$mainAxis","_evaluate5$crossAxis","_evaluate5$limiter","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","_min","_max","_minSide","_maxSide","_min2","_max2","limitedCoords","_callee8$","_context8","_excluded4","limitShift","_ref5","_evaluate6","_evaluate6$offset","_evaluate6$mainAxis","_evaluate6$crossAxis","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","size","_callee9","_evaluate7","_evaluate7$apply","isXAxis","_rects$floating","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","_callee9$","_context9","_excluded5"],"sources":["/home/salman/Documents/GitHub/FakeShop/client/node_modules/@floating-ui/core/dist/floating-ui.core.browser.mjs"],"sourcesContent":["function getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset + alignmentOffset\n      }\n    };\n  }\n});\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getSideObjectFromPadding(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const axis = getMainAxisFromPlacement(placement);\n      const isXAxis = axis === 'x';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isXAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isXAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"],"mappings":";;;;;;;;;;;AAAA,SAASA,YAAYA,CAACC,SAAS,EAAE;EAC/B,OAAOA,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChC;AAEA,SAASC,iBAAiBA,CAACC,IAAI,EAAE;EAC/B,OAAOA,IAAI,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO;AAC1C;AAEA,SAASC,OAAOA,CAACJ,SAAS,EAAE;EAC1B,OAAOA,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChC;AAEA,SAASI,wBAAwBA,CAACL,SAAS,EAAE;EAC3C,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAACM,QAAQ,CAACF,OAAO,CAACJ,SAAS,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;AACnE;AAEA,SAASO,0BAA0BA,CAACC,IAAI,EAAER,SAAS,EAAES,GAAG,EAAE;EACxD,IACEC,SAAS,GAEPF,IAAI,CAFNE,SAAS;IACTC,QAAQ,GACNH,IAAI,CADNG,QAAQ;EAEV,IAAMC,OAAO,GAAGF,SAAS,CAACG,CAAC,GAAGH,SAAS,CAACI,KAAK,GAAG,CAAC,GAAGH,QAAQ,CAACG,KAAK,GAAG,CAAC;EACtE,IAAMC,OAAO,GAAGL,SAAS,CAACM,CAAC,GAAGN,SAAS,CAACO,MAAM,GAAG,CAAC,GAAGN,QAAQ,CAACM,MAAM,GAAG,CAAC;EACxE,IAAMC,QAAQ,GAAGb,wBAAwB,CAACL,SAAS,CAAC;EACpD,IAAMmB,MAAM,GAAGjB,iBAAiB,CAACgB,QAAQ,CAAC;EAC1C,IAAME,WAAW,GAAGV,SAAS,CAACS,MAAM,CAAC,GAAG,CAAC,GAAGR,QAAQ,CAACQ,MAAM,CAAC,GAAG,CAAC;EAChE,IAAME,IAAI,GAAGjB,OAAO,CAACJ,SAAS,CAAC;EAC/B,IAAMsB,UAAU,GAAGJ,QAAQ,KAAK,GAAG;EACnC,IAAIK,MAAM;EACV,QAAQF,IAAI;IACV,KAAK,KAAK;MACRE,MAAM,GAAG;QACPV,CAAC,EAAED,OAAO;QACVI,CAAC,EAAEN,SAAS,CAACM,CAAC,GAAGL,QAAQ,CAACM;MAC5B,CAAC;MACD;IACF,KAAK,QAAQ;MACXM,MAAM,GAAG;QACPV,CAAC,EAAED,OAAO;QACVI,CAAC,EAAEN,SAAS,CAACM,CAAC,GAAGN,SAAS,CAACO;MAC7B,CAAC;MACD;IACF,KAAK,OAAO;MACVM,MAAM,GAAG;QACPV,CAAC,EAAEH,SAAS,CAACG,CAAC,GAAGH,SAAS,CAACI,KAAK;QAChCE,CAAC,EAAED;MACL,CAAC;MACD;IACF,KAAK,MAAM;MACTQ,MAAM,GAAG;QACPV,CAAC,EAAEH,SAAS,CAACG,CAAC,GAAGF,QAAQ,CAACG,KAAK;QAC/BE,CAAC,EAAED;MACL,CAAC;MACD;IACF;MACEQ,MAAM,GAAG;QACPV,CAAC,EAAEH,SAAS,CAACG,CAAC;QACdG,CAAC,EAAEN,SAAS,CAACM;MACf,CAAC;EACL;EACA,QAAQjB,YAAY,CAACC,SAAS,CAAC;IAC7B,KAAK,OAAO;MACVuB,MAAM,CAACL,QAAQ,CAAC,IAAIE,WAAW,IAAIX,GAAG,IAAIa,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9D;IACF,KAAK,KAAK;MACRC,MAAM,CAACL,QAAQ,CAAC,IAAIE,WAAW,IAAIX,GAAG,IAAIa,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9D;EACJ;EACA,OAAOC,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,eAAe;EAAA,IAAAC,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOnB,SAAS,EAAEC,QAAQ,EAAEmB,MAAM;IAAA,IAAAC,iBAAA,EAAA/B,SAAA,EAAAgC,gBAAA,EAAAC,QAAA,EAAAC,kBAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,eAAA,EAAA5B,GAAA,EAAA6B,KAAA,EAAAC,qBAAA,EAAA1B,CAAA,EAAAG,CAAA,EAAAwB,iBAAA,EAAAC,cAAA,EAAAC,UAAA,EAAAC,CAAA,EAAAC,kBAAA,EAAAC,IAAA,EAAAC,EAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,sBAAA;IAAA,OAAAzB,mBAAA,GAAA0B,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA1B,iBAAA,GAMpDD,MAAM,CAJR9B,SAAS,EAATA,SAAS,GAAA+B,iBAAA,cAAG,QAAQ,GAAAA,iBAAA,EAAAC,gBAAA,GAIlBF,MAAM,CAHRG,QAAQ,EAARA,QAAQ,GAAAD,gBAAA,cAAG,UAAU,GAAAA,gBAAA,EAAAE,kBAAA,GAGnBJ,MAAM,CAFRK,UAAU,EAAVA,UAAU,GAAAD,kBAAA,cAAG,EAAE,GAAAA,kBAAA,EACfE,QAAQ,GACNN,MAAM,CADRM,QAAQ;UAEJC,eAAe,GAAGF,UAAU,CAACuB,MAAM,CAACC,OAAO,CAAC;UAAAJ,QAAA,CAAAE,IAAA;UAAA,OAC/BrB,QAAQ,CAACwB,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGxB,QAAQ,CAACwB,KAAK,CAACjD,QAAQ,CAAC;QAAA;UAAvEF,GAAG,GAAA8C,QAAA,CAAAM,IAAA;UAAAN,QAAA,CAAAE,IAAA;UAAA,OACSrB,QAAQ,CAAC0B,eAAe,CAAC;YACzCpD,SAAS,EAATA,SAAS;YACTC,QAAQ,EAARA,QAAQ;YACRsB,QAAQ,EAARA;UACF,CAAC,CAAC;QAAA;UAJEK,KAAK,GAAAiB,QAAA,CAAAM,IAAA;UAAAtB,qBAAA,GAQLhC,0BAA0B,CAAC+B,KAAK,EAAEtC,SAAS,EAAES,GAAG,CAAC,EAFnDI,CAAC,GAAA0B,qBAAA,CAAD1B,CAAC,EACDG,CAAC,GAAAuB,qBAAA,CAADvB,CAAC;UAECwB,iBAAiB,GAAGxC,SAAS;UAC7ByC,cAAc,GAAG,CAAC,CAAC;UACnBC,UAAU,GAAG,CAAC;UACTC,CAAC,GAAG,CAAC;QAAA;UAAA,MAAEA,CAAC,GAAGN,eAAe,CAAClB,MAAM;YAAAoC,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAb,kBAAA,GAIpCP,eAAe,CAACM,CAAC,CAAC,EAFpBE,IAAI,GAAAD,kBAAA,CAAJC,IAAI,EACJC,EAAE,GAAAF,kBAAA,CAAFE,EAAE;UAAAS,QAAA,CAAAE,IAAA;UAAA,OAOMX,EAAE,CAAC;YACXjC,CAAC,EAADA,CAAC;YACDG,CAAC,EAADA,CAAC;YACD+C,gBAAgB,EAAE/D,SAAS;YAC3BA,SAAS,EAAEwC,iBAAiB;YAC5BP,QAAQ,EAARA,QAAQ;YACRQ,cAAc,EAAdA,cAAc;YACdH,KAAK,EAALA,KAAK;YACLF,QAAQ,EAARA,QAAQ;YACR4B,QAAQ,EAAE;cACRtD,SAAS,EAATA,SAAS;cACTC,QAAQ,EAARA;YACF;UACF,CAAC,CAAC;QAAA;UAAAoC,SAAA,GAAAQ,QAAA,CAAAM,IAAA;UAjBGb,KAAK,GAAAD,SAAA,CAARlC,CAAC;UACEoC,KAAK,GAAAF,SAAA,CAAR/B,CAAC;UACDkC,IAAI,GAAAH,SAAA,CAAJG,IAAI;UACJC,KAAK,GAAAJ,SAAA,CAALI,KAAK;UAePtC,CAAC,GAAGmC,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGnC,CAAC;UAC7BG,CAAC,GAAGiC,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGjC,CAAC;UAC7ByB,cAAc,GAAAwB,aAAA,CAAAA,aAAA,KACTxB,cAAc,OAAAyB,eAAA,KAChBrB,IAAI,EAAAoB,aAAA,CAAAA,aAAA,KACAxB,cAAc,CAACI,IAAI,CAAC,GACpBK,IAAI,GAEV;UAAC,MACEC,KAAK,IAAIT,UAAU,IAAI,EAAE;YAAAa,QAAA,CAAAE,IAAA;YAAA;UAAA;UAC3Bf,UAAU,EAAE;UAAC,MACT,OAAOS,KAAK,KAAK,QAAQ;YAAAI,QAAA,CAAAE,IAAA;YAAA;UAAA;UAC3B,IAAIN,KAAK,CAACnD,SAAS,EAAE;YACnBwC,iBAAiB,GAAGW,KAAK,CAACnD,SAAS;UACrC;UAAC,KACGmD,KAAK,CAACb,KAAK;YAAAiB,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MACLN,KAAK,CAACb,KAAK,KAAK,IAAI;YAAAiB,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAASrB,QAAQ,CAAC0B,eAAe,CAAC;YAC5DpD,SAAS,EAATA,SAAS;YACTC,QAAQ,EAARA,QAAQ;YACRsB,QAAQ,EAARA;UACF,CAAC,CAAC;QAAA;UAAAsB,QAAA,CAAAY,EAAA,GAAAZ,QAAA,CAAAM,IAAA;UAAAN,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAY,EAAA,GAAGhB,KAAK,CAACb,KAAK;QAAA;UAJhBA,KAAK,GAAAiB,QAAA,CAAAY,EAAA;QAAA;UAAAf,sBAAA,GASH7C,0BAA0B,CAAC+B,KAAK,EAAEE,iBAAiB,EAAE/B,GAAG,CAAC;UAF3DI,CAAC,GAAAuC,sBAAA,CAADvC,CAAC;UACDG,CAAC,GAAAoC,sBAAA,CAADpC,CAAC;QAAA;UAGL2B,CAAC,GAAG,CAAC,CAAC;UAAC,OAAAY,QAAA,CAAAa,MAAA;QAAA;UAnDiCzB,CAAC,EAAE;UAAAY,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAA,OAAAF,QAAA,CAAAa,MAAA,WAuDxC;YACLvD,CAAC,EAADA,CAAC;YACDG,CAAC,EAADA,CAAC;YACDhB,SAAS,EAAEwC,iBAAiB;YAC5BP,QAAQ,EAARA,QAAQ;YACRQ,cAAc,EAAdA;UACF,CAAC;QAAA;QAAA;UAAA,OAAAc,QAAA,CAAAc,IAAA;MAAA;IAAA,GAAAxC,OAAA;EAAA,CACF;EAAA,gBAnFKL,eAAeA,CAAA8C,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAA/C,KAAA,CAAAgD,KAAA,OAAAC,SAAA;EAAA;AAAA,GAmFpB;AAED,SAASC,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC9B,OAAO,OAAOD,KAAK,KAAK,UAAU,GAAGA,KAAK,CAACC,KAAK,CAAC,GAAGD,KAAK;AAC3D;AAEA,SAASE,mBAAmBA,CAACC,OAAO,EAAE;EACpC,OAAAd,aAAA;IACEe,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE;EAAC,GACJJ,OAAO;AAEd;AAEA,SAASK,wBAAwBA,CAACL,OAAO,EAAE;EACzC,OAAO,OAAOA,OAAO,KAAK,QAAQ,GAAGD,mBAAmB,CAACC,OAAO,CAAC,GAAG;IAClEC,GAAG,EAAED,OAAO;IACZE,KAAK,EAAEF,OAAO;IACdG,MAAM,EAAEH,OAAO;IACfI,IAAI,EAAEJ;EACR,CAAC;AACH;AAEA,SAASM,gBAAgBA,CAACC,IAAI,EAAE;EAC9B,OAAArB,aAAA,CAAAA,aAAA,KACKqB,IAAI;IACPN,GAAG,EAAEM,IAAI,CAACtE,CAAC;IACXmE,IAAI,EAAEG,IAAI,CAACzE,CAAC;IACZoE,KAAK,EAAEK,IAAI,CAACzE,CAAC,GAAGyE,IAAI,CAACxE,KAAK;IAC1BoE,MAAM,EAAEI,IAAI,CAACtE,CAAC,GAAGsE,IAAI,CAACrE;EAAM;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAQesE,cAAcA,CAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,eAAA,CAAAjB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAgB,gBAAA;EAAAA,eAAA,GAAAhE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA7B,SAAA+D,UAA8BC,KAAK,EAAEC,OAAO;IAAA,IAAAC,qBAAA,EAAAjF,CAAA,EAAAG,CAAA,EAAAoB,QAAA,EAAAE,KAAA,EAAA0B,QAAA,EAAA/B,QAAA,EAAA8D,UAAA,EAAAC,mBAAA,EAAAC,QAAA,EAAAC,qBAAA,EAAAC,YAAA,EAAAC,qBAAA,EAAAC,cAAA,EAAAC,qBAAA,EAAAC,WAAA,EAAAC,kBAAA,EAAAzB,OAAA,EAAA0B,aAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,kBAAA,EAAAtB,IAAA,EAAAuB,YAAA,EAAAC,WAAA,EAAAC,iBAAA;IAAA,OAAApF,mBAAA,GAAA0B,IAAA,UAAA2D,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAzD,IAAA,GAAAyD,UAAA,CAAAxD,IAAA;QAAA;UAE1C,IAAIoC,OAAO,KAAK,KAAK,CAAC,EAAE;YACtBA,OAAO,GAAG,CAAC,CAAC;UACd;UAEEhF,CAAC,GAMC+E,KAAK,CANP/E,CAAC,EACDG,CAAC,GAKC4E,KAAK,CALP5E,CAAC,EACDoB,QAAQ,GAINwD,KAAK,CAJPxD,QAAQ,EACRE,KAAK,GAGHsD,KAAK,CAHPtD,KAAK,EACL0B,QAAQ,GAEN4B,KAAK,CAFP5B,QAAQ,EACR/B,QAAQ,GACN2D,KAAK,CADP3D,QAAQ;UAAA8D,UAAA,GAQNpB,QAAQ,CAACkB,OAAO,EAAED,KAAK,CAAC,EAAAI,mBAAA,GAAAD,UAAA,CAL1BE,QAAQ,EAARA,QAAQ,GAAAD,mBAAA,cAAG,mBAAmB,GAAAA,mBAAA,EAAAE,qBAAA,GAAAH,UAAA,CAC9BI,YAAY,EAAZA,YAAY,GAAAD,qBAAA,cAAG,UAAU,GAAAA,qBAAA,EAAAE,qBAAA,GAAAL,UAAA,CACzBM,cAAc,EAAdA,cAAc,GAAAD,qBAAA,cAAG,UAAU,GAAAA,qBAAA,EAAAE,qBAAA,GAAAP,UAAA,CAC3BQ,WAAW,EAAXA,WAAW,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA,EAAAE,kBAAA,GAAAT,UAAA,CACnBhB,OAAO,EAAPA,OAAO,GAAAyB,kBAAA,cAAG,CAAC,GAAAA,kBAAA;UAEPC,aAAa,GAAGrB,wBAAwB,CAACL,OAAO,CAAC;UACjD2B,UAAU,GAAGL,cAAc,KAAK,UAAU,GAAG,WAAW,GAAG,UAAU;UACrEM,OAAO,GAAG3C,QAAQ,CAACuC,WAAW,GAAGG,UAAU,GAAGL,cAAc,CAAC;UAAAY,UAAA,CAAA9C,EAAA,GACxCkB,gBAAgB;UAAA4B,UAAA,CAAAC,EAAA,GAAO9E,QAAQ;UAAA6E,UAAA,CAAAxD,IAAA;UAAA,OACdrB,QAAQ,CAAC+E,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG/E,QAAQ,CAAC+E,SAAS,CAACR,OAAO,CAAC;QAAA;UAAAM,UAAA,CAAAG,EAAA,GAAhGtB,qBAAqB,GAAAmB,UAAA,CAAApD,IAAA;UAAA,MAAAoD,UAAA,CAAAG,EAAA,IAAiF,IAAI;YAAAH,UAAA,CAAAxD,IAAA;YAAA;UAAA;UAAAwD,UAAA,CAAAI,EAAA,GAAGvB,qBAAqB;UAAAmB,UAAA,CAAAxD,IAAA;UAAA;QAAA;UAAAwD,UAAA,CAAAI,EAAA,GAAG,IAAI;QAAA;UAAA,KAAAJ,UAAA,CAAAI,EAAA;YAAAJ,UAAA,CAAAxD,IAAA;YAAA;UAAA;UAAAwD,UAAA,CAAAK,EAAA,GAAIX,OAAO;UAAAM,UAAA,CAAAxD,IAAA;UAAA;QAAA;UAAAwD,UAAA,CAAAM,EAAA,GAAGZ,OAAO,CAACa,cAAc;UAAA,IAAAP,UAAA,CAAAM,EAAA;YAAAN,UAAA,CAAAxD,IAAA;YAAA;UAAA;UAAAwD,UAAA,CAAAxD,IAAA;UAAA,OAAYrB,QAAQ,CAACqF,kBAAkB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGrF,QAAQ,CAACqF,kBAAkB,CAACzD,QAAQ,CAACrD,QAAQ,CAAC;QAAA;UAAAsG,UAAA,CAAAM,EAAA,GAAAN,UAAA,CAAApD,IAAA;QAAA;UAAAoD,UAAA,CAAAK,EAAA,GAAAL,UAAA,CAAAM,EAAA;QAAA;UAAAN,UAAA,CAAAS,EAAA,GAAAT,UAAA,CAAAK,EAAA;UAAAL,UAAA,CAAAU,EAAA,GACjS1B,QAAQ;UAAAgB,UAAA,CAAAW,EAAA,GACRzB,YAAY;UAAAc,UAAA,CAAAY,EAAA,GACZ5F,QAAQ;UAAAgF,UAAA,CAAAa,GAAA;YAHRnB,OAAO,EAAAM,UAAA,CAAAS,EAAA;YACPzB,QAAQ,EAAAgB,UAAA,CAAAU,EAAA;YACRxB,YAAY,EAAAc,UAAA,CAAAW,EAAA;YACZ3F,QAAQ,EAAAgF,UAAA,CAAAY;UAAA;UAAAZ,UAAA,CAAAxD,IAAA;UAAA,OAAAwD,UAAA,CAAAC,EAAA,CAJiDa,eAAe,CAAAC,IAAA,CAAAf,UAAA,CAAAC,EAAA,EAAAD,UAAA,CAAAa,GAAA;QAAA;UAAAb,UAAA,CAAAgB,GAAA,GAAAhB,UAAA,CAAApD,IAAA;UAApE+C,kBAAkB,OAAAK,UAAA,CAAA9C,EAAA,EAAA8C,UAAA,CAAAgB,GAAA;UAMlB3C,IAAI,GAAGe,cAAc,KAAK,UAAU,GAAApC,aAAA,CAAAA,aAAA,KACrC3B,KAAK,CAAC3B,QAAQ;YACjBE,CAAC,EAADA,CAAC;YACDG,CAAC,EAADA;UAAC,KACCsB,KAAK,CAAC5B,SAAS;UAAAuG,UAAA,CAAAxD,IAAA;UAAA,OACSrB,QAAQ,CAAC8F,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG9F,QAAQ,CAAC8F,eAAe,CAAClE,QAAQ,CAACrD,QAAQ,CAAC;QAAA;UAA7GkG,YAAY,GAAAI,UAAA,CAAApD,IAAA;UAAAoD,UAAA,CAAAxD,IAAA;UAAA,OACUrB,QAAQ,CAAC+E,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG/E,QAAQ,CAAC+E,SAAS,CAACN,YAAY,CAAC;QAAA;UAAA,KAAAI,UAAA,CAAApD,IAAA;YAAAoD,UAAA,CAAAxD,IAAA;YAAA;UAAA;UAAAwD,UAAA,CAAAxD,IAAA;UAAA,OAAarB,QAAQ,CAAC+F,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG/F,QAAQ,CAAC+F,QAAQ,CAACtB,YAAY,CAAC;QAAA;UAAAI,UAAA,CAAAmB,GAAA,GAAAnB,UAAA,CAAApD,IAAA;UAAA,IAAAoD,UAAA,CAAAmB,GAAA;YAAAnB,UAAA,CAAAxD,IAAA;YAAA;UAAA;UAAAwD,UAAA,CAAAmB,GAAA,GAAM;YACvLvH,CAAC,EAAE,CAAC;YACJG,CAAC,EAAE;UACL,CAAC;QAAA;UAAAiG,UAAA,CAAAoB,GAAA,GAAApB,UAAA,CAAAmB,GAAA;UAAAnB,UAAA,CAAAxD,IAAA;UAAA;QAAA;UAAAwD,UAAA,CAAAoB,GAAA,GAAG;YACFxH,CAAC,EAAE,CAAC;YACJG,CAAC,EAAE;UACL,CAAC;QAAA;UANK8F,WAAW,GAAAG,UAAA,CAAAoB,GAAA;UAAApB,UAAA,CAAAqB,GAAA,GAOSjD,gBAAgB;UAAA,KAACjD,QAAQ,CAACmG,qDAAqD;YAAAtB,UAAA,CAAAxD,IAAA;YAAA;UAAA;UAAAwD,UAAA,CAAAxD,IAAA;UAAA,OAASrB,QAAQ,CAACmG,qDAAqD,CAAC;YAC/KjD,IAAI,EAAJA,IAAI;YACJuB,YAAY,EAAZA,YAAY;YACZ5E,QAAQ,EAARA;UACF,CAAC,CAAC;QAAA;UAAAgF,UAAA,CAAAuB,GAAA,GAAAvB,UAAA,CAAApD,IAAA;UAAAoD,UAAA,CAAAxD,IAAA;UAAA;QAAA;UAAAwD,UAAA,CAAAuB,GAAA,GAAGlD,IAAI;QAAA;UAAA2B,UAAA,CAAAwB,GAAA,GAAAxB,UAAA,CAAAuB,GAAA;UAJHzB,iBAAiB,OAAAE,UAAA,CAAAqB,GAAA,EAAArB,UAAA,CAAAwB,GAAA;UAAA,OAAAxB,UAAA,CAAA7C,MAAA,WAKhB;YACLY,GAAG,EAAE,CAAC4B,kBAAkB,CAAC5B,GAAG,GAAG+B,iBAAiB,CAAC/B,GAAG,GAAGyB,aAAa,CAACzB,GAAG,IAAI8B,WAAW,CAAC9F,CAAC;YACzFkE,MAAM,EAAE,CAAC6B,iBAAiB,CAAC7B,MAAM,GAAG0B,kBAAkB,CAAC1B,MAAM,GAAGuB,aAAa,CAACvB,MAAM,IAAI4B,WAAW,CAAC9F,CAAC;YACrGmE,IAAI,EAAE,CAACyB,kBAAkB,CAACzB,IAAI,GAAG4B,iBAAiB,CAAC5B,IAAI,GAAGsB,aAAa,CAACtB,IAAI,IAAI2B,WAAW,CAACjG,CAAC;YAC7FoE,KAAK,EAAE,CAAC8B,iBAAiB,CAAC9B,KAAK,GAAG2B,kBAAkB,CAAC3B,KAAK,GAAGwB,aAAa,CAACxB,KAAK,IAAI6B,WAAW,CAACjG;UAClG,CAAC;QAAA;QAAA;UAAA,OAAAoG,UAAA,CAAA5C,IAAA;MAAA;IAAA,GAAAsB,SAAA;EAAA,CACF;EAAA,OAAAD,eAAA,CAAAjB,KAAA,OAAAC,SAAA;AAAA;AAED,IAAMgE,GAAG,GAAGC,IAAI,CAACD,GAAG;AACpB,IAAME,GAAG,GAAGD,IAAI,CAACC,GAAG;AAEpB,SAASC,MAAMA,CAACC,KAAK,EAAElE,KAAK,EAAEmE,KAAK,EAAE;EACnC,OAAOH,GAAG,CAACE,KAAK,EAAEJ,GAAG,CAAC9D,KAAK,EAAEmE,KAAK,CAAC,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAGnD,OAAO;EAAA,OAAK;IACxBhD,IAAI,EAAE,OAAO;IACbgD,OAAO,EAAPA,OAAO;IACD/C,EAAE,WAAAA,GAAC8C,KAAK,EAAE;MAAA,OAAAlE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAqH,SAAA;QAAA,IAAAC,KAAA,EAAAC,KAAA;QAAA,IAAAtI,CAAA,EAAAG,CAAA,EAAAhB,SAAA,EAAAsC,KAAA,EAAAF,QAAA,EAAA4B,QAAA,EAAAoF,KAAA,EAAAzC,OAAA,EAAA0C,aAAA,EAAAtE,OAAA,EAAA0B,aAAA,EAAAlF,MAAA,EAAApB,IAAA,EAAAgB,MAAA,EAAAmI,eAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,SAAA,EAAAC,iBAAA,EAAAC,UAAA,EAAAC,iBAAA,EAAAC,sBAAA,EAAAC,UAAA,EAAAC,UAAA,EAAApB,KAAA,EAAAF,GAAA,EAAAuB,MAAA,EAAAC,MAAA,EAAAC,eAAA,EAAAC,eAAA;QAAA,OAAA3I,mBAAA,GAAA0B,IAAA,UAAAkH,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAhH,IAAA,GAAAgH,SAAA,CAAA/G,IAAA;YAAA;cAEZ5C,CAAC,GAMC+E,KAAK,CANP/E,CAAC,EACDG,CAAC,GAKC4E,KAAK,CALP5E,CAAC,EACDhB,SAAS,GAIP4F,KAAK,CAJP5F,SAAS,EACTsC,KAAK,GAGHsD,KAAK,CAHPtD,KAAK,EACLF,QAAQ,GAENwD,KAAK,CAFPxD,QAAQ,EACR4B,QAAQ,GACN4B,KAAK,CADP5B,QAAQ,EAEV;cAAAoF,KAAA,GAIIzE,QAAQ,CAACkB,OAAO,EAAED,KAAK,CAAC,IAAI,CAAC,CAAC,EAFhCe,OAAO,GAAAyC,KAAA,CAAPzC,OAAO,EAAA0C,aAAA,GAAAD,KAAA,CACPrE,OAAO,EAAPA,OAAO,GAAAsE,aAAA,cAAG,CAAC,GAAAA,aAAA;cAAA,MAET1C,OAAO,IAAI,IAAI;gBAAA6D,SAAA,CAAA/G,IAAA;gBAAA;cAAA;cAAA,OAAA+G,SAAA,CAAApG,MAAA,WACV,CAAC,CAAC;YAAA;cAELqC,aAAa,GAAGrB,wBAAwB,CAACL,OAAO,CAAC;cACjDxD,MAAM,GAAG;gBACbV,CAAC,EAADA,CAAC;gBACDG,CAAC,EAADA;cACF,CAAC;cACKb,IAAI,GAAGE,wBAAwB,CAACL,SAAS,CAAC;cAC1CmB,MAAM,GAAGjB,iBAAiB,CAACC,IAAI,CAAC;cAAAqK,SAAA,CAAA/G,IAAA;cAAA,OACRrB,QAAQ,CAACqI,aAAa,CAAC9D,OAAO,CAAC;YAAA;cAAvD2C,eAAe,GAAAkB,SAAA,CAAA3G,IAAA;cACf0F,OAAO,GAAGpJ,IAAI,KAAK,GAAG;cACtBqJ,OAAO,GAAGD,OAAO,GAAG,KAAK,GAAG,MAAM;cAClCE,OAAO,GAAGF,OAAO,GAAG,QAAQ,GAAG,OAAO;cACtCG,UAAU,GAAGH,OAAO,GAAG,cAAc,GAAG,aAAa;cACrDI,OAAO,GAAGrH,KAAK,CAAC5B,SAAS,CAACS,MAAM,CAAC,GAAGmB,KAAK,CAAC5B,SAAS,CAACP,IAAI,CAAC,GAAGoB,MAAM,CAACpB,IAAI,CAAC,GAAGmC,KAAK,CAAC3B,QAAQ,CAACQ,MAAM,CAAC;cACjGyI,SAAS,GAAGrI,MAAM,CAACpB,IAAI,CAAC,GAAGmC,KAAK,CAAC5B,SAAS,CAACP,IAAI,CAAC;cAAAqK,SAAA,CAAA/G,IAAA;cAAA,OACrBrB,QAAQ,CAAC8F,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG9F,QAAQ,CAAC8F,eAAe,CAACvB,OAAO,CAAC;YAAA;cAAxGkD,iBAAiB,GAAAW,SAAA,CAAA3G,IAAA;cACnBiG,UAAU,GAAGD,iBAAiB,GAAGA,iBAAiB,CAACH,UAAU,CAAC,GAAG,CAAC,EAEtE;cAAAc,SAAA,CAAArG,EAAA,GACI,CAAC2F,UAAU;cAAA,IAAAU,SAAA,CAAArG,EAAA;gBAAAqG,SAAA,CAAA/G,IAAA;gBAAA;cAAA;cAAA+G,SAAA,CAAA/G,IAAA;cAAA,OAAarB,QAAQ,CAAC+E,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG/E,QAAQ,CAAC+E,SAAS,CAAC0C,iBAAiB,CAAC;YAAA;cAAAW,SAAA,CAAArG,EAAA,IAAAqG,SAAA,CAAA3G,IAAA;YAAA;cAAA,KAAA2G,SAAA,CAAArG,EAAA;gBAAAqG,SAAA,CAAA/G,IAAA;gBAAA;cAAA;cACrGqG,UAAU,GAAG9F,QAAQ,CAACrD,QAAQ,CAAC+I,UAAU,CAAC,IAAIpH,KAAK,CAAC3B,QAAQ,CAACQ,MAAM,CAAC;YAAC;cAEjE4I,iBAAiB,GAAGJ,OAAO,GAAG,CAAC,GAAGC,SAAS,GAAG,CAAC,EAErD;cACA;cACMI,sBAAsB,GAAGF,UAAU,GAAG,CAAC,GAAGR,eAAe,CAACnI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;cACzE8I,UAAU,GAAGvB,GAAG,CAACjC,aAAa,CAAC+C,OAAO,CAAC,EAAEQ,sBAAsB,CAAC;cAChEE,UAAU,GAAGxB,GAAG,CAACjC,aAAa,CAACgD,OAAO,CAAC,EAAEO,sBAAsB,CAAC,EAEtE;cACA;cACMlB,KAAK,GAAGmB,UAAU;cAClBrB,GAAG,GAAGkB,UAAU,GAAGR,eAAe,CAACnI,MAAM,CAAC,GAAG+I,UAAU;cACvDC,MAAM,GAAGL,UAAU,GAAG,CAAC,GAAGR,eAAe,CAACnI,MAAM,CAAC,GAAG,CAAC,GAAG4I,iBAAiB;cACzEK,MAAM,GAAGvB,MAAM,CAACC,KAAK,EAAEqB,MAAM,EAAEvB,GAAG,CAAC,EAEzC;cACA;cACA;cACA;cACMyB,eAAe,GAAGtK,YAAY,CAACC,SAAS,CAAC,IAAI,IAAI,IAAImK,MAAM,IAAIC,MAAM,IAAI9H,KAAK,CAAC5B,SAAS,CAACS,MAAM,CAAC,GAAG,CAAC,IAAIgJ,MAAM,GAAGrB,KAAK,GAAGmB,UAAU,GAAGC,UAAU,CAAC,GAAGZ,eAAe,CAACnI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;cACnLmJ,eAAe,GAAGD,eAAe,GAAGF,MAAM,GAAGrB,KAAK,GAAGA,KAAK,GAAGqB,MAAM,GAAGvB,GAAG,GAAGuB,MAAM,GAAG,CAAC;cAAA,OAAAK,SAAA,CAAApG,MAAA,YAAA+E,KAAA,OAAAjF,eAAA,CAAAiF,KAAA,EAEzFhJ,IAAI,EAAGoB,MAAM,CAACpB,IAAI,CAAC,GAAGmK,eAAe,GAAApG,eAAA,CAAAiF,KAAA,WAAAD,KAAA,OAAAhF,eAAA,CAAAgF,KAAA,EAEnC/I,IAAI,EAAGiK,MAAM,GAAAlG,eAAA,CAAAgF,KAAA,kBACAiB,MAAM,GAAGC,MAAM,GAAGE,eAAe,GAAApB,KAAA,IAAAC,KAAA;YAAA;YAAA;cAAA,OAAAqB,SAAA,CAAAnG,IAAA;UAAA;QAAA,GAAA4E,QAAA;MAAA;IAGrD;EACF,CAAC;AAAA,CAAC;AAEF,IAAMyB,KAAK,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;AAChD,IAAMC,aAAa,GAAG,aAAaD,KAAK,CAACE,MAAM,CAAC,UAACC,GAAG,EAAExJ,IAAI;EAAA,OAAKwJ,GAAG,CAACC,MAAM,CAACzJ,IAAI,EAAEA,IAAI,GAAG,QAAQ,EAAEA,IAAI,GAAG,MAAM,CAAC;AAAA,GAAE,EAAE,CAAC;AAEpH,IAAM0J,eAAe,GAAG;EACtB5F,IAAI,EAAE,OAAO;EACbF,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,KAAK;EACbF,GAAG,EAAE;AACP,CAAC;AACD,SAASgG,oBAAoBA,CAAChL,SAAS,EAAE;EACvC,OAAOA,SAAS,CAACiL,OAAO,CAAC,wBAAwB,EAAE,UAAA5J,IAAI;IAAA,OAAI0J,eAAe,CAAC1J,IAAI,CAAC;EAAA,EAAC;AACnF;AAEA,SAAS6J,iBAAiBA,CAAClL,SAAS,EAAEsC,KAAK,EAAE7B,GAAG,EAAE;EAChD,IAAIA,GAAG,KAAK,KAAK,CAAC,EAAE;IAClBA,GAAG,GAAG,KAAK;EACb;EACA,IAAM0K,SAAS,GAAGpL,YAAY,CAACC,SAAS,CAAC;EACzC,IAAMkB,QAAQ,GAAGb,wBAAwB,CAACL,SAAS,CAAC;EACpD,IAAMmB,MAAM,GAAGjB,iBAAiB,CAACgB,QAAQ,CAAC;EAC1C,IAAIkK,iBAAiB,GAAGlK,QAAQ,KAAK,GAAG,GAAGiK,SAAS,MAAM1K,GAAG,GAAG,KAAK,GAAG,OAAO,CAAC,GAAG,OAAO,GAAG,MAAM,GAAG0K,SAAS,KAAK,OAAO,GAAG,QAAQ,GAAG,KAAK;EAC9I,IAAI7I,KAAK,CAAC5B,SAAS,CAACS,MAAM,CAAC,GAAGmB,KAAK,CAAC3B,QAAQ,CAACQ,MAAM,CAAC,EAAE;IACpDiK,iBAAiB,GAAGJ,oBAAoB,CAACI,iBAAiB,CAAC;EAC7D;EACA,OAAO;IACLC,IAAI,EAAED,iBAAiB;IACvBE,KAAK,EAAEN,oBAAoB,CAACI,iBAAiB;EAC/C,CAAC;AACH;AAEA,IAAMG,oBAAoB,GAAG;EAC3BC,KAAK,EAAE,KAAK;EACZC,GAAG,EAAE;AACP,CAAC;AACD,SAASC,6BAA6BA,CAAC1L,SAAS,EAAE;EAChD,OAAOA,SAAS,CAACiL,OAAO,CAAC,YAAY,EAAE,UAAAE,SAAS;IAAA,OAAII,oBAAoB,CAACJ,SAAS,CAAC;EAAA,EAAC;AACtF;AAEA,SAASQ,gBAAgBA,CAACR,SAAS,EAAES,aAAa,EAAEC,iBAAiB,EAAE;EACrE,IAAMC,kCAAkC,GAAGX,SAAS,MAAAL,MAAA,CAAAiB,kBAAA,CAAOF,iBAAiB,CAACnI,MAAM,CAAC,UAAA1D,SAAS;IAAA,OAAID,YAAY,CAACC,SAAS,CAAC,KAAKmL,SAAS;EAAA,EAAC,GAAAY,kBAAA,CAAKF,iBAAiB,CAACnI,MAAM,CAAC,UAAA1D,SAAS;IAAA,OAAID,YAAY,CAACC,SAAS,CAAC,KAAKmL,SAAS;EAAA,EAAC,KAAIU,iBAAiB,CAACnI,MAAM,CAAC,UAAA1D,SAAS;IAAA,OAAII,OAAO,CAACJ,SAAS,CAAC,KAAKA,SAAS;EAAA,EAAC;EACnS,OAAO8L,kCAAkC,CAACpI,MAAM,CAAC,UAAA1D,SAAS,EAAI;IAC5D,IAAImL,SAAS,EAAE;MACb,OAAOpL,YAAY,CAACC,SAAS,CAAC,KAAKmL,SAAS,KAAKS,aAAa,GAAGF,6BAA6B,CAAC1L,SAAS,CAAC,KAAKA,SAAS,GAAG,KAAK,CAAC;IAClI;IACA,OAAO,IAAI;EACb,CAAC,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMgM,aAAa,GAAG,SAAhBA,aAAaA,CAAanG,OAAO,EAAE;EACvC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EACA,OAAO;IACLhD,IAAI,EAAE,eAAe;IACrBgD,OAAO,EAAPA,OAAO;IACD/C,EAAE,WAAAA,GAAC8C,KAAK,EAAE;MAAA,OAAAlE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAqK,SAAA;QAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAA9J,KAAA,EAAAG,cAAA,EAAAzC,SAAA,EAAAoC,QAAA,EAAA4B,QAAA,EAAAqI,SAAA,EAAAC,mBAAA,EAAAC,SAAA,EAAApB,SAAA,EAAAqB,qBAAA,EAAAX,iBAAA,EAAAY,qBAAA,EAAAb,aAAA,EAAAc,qBAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,YAAA,EAAAC,gBAAA,EAAAC,kBAAA,EAAA1B,IAAA,EAAAC,KAAA,EAAA0B,gBAAA,EAAAC,YAAA,EAAAC,aAAA,EAAAC,2BAAA,EAAAC,2BAAA,EAAAC,cAAA;QAAA,OAAA1L,mBAAA,GAAA0B,IAAA,UAAAiK,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA/J,IAAA,GAAA+J,SAAA,CAAA9J,IAAA;YAAA;cAGZnB,KAAK,GAKHsD,KAAK,CALPtD,KAAK,EACLG,cAAc,GAIZmD,KAAK,CAJPnD,cAAc,EACdzC,SAAS,GAGP4F,KAAK,CAHP5F,SAAS,EACToC,QAAQ,GAENwD,KAAK,CAFPxD,QAAQ,EACR4B,QAAQ,GACN4B,KAAK,CADP5B,QAAQ;cAAAqI,SAAA,GAQN1H,QAAQ,CAACkB,OAAO,EAAED,KAAK,CAAC,EAAA0G,mBAAA,GAAAD,SAAA,CAL1BE,SAAS,EAATA,SAAS,GAAAD,mBAAA,cAAG,KAAK,GAAAA,mBAAA,EACjBnB,SAAS,GAAAkB,SAAA,CAATlB,SAAS,EAAAqB,qBAAA,GAAAH,SAAA,CACTR,iBAAiB,EAAjBA,iBAAiB,GAAAW,qBAAA,cAAG7B,aAAa,GAAA6B,qBAAA,EAAAC,qBAAA,GAAAJ,SAAA,CACjCT,aAAa,EAAbA,aAAa,GAAAa,qBAAA,cAAG,IAAI,GAAAA,qBAAA,EACjBC,qBAAqB,GAAAc,wBAAA,CAAAnB,SAAA,EAAAoB,SAAA;cAEpBd,UAAU,GAAGxB,SAAS,KAAKuC,SAAS,IAAI7B,iBAAiB,KAAKlB,aAAa,GAAGgB,gBAAgB,CAACR,SAAS,IAAI,IAAI,EAAES,aAAa,EAAEC,iBAAiB,CAAC,GAAGA,iBAAiB;cAAA0B,SAAA,CAAA9J,IAAA;cAAA,OACtJ8B,cAAc,CAACK,KAAK,EAAE8G,qBAAqB,CAAC;YAAA;cAA7DE,QAAQ,GAAAW,SAAA,CAAA1J,IAAA;cACRgJ,YAAY,GAAG,CAAC,CAACX,qBAAqB,GAAGzJ,cAAc,CAACuJ,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGE,qBAAqB,CAACyB,KAAK,KAAK,CAAC;cAC3Hb,gBAAgB,GAAGH,UAAU,CAACE,YAAY,CAAC;cAAA,MAC7CC,gBAAgB,IAAI,IAAI;gBAAAS,SAAA,CAAA9J,IAAA;gBAAA;cAAA;cAAA,OAAA8J,SAAA,CAAAnJ,MAAA,WACnB,CAAC,CAAC;YAAA;cAAAmJ,SAAA,CAAApJ,EAAA,GAKP+G,iBAAiB;cAAAqC,SAAA,CAAArG,EAAA,GAAC4F,gBAAgB;cAAAS,SAAA,CAAAnG,EAAA,GAAE9E,KAAK;cAAAiL,SAAA,CAAA9J,IAAA;cAAA,OAASrB,QAAQ,CAACwB,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGxB,QAAQ,CAACwB,KAAK,CAACI,QAAQ,CAACrD,QAAQ,CAAC;YAAA;cAAA4M,SAAA,CAAAlG,EAAA,GAAAkG,SAAA,CAAA1J,IAAA;cAAAkJ,kBAAA,OAAAQ,SAAA,CAAApJ,EAAA,EAAAoJ,SAAA,CAAArG,EAAA,EAAAqG,SAAA,CAAAnG,EAAA,EAAAmG,SAAA,CAAAlG,EAAA;cAFvHgE,IAAI,GAAA0B,kBAAA,CAAJ1B,IAAI;cACJC,KAAK,GAAAyB,kBAAA,CAALzB,KAAK;cAAA,MAIHtL,SAAS,KAAK8M,gBAAgB;gBAAAS,SAAA,CAAA9J,IAAA;gBAAA;cAAA;cAAA,OAAA8J,SAAA,CAAAnJ,MAAA,WACzB;gBACLjB,KAAK,EAAE;kBACLnD,SAAS,EAAE2M,UAAU,CAAC,CAAC;gBACzB;cACF,CAAC;YAAA;cAEGK,gBAAgB,GAAG,CAACJ,QAAQ,CAACxM,OAAO,CAAC0M,gBAAgB,CAAC,CAAC,EAAEF,QAAQ,CAACvB,IAAI,CAAC,EAAEuB,QAAQ,CAACtB,KAAK,CAAC,CAAC;cACzF2B,YAAY,MAAAnC,MAAA,CAAAiB,kBAAA,CAAQ,CAAC,CAACI,sBAAsB,GAAG1J,cAAc,CAACuJ,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGG,sBAAsB,CAACyB,SAAS,KAAK,EAAE,IAAG;gBAC9I5N,SAAS,EAAE8M,gBAAgB;gBAC3Bc,SAAS,EAAEZ;cACb,CAAC;cACKE,aAAa,GAAGP,UAAU,CAACE,YAAY,GAAG,CAAC,CAAC,EAElD;cAAA,KACIK,aAAa;gBAAAK,SAAA,CAAA9J,IAAA;gBAAA;cAAA;cAAA,OAAA8J,SAAA,CAAAnJ,MAAA,WACR;gBACLlB,IAAI,EAAE;kBACJyK,KAAK,EAAEd,YAAY,GAAG,CAAC;kBACvBe,SAAS,EAAEX;gBACb,CAAC;gBACD9J,KAAK,EAAE;kBACLnD,SAAS,EAAEkN;gBACb;cACF,CAAC;YAAA;cAEGC,2BAA2B,GAAGF,YAAY,CAACY,GAAG,CAAC,UAAAC,CAAC,EAAI;gBACxD,IAAM3C,SAAS,GAAGpL,YAAY,CAAC+N,CAAC,CAAC9N,SAAS,CAAC;gBAC3C,OAAO,CAAC8N,CAAC,CAAC9N,SAAS,EAAEmL,SAAS,IAAIoB,SAAS;gBAC3C;gBACAuB,CAAC,CAACF,SAAS,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACnD,MAAM,CAAC,UAACC,GAAG,EAAEmD,CAAC;kBAAA,OAAKnD,GAAG,GAAGmD,CAAC;gBAAA,GAAE,CAAC,CAAC;gBACtD;gBACAF,CAAC,CAACF,SAAS,CAAC,CAAC,CAAC,EAAEE,CAAC,CAACF,SAAS,CAAC;cAC9B,CAAC,CAAC,CAACK,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;gBAAA,OAAKD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC;cAAA,EAAC;cACxBf,2BAA2B,GAAGD,2BAA2B,CAACzJ,MAAM,CAAC,UAAAoK,CAAC;gBAAA,OAAIA,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;gBACxF;gBACA;gBACAhO,YAAY,CAAC+N,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAACM,KAAK,CAAC,UAAAJ,CAAC;kBAAA,OAAIA,CAAC,IAAI,CAAC;gBAAA,EAAC;cAAA,EAAC;cACzCX,cAAc,GAAG,CAAC,CAACjB,qBAAqB,GAAGgB,2BAA2B,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGhB,qBAAqB,CAAC,CAAC,CAAC,KAAKe,2BAA2B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAAA,MAC9JE,cAAc,KAAKrN,SAAS;gBAAAuN,SAAA,CAAA9J,IAAA;gBAAA;cAAA;cAAA,OAAA8J,SAAA,CAAAnJ,MAAA,WACvB;gBACLlB,IAAI,EAAE;kBACJyK,KAAK,EAAEd,YAAY,GAAG,CAAC;kBACvBe,SAAS,EAAEX;gBACb,CAAC;gBACD9J,KAAK,EAAE;kBACLnD,SAAS,EAAEqN;gBACb;cACF,CAAC;YAAA;cAAA,OAAAE,SAAA,CAAAnJ,MAAA,WAEI,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAmJ,SAAA,CAAAlJ,IAAA;UAAA;QAAA,GAAA4H,QAAA;MAAA;IACX;EACF,CAAC;AACH,CAAC;AAED,SAASoC,qBAAqBA,CAACrO,SAAS,EAAE;EACxC,IAAMsO,iBAAiB,GAAGtD,oBAAoB,CAAChL,SAAS,CAAC;EACzD,OAAO,CAAC0L,6BAA6B,CAAC1L,SAAS,CAAC,EAAEsO,iBAAiB,EAAE5C,6BAA6B,CAAC4C,iBAAiB,CAAC,CAAC;AACxH;AAEA,SAASC,WAAWA,CAAClN,IAAI,EAAEmN,OAAO,EAAE/N,GAAG,EAAE;EACvC,IAAMgO,EAAE,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;EAC5B,IAAMC,EAAE,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC;EAC5B,IAAMC,EAAE,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC;EAC5B,IAAMC,EAAE,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC;EAC5B,QAAQvN,IAAI;IACV,KAAK,KAAK;IACV,KAAK,QAAQ;MACX,IAAIZ,GAAG,EAAE,OAAO+N,OAAO,GAAGE,EAAE,GAAGD,EAAE;MACjC,OAAOD,OAAO,GAAGC,EAAE,GAAGC,EAAE;IAC1B,KAAK,MAAM;IACX,KAAK,OAAO;MACV,OAAOF,OAAO,GAAGG,EAAE,GAAGC,EAAE;IAC1B;MACE,OAAO,EAAE;EACb;AACF;AACA,SAASC,yBAAyBA,CAAC7O,SAAS,EAAE8O,aAAa,EAAEC,SAAS,EAAEtO,GAAG,EAAE;EAC3E,IAAM0K,SAAS,GAAGpL,YAAY,CAACC,SAAS,CAAC;EACzC,IAAIgP,IAAI,GAAGT,WAAW,CAACnO,OAAO,CAACJ,SAAS,CAAC,EAAE+O,SAAS,KAAK,OAAO,EAAEtO,GAAG,CAAC;EACtE,IAAI0K,SAAS,EAAE;IACb6D,IAAI,GAAGA,IAAI,CAACnB,GAAG,CAAC,UAAAxM,IAAI;MAAA,OAAIA,IAAI,GAAG,GAAG,GAAG8J,SAAS;IAAA,EAAC;IAC/C,IAAI2D,aAAa,EAAE;MACjBE,IAAI,GAAGA,IAAI,CAAClE,MAAM,CAACkE,IAAI,CAACnB,GAAG,CAACnC,6BAA6B,CAAC,CAAC;IAC7D;EACF;EACA,OAAOsD,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAapJ,OAAO,EAAE;EAC9B,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EACA,OAAO;IACLhD,IAAI,EAAE,MAAM;IACZgD,OAAO,EAAPA,OAAO;IACD/C,EAAE,WAAAA,GAAC8C,KAAK,EAAE;MAAA,OAAAlE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAsN,SAAA;QAAA,IAAAC,oBAAA,EAAAnP,SAAA,EAAAyC,cAAA,EAAAH,KAAA,EAAAyB,gBAAA,EAAA3B,QAAA,EAAA4B,QAAA,EAAAoL,UAAA,EAAAC,mBAAA,EAAAC,aAAA,EAAAC,oBAAA,EAAAC,cAAA,EAAAC,2BAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,yBAAA,EAAAC,qBAAA,EAAAhB,aAAA,EAAApC,qBAAA,EAAArL,IAAA,EAAA0O,eAAA,EAAAtP,GAAA,EAAAuP,kBAAA,EAAArD,UAAA,EAAAC,QAAA,EAAAgB,SAAA,EAAAqC,aAAA,EAAAC,mBAAA,EAAA7E,IAAA,EAAAC,KAAA,EAAA6E,qBAAA,EAAAC,qBAAA,EAAAC,SAAA,EAAAnD,aAAA,EAAAG,cAAA,EAAAiD,qBAAA,EAAAC,UAAA;QAAA,OAAA5O,mBAAA,GAAA0B,IAAA,UAAAmN,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAjN,IAAA,GAAAiN,SAAA,CAAAhN,IAAA;YAAA;cAGZzD,SAAS,GAMP4F,KAAK,CANP5F,SAAS,EACTyC,cAAc,GAKZmD,KAAK,CALPnD,cAAc,EACdH,KAAK,GAIHsD,KAAK,CAJPtD,KAAK,EACLyB,gBAAgB,GAGd6B,KAAK,CAHP7B,gBAAgB,EAChB3B,QAAQ,GAENwD,KAAK,CAFPxD,QAAQ,EACR4B,QAAQ,GACN4B,KAAK,CADP5B,QAAQ;cAAAoL,UAAA,GAUNzK,QAAQ,CAACkB,OAAO,EAAED,KAAK,CAAC,EAAAyJ,mBAAA,GAAAD,UAAA,CAP1BlO,QAAQ,EAAEoO,aAAa,GAAAD,mBAAA,cAAG,IAAI,GAAAA,mBAAA,EAAAE,oBAAA,GAAAH,UAAA,CAC9B7C,SAAS,EAAEiD,cAAc,GAAAD,oBAAA,cAAG,IAAI,GAAAA,oBAAA,EACZE,2BAA2B,GAAAL,UAAA,CAA/CY,kBAAkB,EAAAN,qBAAA,GAAAN,UAAA,CAClBO,gBAAgB,EAAhBA,gBAAgB,GAAAD,qBAAA,cAAG,SAAS,GAAAA,qBAAA,EAAAE,qBAAA,GAAAR,UAAA,CAC5BS,yBAAyB,EAAzBA,yBAAyB,GAAAD,qBAAA,cAAG,MAAM,GAAAA,qBAAA,EAAAE,qBAAA,GAAAV,UAAA,CAClCN,aAAa,EAAbA,aAAa,GAAAgB,qBAAA,cAAG,IAAI,GAAAA,qBAAA,EACjBpD,qBAAqB,GAAAc,wBAAA,CAAA4B,UAAA,EAAAsB,UAAA;cAEpBrP,IAAI,GAAGjB,OAAO,CAACJ,SAAS,CAAC;cACzB+P,eAAe,GAAG3P,OAAO,CAAC2D,gBAAgB,CAAC,KAAKA,gBAAgB;cAAA0M,SAAA,CAAAhN,IAAA;cAAA,OACnDrB,QAAQ,CAACwB,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGxB,QAAQ,CAACwB,KAAK,CAACI,QAAQ,CAACrD,QAAQ,CAAC;YAAA;cAAhFF,GAAG,GAAAgQ,SAAA,CAAA5M,IAAA;cACHmM,kBAAkB,GAAGP,2BAA2B,KAAKM,eAAe,IAAI,CAACjB,aAAa,GAAG,CAAC9D,oBAAoB,CAACjH,gBAAgB,CAAC,CAAC,GAAGsK,qBAAqB,CAACtK,gBAAgB,CAAC,CAAC;cAClL,IAAI,CAAC0L,2BAA2B,IAAII,yBAAyB,KAAK,MAAM,EAAE;gBACxEG,kBAAkB,CAACW,IAAI,CAAAlM,KAAA,CAAvBuL,kBAAkB,EAAAjE,kBAAA,CAAS8C,yBAAyB,CAAC9K,gBAAgB,EAAE+K,aAAa,EAAEe,yBAAyB,EAAEpP,GAAG,CAAC,EAAC;cACxH;cACMkM,UAAU,IAAI5I,gBAAgB,EAAA+G,MAAA,CAAAiB,kBAAA,CAAKiE,kBAAkB;cAAAS,SAAA,CAAAhN,IAAA;cAAA,OACpC8B,cAAc,CAACK,KAAK,EAAE8G,qBAAqB,CAAC;YAAA;cAA7DE,QAAQ,GAAA6D,SAAA,CAAA5M,IAAA;cACR+J,SAAS,GAAG,EAAE;cAChBqC,aAAa,GAAG,CAAC,CAACd,oBAAoB,GAAG1M,cAAc,CAACwM,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGE,oBAAoB,CAACvB,SAAS,KAAK,EAAE;cAC1H,IAAI0B,aAAa,EAAE;gBACjB1B,SAAS,CAAC+C,IAAI,CAAC/D,QAAQ,CAACvL,IAAI,CAAC,CAAC;cAChC;cACA,IAAImO,cAAc,EAAE;gBAAAU,mBAAA,GAIdhF,iBAAiB,CAAClL,SAAS,EAAEsC,KAAK,EAAE7B,GAAG,CAAC,EAF1C4K,IAAI,GAAA6E,mBAAA,CAAJ7E,IAAI,EACJC,KAAK,GAAA4E,mBAAA,CAAL5E,KAAK;gBAEPsC,SAAS,CAAC+C,IAAI,CAAC/D,QAAQ,CAACvB,IAAI,CAAC,EAAEuB,QAAQ,CAACtB,KAAK,CAAC,CAAC;cACjD;cACA2E,aAAa,MAAAnF,MAAA,CAAAiB,kBAAA,CAAOkE,aAAa,IAAE;gBACjCjQ,SAAS,EAATA,SAAS;gBACT4N,SAAS,EAATA;cACF,CAAC,EAAC;;cAEF;cAAA,IACKA,SAAS,CAACQ,KAAK,CAAC,UAAA/M,IAAI;gBAAA,OAAIA,IAAI,IAAI,CAAC;cAAA,EAAC;gBAAAoP,SAAA,CAAAhN,IAAA;gBAAA;cAAA;cAE/B4M,SAAS,GAAG,CAAC,CAAC,CAACF,qBAAqB,GAAG1N,cAAc,CAACwM,IAAI,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGkB,qBAAqB,CAACxC,KAAK,KAAK,CAAC,IAAI,CAAC;cACrHT,aAAa,GAAGP,UAAU,CAAC0D,SAAS,CAAC;cAAA,KACvCnD,aAAa;gBAAAuD,SAAA,CAAAhN,IAAA;gBAAA;cAAA;cAAA,OAAAgN,SAAA,CAAArM,MAAA,WAER;gBACLlB,IAAI,EAAE;kBACJyK,KAAK,EAAE0C,SAAS;kBAChBzC,SAAS,EAAEqC;gBACb,CAAC;gBACD9M,KAAK,EAAE;kBACLnD,SAAS,EAAEkN;gBACb;cACF,CAAC;YAAA;cAGH;cACA;cACIG,cAAc,GAAG,CAAC+C,qBAAqB,GAAGH,aAAa,CAACvM,MAAM,CAAC,UAAAoK,CAAC;gBAAA,OAAIA,CAAC,CAACF,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;cAAA,EAAC,CAACK,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;gBAAA,OAAKD,CAAC,CAACN,SAAS,CAAC,CAAC,CAAC,GAAGO,CAAC,CAACP,SAAS,CAAC,CAAC,CAAC;cAAA,EAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGwC,qBAAqB,CAACpQ,SAAS,EAEnM;cAAA,IACKqN,cAAc;gBAAAoD,SAAA,CAAAhN,IAAA;gBAAA;cAAA;cAAAgN,SAAA,CAAAtM,EAAA,GACTwL,gBAAgB;cAAAc,SAAA,CAAAhN,IAAA,GAAAgN,SAAA,CAAAtM,EAAA,KACjB,SAAS,QAAAsM,SAAA,CAAAtM,EAAA,KAST,kBAAkB;cAAA;YAAA;cANbnE,UAAS,GAAG,CAACsQ,qBAAqB,GAAGL,aAAa,CAACpC,GAAG,CAAC,UAAAC,CAAC;gBAAA,OAAI,CAACA,CAAC,CAAC9N,SAAS,EAAE8N,CAAC,CAACF,SAAS,CAAClK,MAAM,CAAC,UAAAkJ,QAAQ;kBAAA,OAAIA,QAAQ,GAAG,CAAC;gBAAA,EAAC,CAAChC,MAAM,CAAC,UAACC,GAAG,EAAE+B,QAAQ;kBAAA,OAAK/B,GAAG,GAAG+B,QAAQ;gBAAA,GAAE,CAAC,CAAC,CAAC;cAAA,EAAC,CAACqB,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;gBAAA,OAAKD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC;cAAA,EAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGmC,qBAAqB,CAAC,CAAC,CAAC;cACvP,IAAItQ,UAAS,EAAE;gBACbqN,cAAc,GAAGrN,UAAS;cAC5B;cAAC,OAAAyQ,SAAA,CAAArM,MAAA;YAAA;cAIHiJ,cAAc,GAAGtJ,gBAAgB;cAAC,OAAA0M,SAAA,CAAArM,MAAA;YAAA;cAAA,MAIpCpE,SAAS,KAAKqN,cAAc;gBAAAoD,SAAA,CAAAhN,IAAA;gBAAA;cAAA;cAAA,OAAAgN,SAAA,CAAArM,MAAA,WACvB;gBACLjB,KAAK,EAAE;kBACLnD,SAAS,EAAEqN;gBACb;cACF,CAAC;YAAA;cAAA,OAAAoD,SAAA,CAAArM,MAAA,WAGE,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAqM,SAAA,CAAApM,IAAA;UAAA;QAAA,GAAA6K,QAAA;MAAA;IACX;EACF,CAAC;AACH,CAAC;AAED,SAAS0B,cAAcA,CAAChE,QAAQ,EAAEtH,IAAI,EAAE;EACtC,OAAO;IACLN,GAAG,EAAE4H,QAAQ,CAAC5H,GAAG,GAAGM,IAAI,CAACrE,MAAM;IAC/BgE,KAAK,EAAE2H,QAAQ,CAAC3H,KAAK,GAAGK,IAAI,CAACxE,KAAK;IAClCoE,MAAM,EAAE0H,QAAQ,CAAC1H,MAAM,GAAGI,IAAI,CAACrE,MAAM;IACrCkE,IAAI,EAAEyH,QAAQ,CAACzH,IAAI,GAAGG,IAAI,CAACxE;EAC7B,CAAC;AACH;AACA,SAAS+P,qBAAqBA,CAACjE,QAAQ,EAAE;EACvC,OAAOlC,KAAK,CAACoG,IAAI,CAAC,UAAAzP,IAAI;IAAA,OAAIuL,QAAQ,CAACvL,IAAI,CAAC,IAAI,CAAC;EAAA,EAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,IAAM0P,IAAI,GAAG,SAAPA,IAAIA,CAAalL,OAAO,EAAE;EAC9B,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EACA,OAAO;IACLhD,IAAI,EAAE,MAAM;IACZgD,OAAO,EAAPA,OAAO;IACD/C,EAAE,WAAAA,GAAC8C,KAAK,EAAE;MAAA,OAAAlE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAoP,SAAA;QAAA,IAAA1O,KAAA,EAAA2O,UAAA,EAAAC,mBAAA,EAAAjP,QAAA,EAAAyK,qBAAA,EAAAE,QAAA,EAAAuE,OAAA,EAAAC,SAAA,EAAAC,QAAA;QAAA,OAAA1P,mBAAA,GAAA0B,IAAA,UAAAiO,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA/N,IAAA,GAAA+N,SAAA,CAAA9N,IAAA;YAAA;cAEZnB,KAAK,GACHsD,KAAK,CADPtD,KAAK;cAAA2O,UAAA,GAKHtM,QAAQ,CAACkB,OAAO,EAAED,KAAK,CAAC,EAAAsL,mBAAA,GAAAD,UAAA,CAF1BhP,QAAQ,EAARA,QAAQ,GAAAiP,mBAAA,cAAG,iBAAiB,GAAAA,mBAAA,EACzBxE,qBAAqB,GAAAc,wBAAA,CAAAyD,UAAA,EAAAO,UAAA;cAAAD,SAAA,CAAApN,EAAA,GAElBlC,QAAQ;cAAAsP,SAAA,CAAA9N,IAAA,GAAA8N,SAAA,CAAApN,EAAA,KACT,iBAAiB,OAAAoN,SAAA,CAAApN,EAAA,KAcjB,SAAS;cAAA;YAAA;cAAAoN,SAAA,CAAA9N,IAAA;cAAA,OAZa8B,cAAc,CAACK,KAAK,EAAA3B,aAAA,CAAAA,aAAA,KACtCyI,qBAAqB;gBACxBrG,cAAc,EAAE;cAAW,EAC5B,CAAC;YAAA;cAHIuG,QAAQ,GAAA2E,SAAA,CAAA1N,IAAA;cAIRsN,OAAO,GAAGP,cAAc,CAAChE,QAAQ,EAAEtK,KAAK,CAAC5B,SAAS,CAAC;cAAA,OAAA6Q,SAAA,CAAAnN,MAAA,WAClD;gBACLlB,IAAI,EAAE;kBACJuO,sBAAsB,EAAEN,OAAO;kBAC/BO,eAAe,EAAEb,qBAAqB,CAACM,OAAO;gBAChD;cACF,CAAC;YAAA;cAAAI,SAAA,CAAA9N,IAAA;cAAA,OAIsB8B,cAAc,CAACK,KAAK,EAAA3B,aAAA,CAAAA,aAAA,KACtCyI,qBAAqB;gBACxBnG,WAAW,EAAE;cAAI,EAClB,CAAC;YAAA;cAHIqG,SAAQ,GAAA2E,SAAA,CAAA1N,IAAA;cAIRsN,QAAO,GAAGP,cAAc,CAAChE,SAAQ,EAAEtK,KAAK,CAAC3B,QAAQ,CAAC;cAAA,OAAA4Q,SAAA,CAAAnN,MAAA,WACjD;gBACLlB,IAAI,EAAE;kBACJyO,cAAc,EAAER,QAAO;kBACvBS,OAAO,EAAEf,qBAAqB,CAACM,QAAO;gBACxC;cACF,CAAC;YAAA;cAAA,OAAAI,SAAA,CAAAnN,MAAA,WAIM,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAmN,SAAA,CAAAlN,IAAA;UAAA;QAAA,GAAA2M,QAAA;MAAA;IAGjB;EACF,CAAC;AACH,CAAC;AAED,SAASa,eAAeA,CAACvP,KAAK,EAAE;EAC9B,IAAMwP,IAAI,GAAGpJ,GAAG,CAAAjE,KAAA,SAAAsH,kBAAA,CAAIzJ,KAAK,CAACuL,GAAG,CAAC,UAAAvI,IAAI;IAAA,OAAIA,IAAI,CAACH,IAAI;EAAA,EAAC,EAAC;EACjD,IAAM4M,IAAI,GAAGrJ,GAAG,CAAAjE,KAAA,SAAAsH,kBAAA,CAAIzJ,KAAK,CAACuL,GAAG,CAAC,UAAAvI,IAAI;IAAA,OAAIA,IAAI,CAACN,GAAG;EAAA,EAAC,EAAC;EAChD,IAAMgN,IAAI,GAAGpJ,GAAG,CAAAnE,KAAA,SAAAsH,kBAAA,CAAIzJ,KAAK,CAACuL,GAAG,CAAC,UAAAvI,IAAI;IAAA,OAAIA,IAAI,CAACL,KAAK;EAAA,EAAC,EAAC;EAClD,IAAMgN,IAAI,GAAGrJ,GAAG,CAAAnE,KAAA,SAAAsH,kBAAA,CAAIzJ,KAAK,CAACuL,GAAG,CAAC,UAAAvI,IAAI;IAAA,OAAIA,IAAI,CAACJ,MAAM;EAAA,EAAC,EAAC;EACnD,OAAO;IACLrE,CAAC,EAAEiR,IAAI;IACP9Q,CAAC,EAAE+Q,IAAI;IACPjR,KAAK,EAAEkR,IAAI,GAAGF,IAAI;IAClB7Q,MAAM,EAAEgR,IAAI,GAAGF;EACjB,CAAC;AACH;AACA,SAASG,cAAcA,CAAC5P,KAAK,EAAE;EAC7B,IAAM6P,WAAW,GAAG7P,KAAK,CAACyL,KAAK,CAAC,CAAC,CAACE,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAAClN,CAAC,GAAGmN,CAAC,CAACnN,CAAC;EAAA,EAAC;EAC3D,IAAMoR,MAAM,GAAG,EAAE;EACjB,IAAIC,QAAQ,GAAG,IAAI;EACnB,KAAK,IAAI1P,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwP,WAAW,CAAChR,MAAM,EAAEwB,CAAC,EAAE,EAAE;IAC3C,IAAM2C,IAAI,GAAG6M,WAAW,CAACxP,CAAC,CAAC;IAC3B,IAAI,CAAC0P,QAAQ,IAAI/M,IAAI,CAACtE,CAAC,GAAGqR,QAAQ,CAACrR,CAAC,GAAGqR,QAAQ,CAACpR,MAAM,GAAG,CAAC,EAAE;MAC1DmR,MAAM,CAACzB,IAAI,CAAC,CAACrL,IAAI,CAAC,CAAC;IACrB,CAAC,MAAM;MACL8M,MAAM,CAACA,MAAM,CAACjR,MAAM,GAAG,CAAC,CAAC,CAACwP,IAAI,CAACrL,IAAI,CAAC;IACtC;IACA+M,QAAQ,GAAG/M,IAAI;EACjB;EACA,OAAO8M,MAAM,CAACvE,GAAG,CAAC,UAAAvI,IAAI;IAAA,OAAID,gBAAgB,CAACwM,eAAe,CAACvM,IAAI,CAAC,CAAC;EAAA,EAAC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,IAAMgN,MAAM,GAAG,SAATA,MAAMA,CAAazM,OAAO,EAAE;EAChC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EACA,OAAO;IACLhD,IAAI,EAAE,QAAQ;IACdgD,OAAO,EAAPA,OAAO;IACD/C,EAAE,WAAAA,GAAC8C,KAAK,EAAE;MAAA,OAAAlE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA2Q,SAAA;QAAA,IAAAvS,SAAA,EAAAgE,QAAA,EAAA1B,KAAA,EAAAF,QAAA,EAAAH,QAAA,EAAAuQ,UAAA,EAAAC,kBAAA,EAAA1N,OAAA,EAAAlE,CAAA,EAAAG,CAAA,EAAA0R,iBAAA,EAAAC,WAAA,EAAAC,QAAA,EAAAnM,aAAA,EAoBLoM,qBAAqB,EAAAC,UAAA;QAAA,OAAAnR,mBAAA,GAAA0B,IAAA,UAAA0P,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxP,IAAA,GAAAwP,SAAA,CAAAvP,IAAA;YAAA;cAArBoP,qBAAqB,YAAAI,sBAAA,EAAG;gBAC/B;gBACA,IAAIN,WAAW,CAACxR,MAAM,KAAK,CAAC,IAAIwR,WAAW,CAAC,CAAC,CAAC,CAACxN,IAAI,GAAGwN,WAAW,CAAC,CAAC,CAAC,CAAC1N,KAAK,IAAIpE,CAAC,IAAI,IAAI,IAAIG,CAAC,IAAI,IAAI,EAAE;kBACpG;kBACA,OAAO2R,WAAW,CAACO,IAAI,CAAC,UAAA5N,IAAI;oBAAA,OAAIzE,CAAC,GAAGyE,IAAI,CAACH,IAAI,GAAGsB,aAAa,CAACtB,IAAI,IAAItE,CAAC,GAAGyE,IAAI,CAACL,KAAK,GAAGwB,aAAa,CAACxB,KAAK,IAAIjE,CAAC,GAAGsE,IAAI,CAACN,GAAG,GAAGyB,aAAa,CAACzB,GAAG,IAAIhE,CAAC,GAAGsE,IAAI,CAACJ,MAAM,GAAGuB,aAAa,CAACvB,MAAM;kBAAA,EAAC,IAAI0N,QAAQ;gBACvM;;gBAEA;gBACA,IAAID,WAAW,CAACxR,MAAM,IAAI,CAAC,EAAE;kBAC3B,IAAId,wBAAwB,CAACL,SAAS,CAAC,KAAK,GAAG,EAAE;oBAC/C,IAAMmT,SAAS,GAAGR,WAAW,CAAC,CAAC,CAAC;oBAChC,IAAMS,QAAQ,GAAGT,WAAW,CAACA,WAAW,CAACxR,MAAM,GAAG,CAAC,CAAC;oBACpD,IAAMkS,KAAK,GAAGjT,OAAO,CAACJ,SAAS,CAAC,KAAK,KAAK;oBAC1C,IAAMgF,IAAG,GAAGmO,SAAS,CAACnO,GAAG;oBACzB,IAAME,OAAM,GAAGkO,QAAQ,CAAClO,MAAM;oBAC9B,IAAMC,KAAI,GAAGkO,KAAK,GAAGF,SAAS,CAAChO,IAAI,GAAGiO,QAAQ,CAACjO,IAAI;oBACnD,IAAMF,MAAK,GAAGoO,KAAK,GAAGF,SAAS,CAAClO,KAAK,GAAGmO,QAAQ,CAACnO,KAAK;oBACtD,IAAMnE,MAAK,GAAGmE,MAAK,GAAGE,KAAI;oBAC1B,IAAMlE,OAAM,GAAGiE,OAAM,GAAGF,IAAG;oBAC3B,OAAO;sBACLA,GAAG,EAAHA,IAAG;sBACHE,MAAM,EAANA,OAAM;sBACNC,IAAI,EAAJA,KAAI;sBACJF,KAAK,EAALA,MAAK;sBACLnE,KAAK,EAALA,MAAK;sBACLG,MAAM,EAANA,OAAM;sBACNJ,CAAC,EAAEsE,KAAI;sBACPnE,CAAC,EAAEgE;oBACL,CAAC;kBACH;kBACA,IAAMsO,UAAU,GAAGlT,OAAO,CAACJ,SAAS,CAAC,KAAK,MAAM;kBAChD,IAAMuT,QAAQ,GAAG3K,GAAG,CAAAnE,KAAA,SAAAsH,kBAAA,CAAI4G,WAAW,CAAC9E,GAAG,CAAC,UAAAvI,IAAI;oBAAA,OAAIA,IAAI,CAACL,KAAK;kBAAA,EAAC,EAAC;kBAC5D,IAAMuO,OAAO,GAAG9K,GAAG,CAAAjE,KAAA,SAAAsH,kBAAA,CAAI4G,WAAW,CAAC9E,GAAG,CAAC,UAAAvI,IAAI;oBAAA,OAAIA,IAAI,CAACH,IAAI;kBAAA,EAAC,EAAC;kBAC1D,IAAMsO,YAAY,GAAGd,WAAW,CAACjP,MAAM,CAAC,UAAA4B,IAAI;oBAAA,OAAIgO,UAAU,GAAGhO,IAAI,CAACH,IAAI,KAAKqO,OAAO,GAAGlO,IAAI,CAACL,KAAK,KAAKsO,QAAQ;kBAAA,EAAC;kBAC7G,IAAMvO,GAAG,GAAGyO,YAAY,CAAC,CAAC,CAAC,CAACzO,GAAG;kBAC/B,IAAME,MAAM,GAAGuO,YAAY,CAACA,YAAY,CAACtS,MAAM,GAAG,CAAC,CAAC,CAAC+D,MAAM;kBAC3D,IAAMC,IAAI,GAAGqO,OAAO;kBACpB,IAAMvO,KAAK,GAAGsO,QAAQ;kBACtB,IAAMzS,KAAK,GAAGmE,KAAK,GAAGE,IAAI;kBAC1B,IAAMlE,MAAM,GAAGiE,MAAM,GAAGF,GAAG;kBAC3B,OAAO;oBACLA,GAAG,EAAHA,GAAG;oBACHE,MAAM,EAANA,MAAM;oBACNC,IAAI,EAAJA,IAAI;oBACJF,KAAK,EAALA,KAAK;oBACLnE,KAAK,EAALA,KAAK;oBACLG,MAAM,EAANA,MAAM;oBACNJ,CAAC,EAAEsE,IAAI;oBACPnE,CAAC,EAAEgE;kBACL,CAAC;gBACH;gBACA,OAAO4N,QAAQ;cACjB,CAAC;cAtEC5S,SAAS,GAKP4F,KAAK,CALP5F,SAAS,EACTgE,QAAQ,GAIN4B,KAAK,CAJP5B,QAAQ,EACR1B,KAAK,GAGHsD,KAAK,CAHPtD,KAAK,EACLF,QAAQ,GAENwD,KAAK,CAFPxD,QAAQ,EACRH,QAAQ,GACN2D,KAAK,CADP3D,QAAQ,EAEV;cACA;cACA;cAAAuQ,UAAA,GAKI7N,QAAQ,CAACkB,OAAO,EAAED,KAAK,CAAC,EAAA6M,kBAAA,GAAAD,UAAA,CAH1BzN,OAAO,EAAPA,OAAO,GAAA0N,kBAAA,cAAG,CAAC,GAAAA,kBAAA,EACX5R,CAAC,GAAA2R,UAAA,CAAD3R,CAAC,EACDG,CAAC,GAAAwR,UAAA,CAADxR,CAAC;cAAAgS,SAAA,CAAA7O,EAAA,GAEuBuP,KAAK;cAAAV,SAAA,CAAAvP,IAAA;cAAA,OAAcrB,QAAQ,CAACuR,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGvR,QAAQ,CAACuR,cAAc,CAAC3P,QAAQ,CAACtD,SAAS,CAAC;YAAA;cAAAsS,SAAA,CAAA9L,EAAA,GAAA8L,SAAA,CAAAnP,IAAA;cAAA,IAAAmP,SAAA,CAAA9L,EAAA;gBAAA8L,SAAA,CAAAvP,IAAA;gBAAA;cAAA;cAAAuP,SAAA,CAAA9L,EAAA,GAAM,EAAE;YAAA;cAAA8L,SAAA,CAAA5L,EAAA,GAAA4L,SAAA,CAAA9L,EAAA;cAArIwL,iBAAiB,GAAAM,SAAA,CAAA7O,EAAA,CAASyP,IAAI,CAAA5L,IAAA,CAAAgL,SAAA,CAAA7O,EAAA,EAAA6O,SAAA,CAAA5L,EAAA;cAC9BuL,WAAW,GAAGT,cAAc,CAACQ,iBAAiB,CAAC;cAC/CE,QAAQ,GAAGvN,gBAAgB,CAACwM,eAAe,CAACa,iBAAiB,CAAC,CAAC;cAC/DjM,aAAa,GAAGrB,wBAAwB,CAACL,OAAO,CAAC;cAAAiO,SAAA,CAAAvP,IAAA;cAAA,OAsD9BrB,QAAQ,CAAC0B,eAAe,CAAC;gBAChDpD,SAAS,EAAE;kBACTmS,qBAAqB,EAArBA;gBACF,CAAC;gBACDlS,QAAQ,EAAEqD,QAAQ,CAACrD,QAAQ;gBAC3BsB,QAAQ,EAARA;cACF,CAAC,CAAC;YAAA;cANI6Q,UAAU,GAAAE,SAAA,CAAAnP,IAAA;cAAA,MAOZvB,KAAK,CAAC5B,SAAS,CAACG,CAAC,KAAKiS,UAAU,CAACpS,SAAS,CAACG,CAAC,IAAIyB,KAAK,CAAC5B,SAAS,CAACM,CAAC,KAAK8R,UAAU,CAACpS,SAAS,CAACM,CAAC,IAAIsB,KAAK,CAAC5B,SAAS,CAACI,KAAK,KAAKgS,UAAU,CAACpS,SAAS,CAACI,KAAK,IAAIwB,KAAK,CAAC5B,SAAS,CAACO,MAAM,KAAK6R,UAAU,CAACpS,SAAS,CAACO,MAAM;gBAAA+R,SAAA,CAAAvP,IAAA;gBAAA;cAAA;cAAA,OAAAuP,SAAA,CAAA5O,MAAA,WACzM;gBACLjB,KAAK,EAAE;kBACLb,KAAK,EAAEwQ;gBACT;cACF,CAAC;YAAA;cAAA,OAAAE,SAAA,CAAA5O,MAAA,WAEI,CAAC,CAAC;YAAA;YAAA;cAAA,OAAA4O,SAAA,CAAA3O,IAAA;UAAA;QAAA,GAAAkO,QAAA;MAAA;IACX;EACF,CAAC;AACH,CAAC;AAAC,SAEasB,oBAAoBA,CAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,qBAAA,CAAAvP,KAAA,OAAAC,SAAA;AAAA;AAyCnC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAsP,sBAAA;EAAAA,qBAAA,GAAAtS,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAzCA,SAAAqS,UAAoCrO,KAAK,EAAEC,OAAO;IAAA,IAAA7F,SAAA,EAAAoC,QAAA,EAAA4B,QAAA,EAAAvD,GAAA,EAAAY,IAAA,EAAA8J,SAAA,EAAA7J,UAAA,EAAA4S,aAAA,EAAAC,cAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAnT,QAAA,EAAAqL,SAAA,EAAA+H,aAAA;IAAA,OAAA3S,mBAAA,GAAA0B,IAAA,UAAAkR,WAAAC,UAAA;MAAA,kBAAAA,UAAA,CAAAhR,IAAA,GAAAgR,UAAA,CAAA/Q,IAAA;QAAA;UAE9CzD,SAAS,GAGP4F,KAAK,CAHP5F,SAAS,EACToC,QAAQ,GAENwD,KAAK,CAFPxD,QAAQ,EACR4B,QAAQ,GACN4B,KAAK,CADP5B,QAAQ;UAAAwQ,UAAA,CAAA/Q,IAAA;UAAA,OAESrB,QAAQ,CAACwB,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGxB,QAAQ,CAACwB,KAAK,CAACI,QAAQ,CAACrD,QAAQ,CAAC;QAAA;UAAhFF,GAAG,GAAA+T,UAAA,CAAA3Q,IAAA;UACHxC,IAAI,GAAGjB,OAAO,CAACJ,SAAS,CAAC;UACzBmL,SAAS,GAAGpL,YAAY,CAACC,SAAS,CAAC;UACnCsB,UAAU,GAAGjB,wBAAwB,CAACL,SAAS,CAAC,KAAK,GAAG;UACxDkU,aAAa,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC5T,QAAQ,CAACe,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACvD8S,cAAc,GAAG1T,GAAG,IAAIa,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC;UAC3C8S,QAAQ,GAAGzP,QAAQ,CAACkB,OAAO,EAAED,KAAK,CAAC,EAEzC;UAAAyO,KAAA,GAKI,OAAOD,QAAQ,KAAK,QAAQ,GAAG;YACjClT,QAAQ,EAAEkT,QAAQ;YAClB7H,SAAS,EAAE,CAAC;YACZ+H,aAAa,EAAE;UACjB,CAAC,GAAArQ,aAAA;YACC/C,QAAQ,EAAE,CAAC;YACXqL,SAAS,EAAE,CAAC;YACZ+H,aAAa,EAAE;UAAI,GAChBF,QAAQ,CACZ,EAZClT,QAAQ,GAAAmT,KAAA,CAARnT,QAAQ,EACRqL,SAAS,GAAA8H,KAAA,CAAT9H,SAAS,EACT+H,aAAa,GAAAD,KAAA,CAAbC,aAAa;UAWf,IAAInJ,SAAS,IAAI,OAAOmJ,aAAa,KAAK,QAAQ,EAAE;YAClD/H,SAAS,GAAGpB,SAAS,KAAK,KAAK,GAAGmJ,aAAa,GAAG,CAAC,CAAC,GAAGA,aAAa;UACtE;UAAC,OAAAE,UAAA,CAAApQ,MAAA,WACM9C,UAAU,GAAG;YAClBT,CAAC,EAAE0L,SAAS,GAAG4H,cAAc;YAC7BnT,CAAC,EAAEE,QAAQ,GAAGgT;UAChB,CAAC,GAAG;YACFrT,CAAC,EAAEK,QAAQ,GAAGgT,aAAa;YAC3BlT,CAAC,EAAEuL,SAAS,GAAG4H;UACjB,CAAC;QAAA;QAAA;UAAA,OAAAK,UAAA,CAAAnQ,IAAA;MAAA;IAAA,GAAA4P,SAAA;EAAA,CACF;EAAA,OAAAD,qBAAA,CAAAvP,KAAA,OAAAC,SAAA;AAAA;AASD,IAAM0F,MAAM,GAAG,SAATA,MAAMA,CAAavE,OAAO,EAAE;EAChC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC;EACb;EACA,OAAO;IACLhD,IAAI,EAAE,QAAQ;IACdgD,OAAO,EAAPA,OAAO;IACD/C,EAAE,WAAAA,GAAC8C,KAAK,EAAE;MAAA,OAAAlE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA6S,SAAA;QAAA,IAAA5T,CAAA,EAAAG,CAAA,EAAA0T,UAAA;QAAA,OAAA/S,mBAAA,GAAA0B,IAAA,UAAAsR,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAApR,IAAA,GAAAoR,SAAA,CAAAnR,IAAA;YAAA;cAEZ5C,CAAC,GAEC+E,KAAK,CAFP/E,CAAC,EACDG,CAAC,GACC4E,KAAK,CADP5E,CAAC;cAAA4T,SAAA,CAAAnR,IAAA;cAAA,OAEsBoQ,oBAAoB,CAACjO,KAAK,EAAEC,OAAO,CAAC;YAAA;cAAvD6O,UAAU,GAAAE,SAAA,CAAA/Q,IAAA;cAAA,OAAA+Q,SAAA,CAAAxQ,MAAA,WACT;gBACLvD,CAAC,EAAEA,CAAC,GAAG6T,UAAU,CAAC7T,CAAC;gBACnBG,CAAC,EAAEA,CAAC,GAAG0T,UAAU,CAAC1T,CAAC;gBACnBkC,IAAI,EAAEwR;cACR,CAAC;YAAA;YAAA;cAAA,OAAAE,SAAA,CAAAvQ,IAAA;UAAA;QAAA,GAAAoQ,QAAA;MAAA;IACH;EACF,CAAC;AACH,CAAC;AAED,SAASI,YAAYA,CAAC1U,IAAI,EAAE;EAC1B,OAAOA,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAM2U,KAAK,GAAG,SAARA,KAAKA,CAAajP,OAAO,EAAE;EAC/B,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EACA,OAAO;IACLhD,IAAI,EAAE,OAAO;IACbgD,OAAO,EAAPA,OAAO;IACD/C,EAAE,WAAAA,GAAC8C,KAAK,EAAE;MAAA,OAAAlE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAmT,SAAA;QAAA,IAAAC,cAAA;QAAA,IAAAnU,CAAA,EAAAG,CAAA,EAAAhB,SAAA,EAAAiV,UAAA,EAAAC,mBAAA,EAAA5F,aAAA,EAAA6F,oBAAA,EAAA3F,cAAA,EAAA4F,kBAAA,EAAAC,OAAA,EAAA3I,qBAAA,EAAAnL,MAAA,EAAAqL,QAAA,EAAA1L,QAAA,EAAAqL,SAAA,EAAA+I,aAAA,EAAAC,cAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,aAAA;QAAA,OAAArU,mBAAA,GAAA0B,IAAA,UAAA4S,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA1S,IAAA,GAAA0S,SAAA,CAAAzS,IAAA;YAAA;cAEZ5C,CAAC,GAGC+E,KAAK,CAHP/E,CAAC,EACDG,CAAC,GAEC4E,KAAK,CAFP5E,CAAC,EACDhB,SAAS,GACP4F,KAAK,CADP5F,SAAS;cAAAiV,UAAA,GAkBPtQ,QAAQ,CAACkB,OAAO,EAAED,KAAK,CAAC,EAAAsP,mBAAA,GAAAD,UAAA,CAf1B/T,QAAQ,EAAEoO,aAAa,GAAA4F,mBAAA,cAAG,IAAI,GAAAA,mBAAA,EAAAC,oBAAA,GAAAF,UAAA,CAC9B1I,SAAS,EAAEiD,cAAc,GAAA2F,oBAAA,cAAG,KAAK,GAAAA,oBAAA,EAAAC,kBAAA,GAAAH,UAAA,CACjCI,OAAO,EAAPA,OAAO,GAAAD,kBAAA,cAAG;gBACRtS,EAAE,EAAE,SAAAA,GAAAtC,IAAI,EAAI;kBACV,IACEK,CAAC,GAECL,IAAI,CAFNK,CAAC;oBACDG,CAAC,GACCR,IAAI,CADNQ,CAAC;kBAEH,OAAO;oBACLH,CAAC,EAADA,CAAC;oBACDG,CAAC,EAADA;kBACF,CAAC;gBACH;cACF,CAAC,GAAAoU,kBAAA,EACE1I,qBAAqB,GAAAc,wBAAA,CAAAyH,UAAA,EAAAkB,UAAA;cAEpB5U,MAAM,GAAG;gBACbV,CAAC,EAADA,CAAC;gBACDG,CAAC,EAADA;cACF,CAAC;cAAAkV,SAAA,CAAAzS,IAAA;cAAA,OACsB8B,cAAc,CAACK,KAAK,EAAE8G,qBAAqB,CAAC;YAAA;cAA7DE,QAAQ,GAAAsJ,SAAA,CAAArS,IAAA;cACR3C,QAAQ,GAAGb,wBAAwB,CAACD,OAAO,CAACJ,SAAS,CAAC,CAAC;cACvDuM,SAAS,GAAGsI,YAAY,CAAC3T,QAAQ,CAAC;cACpCoU,aAAa,GAAG/T,MAAM,CAACL,QAAQ,CAAC;cAChCqU,cAAc,GAAGhU,MAAM,CAACgL,SAAS,CAAC;cACtC,IAAI+C,aAAa,EAAE;gBACXkG,OAAO,GAAGtU,QAAQ,KAAK,GAAG,GAAG,KAAK,GAAG,MAAM;gBAC3CuU,OAAO,GAAGvU,QAAQ,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO;gBAC/CwH,IAAG,GAAG4M,aAAa,GAAG1I,QAAQ,CAAC4I,OAAO,CAAC;gBACvC5M,IAAG,GAAG0M,aAAa,GAAG1I,QAAQ,CAAC6I,OAAO,CAAC;gBAC7CH,aAAa,GAAGzM,MAAM,CAACH,IAAG,EAAE4M,aAAa,EAAE1M,IAAG,CAAC;cACjD;cACA,IAAI4G,cAAc,EAAE;gBACZgG,QAAO,GAAGjJ,SAAS,KAAK,GAAG,GAAG,KAAK,GAAG,MAAM;gBAC5CkJ,QAAO,GAAGlJ,SAAS,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO;gBAChD7D,KAAG,GAAG6M,cAAc,GAAG3I,QAAQ,CAAC4I,QAAO,CAAC;gBACxC5M,KAAG,GAAG2M,cAAc,GAAG3I,QAAQ,CAAC6I,QAAO,CAAC;gBAC9CF,cAAc,GAAG1M,MAAM,CAACH,KAAG,EAAE6M,cAAc,EAAE3M,KAAG,CAAC;cACnD;cACMoN,aAAa,GAAGX,OAAO,CAACvS,EAAE,CAAAmB,aAAA,CAAAA,aAAA,KAC3B2B,KAAK,QAAAoP,cAAA,OAAA9Q,eAAA,CAAA8Q,cAAA,EACP9T,QAAQ,EAAGoU,aAAa,GAAApR,eAAA,CAAA8Q,cAAA,EACxBzI,SAAS,EAAGgJ,cAAc,GAAAP,cAAA,EAC5B,CAAC;cAAA,OAAAkB,SAAA,CAAA9R,MAAA,WAAAH,aAAA,CAAAA,aAAA,KAEG+R,aAAa;gBAChB9S,IAAI,EAAE;kBACJrC,CAAC,EAAEmV,aAAa,CAACnV,CAAC,GAAGA,CAAC;kBACtBG,CAAC,EAAEgV,aAAa,CAAChV,CAAC,GAAGA;gBACvB;cAAC;YAAA;YAAA;cAAA,OAAAkV,SAAA,CAAA7R,IAAA;UAAA;QAAA,GAAA0Q,QAAA;MAAA;IAEL;EACF,CAAC;AACH,CAAC;AACD;AACA;AACA;AACA,IAAMqB,UAAU,GAAG,SAAbA,UAAUA,CAAavQ,OAAO,EAAE;EACpC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EACA,OAAO;IACLA,OAAO,EAAPA,OAAO;IACP/C,EAAE,WAAAA,GAAC8C,KAAK,EAAE;MAAA,IAAAyQ,KAAA;MACR,IACExV,CAAC,GAKC+E,KAAK,CALP/E,CAAC;QACDG,CAAC,GAIC4E,KAAK,CAJP5E,CAAC;QACDhB,SAAS,GAGP4F,KAAK,CAHP5F,SAAS;QACTsC,KAAK,GAEHsD,KAAK,CAFPtD,KAAK;QACLG,cAAc,GACZmD,KAAK,CADPnD,cAAc;MAEhB,IAAA6T,UAAA,GAII3R,QAAQ,CAACkB,OAAO,EAAED,KAAK,CAAC;QAAA2Q,iBAAA,GAAAD,UAAA,CAH1BlM,MAAM;QAANA,MAAM,GAAAmM,iBAAA,cAAG,CAAC,GAAAA,iBAAA;QAAAC,mBAAA,GAAAF,UAAA,CACVpV,QAAQ;QAAEoO,aAAa,GAAAkH,mBAAA,cAAG,IAAI,GAAAA,mBAAA;QAAAC,oBAAA,GAAAH,UAAA,CAC9B/J,SAAS;QAAEiD,cAAc,GAAAiH,oBAAA,cAAG,IAAI,GAAAA,oBAAA;MAElC,IAAMlV,MAAM,GAAG;QACbV,CAAC,EAADA,CAAC;QACDG,CAAC,EAADA;MACF,CAAC;MACD,IAAME,QAAQ,GAAGb,wBAAwB,CAACL,SAAS,CAAC;MACpD,IAAMuM,SAAS,GAAGsI,YAAY,CAAC3T,QAAQ,CAAC;MACxC,IAAIoU,aAAa,GAAG/T,MAAM,CAACL,QAAQ,CAAC;MACpC,IAAIqU,cAAc,GAAGhU,MAAM,CAACgL,SAAS,CAAC;MACtC,IAAMmK,SAAS,GAAG/R,QAAQ,CAACyF,MAAM,EAAExE,KAAK,CAAC;MACzC,IAAM+Q,cAAc,GAAG,OAAOD,SAAS,KAAK,QAAQ,GAAG;QACrDxV,QAAQ,EAAEwV,SAAS;QACnBnK,SAAS,EAAE;MACb,CAAC,GAAAtI,aAAA;QACC/C,QAAQ,EAAE,CAAC;QACXqL,SAAS,EAAE;MAAC,GACTmK,SAAS,CACb;MACD,IAAIpH,aAAa,EAAE;QACjB,IAAMsH,GAAG,GAAG1V,QAAQ,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO;QACjD,IAAM2V,QAAQ,GAAGvU,KAAK,CAAC5B,SAAS,CAACQ,QAAQ,CAAC,GAAGoB,KAAK,CAAC3B,QAAQ,CAACiW,GAAG,CAAC,GAAGD,cAAc,CAACzV,QAAQ;QAC1F,IAAM4V,QAAQ,GAAGxU,KAAK,CAAC5B,SAAS,CAACQ,QAAQ,CAAC,GAAGoB,KAAK,CAAC5B,SAAS,CAACkW,GAAG,CAAC,GAAGD,cAAc,CAACzV,QAAQ;QAC3F,IAAIoU,aAAa,GAAGuB,QAAQ,EAAE;UAC5BvB,aAAa,GAAGuB,QAAQ;QAC1B,CAAC,MAAM,IAAIvB,aAAa,GAAGwB,QAAQ,EAAE;UACnCxB,aAAa,GAAGwB,QAAQ;QAC1B;MACF;MACA,IAAItH,cAAc,EAAE;QAClB,IAAIuH,qBAAqB,EAAEC,sBAAsB;QACjD,IAAMJ,IAAG,GAAG1V,QAAQ,KAAK,GAAG,GAAG,OAAO,GAAG,QAAQ;QACjD,IAAM+V,YAAY,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC3W,QAAQ,CAACF,OAAO,CAACJ,SAAS,CAAC,CAAC;QACjE,IAAM6W,SAAQ,GAAGvU,KAAK,CAAC5B,SAAS,CAAC6L,SAAS,CAAC,GAAGjK,KAAK,CAAC3B,QAAQ,CAACiW,IAAG,CAAC,IAAIK,YAAY,GAAG,CAAC,CAACF,qBAAqB,GAAGtU,cAAc,CAAC2H,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG2M,qBAAqB,CAACxK,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI0K,YAAY,GAAG,CAAC,GAAGN,cAAc,CAACpK,SAAS,CAAC;QACnP,IAAMuK,SAAQ,GAAGxU,KAAK,CAAC5B,SAAS,CAAC6L,SAAS,CAAC,GAAGjK,KAAK,CAAC5B,SAAS,CAACkW,IAAG,CAAC,IAAIK,YAAY,GAAG,CAAC,GAAG,CAAC,CAACD,sBAAsB,GAAGvU,cAAc,CAAC2H,MAAM,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG4M,sBAAsB,CAACzK,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI0K,YAAY,GAAGN,cAAc,CAACpK,SAAS,GAAG,CAAC,CAAC;QACtP,IAAIgJ,cAAc,GAAGsB,SAAQ,EAAE;UAC7BtB,cAAc,GAAGsB,SAAQ;QAC3B,CAAC,MAAM,IAAItB,cAAc,GAAGuB,SAAQ,EAAE;UACpCvB,cAAc,GAAGuB,SAAQ;QAC3B;MACF;MACA,OAAAT,KAAA,OAAAnS,eAAA,CAAAmS,KAAA,EACGnV,QAAQ,EAAGoU,aAAa,GAAApR,eAAA,CAAAmS,KAAA,EACxB9J,SAAS,EAAGgJ,cAAc,GAAAc,KAAA;IAE/B;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAMa,IAAI,GAAG,SAAPA,IAAIA,CAAarR,OAAO,EAAE;EAC9B,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAG,CAAC,CAAC;EACd;EACA,OAAO;IACLhD,IAAI,EAAE,MAAM;IACZgD,OAAO,EAAPA,OAAO;IACD/C,EAAE,WAAAA,GAAC8C,KAAK,EAAE;MAAA,OAAAlE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAuV,SAAA;QAAA,IAAAnX,SAAA,EAAAsC,KAAA,EAAAF,QAAA,EAAA4B,QAAA,EAAAoT,UAAA,EAAAC,gBAAA,EAAA5S,KAAA,EAAAiI,qBAAA,EAAAE,QAAA,EAAAvL,IAAA,EAAA8J,SAAA,EAAAhL,IAAA,EAAAmX,OAAA,EAAAC,eAAA,EAAAzW,KAAA,EAAAG,MAAA,EAAAuW,UAAA,EAAAC,SAAA,EAAAC,uBAAA,EAAAC,sBAAA,EAAAC,OAAA,EAAAC,eAAA,EAAAC,cAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,cAAA;QAAA,OAAA1W,mBAAA,GAAA0B,IAAA,UAAAiV,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA/U,IAAA,GAAA+U,SAAA,CAAA9U,IAAA;YAAA;cAEZzD,SAAS,GAIP4F,KAAK,CAJP5F,SAAS,EACTsC,KAAK,GAGHsD,KAAK,CAHPtD,KAAK,EACLF,QAAQ,GAENwD,KAAK,CAFPxD,QAAQ,EACR4B,QAAQ,GACN4B,KAAK,CADP5B,QAAQ;cAAAoT,UAAA,GAKNzS,QAAQ,CAACkB,OAAO,EAAED,KAAK,CAAC,EAAAyR,gBAAA,GAAAD,UAAA,CAF1B3S,KAAK,EAALA,KAAK,GAAA4S,gBAAA,cAAG,YAAM,CAAC,CAAC,GAAAA,gBAAA,EACb3K,qBAAqB,GAAAc,wBAAA,CAAA4J,UAAA,EAAAoB,UAAA;cAAAD,SAAA,CAAA9U,IAAA;cAAA,OAEH8B,cAAc,CAACK,KAAK,EAAE8G,qBAAqB,CAAC;YAAA;cAA7DE,QAAQ,GAAA2L,SAAA,CAAA1U,IAAA;cACRxC,IAAI,GAAGjB,OAAO,CAACJ,SAAS,CAAC;cACzBmL,SAAS,GAAGpL,YAAY,CAACC,SAAS,CAAC;cACnCG,IAAI,GAAGE,wBAAwB,CAACL,SAAS,CAAC;cAC1CsX,OAAO,GAAGnX,IAAI,KAAK,GAAG;cAAAoX,eAAA,GAIxBjV,KAAK,CAAC3B,QAAQ,EAFhBG,KAAK,GAAAyW,eAAA,CAALzW,KAAK,EACLG,MAAM,GAAAsW,eAAA,CAANtW,MAAM;cAAA,MAIJI,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,QAAQ;gBAAAkX,SAAA,CAAA9U,IAAA;gBAAA;cAAA;cACrC+T,UAAU,GAAGnW,IAAI;cAACkX,SAAA,CAAApU,EAAA,GACNgH,SAAS;cAAAoN,SAAA,CAAA9U,IAAA;cAAA,OAAcrB,QAAQ,CAACwB,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGxB,QAAQ,CAACwB,KAAK,CAACI,QAAQ,CAACrD,QAAQ,CAAC;YAAA;cAAA,KAAA4X,SAAA,CAAA1U,IAAA;gBAAA0U,SAAA,CAAA9U,IAAA;gBAAA;cAAA;cAAA8U,SAAA,CAAArR,EAAA,GAAK,OAAO;cAAAqR,SAAA,CAAA9U,IAAA;cAAA;YAAA;cAAA8U,SAAA,CAAArR,EAAA,GAAG,KAAK;YAAA;cAAAqR,SAAA,CAAAnR,EAAA,GAAAmR,SAAA,CAAArR,EAAA;cAAA,MAAAqR,SAAA,CAAApU,EAAA,KAAAoU,SAAA,CAAAnR,EAAA;gBAAAmR,SAAA,CAAA9U,IAAA;gBAAA;cAAA;cAAA8U,SAAA,CAAAlR,EAAA,GAAI,MAAM;cAAAkR,SAAA,CAAA9U,IAAA;cAAA;YAAA;cAAA8U,SAAA,CAAAlR,EAAA,GAAG,OAAO;YAAA;cAA9IoQ,SAAS,GAAAc,SAAA,CAAAlR,EAAA;cAAAkR,SAAA,CAAA9U,IAAA;cAAA;YAAA;cAETgU,SAAS,GAAGpW,IAAI;cAChBmW,UAAU,GAAGrM,SAAS,KAAK,KAAK,GAAG,KAAK,GAAG,QAAQ;YAAC;cAEhDuM,uBAAuB,GAAGzW,MAAM,GAAG2L,QAAQ,CAAC4K,UAAU,CAAC;cACvDG,sBAAsB,GAAG7W,KAAK,GAAG8L,QAAQ,CAAC6K,SAAS,CAAC;cACpDG,OAAO,GAAG,CAAChS,KAAK,CAACnD,cAAc,CAACqS,KAAK;cACvC+C,eAAe,GAAGH,uBAAuB;cACzCI,cAAc,GAAGH,sBAAsB;cAC3C,IAAIL,OAAO,EAAE;gBACLS,oBAAoB,GAAGjX,KAAK,GAAG8L,QAAQ,CAACzH,IAAI,GAAGyH,QAAQ,CAAC3H,KAAK;gBACnE6S,cAAc,GAAG3M,SAAS,IAAIyM,OAAO,GAAGlP,GAAG,CAACiP,sBAAsB,EAAEI,oBAAoB,CAAC,GAAGA,oBAAoB;cAClH,CAAC,MAAM;gBACCC,qBAAqB,GAAG/W,MAAM,GAAG2L,QAAQ,CAAC5H,GAAG,GAAG4H,QAAQ,CAAC1H,MAAM;gBACrE2S,eAAe,GAAG1M,SAAS,IAAIyM,OAAO,GAAGlP,GAAG,CAACgP,uBAAuB,EAAEM,qBAAqB,CAAC,GAAGA,qBAAqB;cACtH;cACA,IAAIJ,OAAO,IAAI,CAACzM,SAAS,EAAE;gBACnB8M,IAAI,GAAGrP,GAAG,CAACgE,QAAQ,CAACzH,IAAI,EAAE,CAAC,CAAC;gBAC5B+S,IAAI,GAAGtP,GAAG,CAACgE,QAAQ,CAAC3H,KAAK,EAAE,CAAC,CAAC;gBAC7BkT,IAAI,GAAGvP,GAAG,CAACgE,QAAQ,CAAC5H,GAAG,EAAE,CAAC,CAAC;gBAC3BoT,IAAI,GAAGxP,GAAG,CAACgE,QAAQ,CAAC1H,MAAM,EAAE,CAAC,CAAC;gBACpC,IAAIoS,OAAO,EAAE;kBACXQ,cAAc,GAAGhX,KAAK,GAAG,CAAC,IAAImX,IAAI,KAAK,CAAC,IAAIC,IAAI,KAAK,CAAC,GAAGD,IAAI,GAAGC,IAAI,GAAGtP,GAAG,CAACgE,QAAQ,CAACzH,IAAI,EAAEyH,QAAQ,CAAC3H,KAAK,CAAC,CAAC;gBAC5G,CAAC,MAAM;kBACL4S,eAAe,GAAG5W,MAAM,GAAG,CAAC,IAAIkX,IAAI,KAAK,CAAC,IAAIC,IAAI,KAAK,CAAC,GAAGD,IAAI,GAAGC,IAAI,GAAGxP,GAAG,CAACgE,QAAQ,CAAC5H,GAAG,EAAE4H,QAAQ,CAAC1H,MAAM,CAAC,CAAC;gBAC9G;cACF;cAACqT,SAAA,CAAA9U,IAAA;cAAA,OACKgB,KAAK,CAAAR,aAAA,CAAAA,aAAA,KACN2B,KAAK;gBACRkS,cAAc,EAAdA,cAAc;gBACdD,eAAe,EAAfA;cAAe,EAChB,CAAC;YAAA;cAAAU,SAAA,CAAA9U,IAAA;cAAA,OAC2BrB,QAAQ,CAACqI,aAAa,CAACzG,QAAQ,CAACrD,QAAQ,CAAC;YAAA;cAAhE0X,cAAc,GAAAE,SAAA,CAAA1U,IAAA;cAAA,MAChB/C,KAAK,KAAKuX,cAAc,CAACvX,KAAK,IAAIG,MAAM,KAAKoX,cAAc,CAACpX,MAAM;gBAAAsX,SAAA,CAAA9U,IAAA;gBAAA;cAAA;cAAA,OAAA8U,SAAA,CAAAnU,MAAA,WAC7D;gBACLjB,KAAK,EAAE;kBACLb,KAAK,EAAE;gBACT;cACF,CAAC;YAAA;cAAA,OAAAiW,SAAA,CAAAnU,MAAA,WAEI,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAmU,SAAA,CAAAlU,IAAA;UAAA;QAAA,GAAA8S,QAAA;MAAA;IACX;EACF,CAAC;AACH,CAAC;AAED,SAASnO,KAAK,EAAEgD,aAAa,EAAExK,eAAe,EAAE+D,cAAc,EAAE0J,IAAI,EAAE8B,IAAI,EAAEuB,MAAM,EAAE8D,UAAU,EAAEhM,MAAM,EAAE/E,gBAAgB,EAAEyP,KAAK,EAAEoC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}