{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar urlencoded = require(\"./urlencoded\");\nexports.implementation = /*#__PURE__*/function (_Symbol$iterator) {\n  function URLSearchParamsImpl(globalObject, constructorArgs, _ref) {\n    var _ref$doNotStripQMark = _ref.doNotStripQMark,\n      doNotStripQMark = _ref$doNotStripQMark === void 0 ? false : _ref$doNotStripQMark;\n    _classCallCheck(this, URLSearchParamsImpl);\n    var init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n    if (Array.isArray(init)) {\n      var _iterator = _createForOfIteratorHelper(init),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pair = _step.value;\n          if (pair.length !== 2) {\n            throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" + \"contain exactly two elements.\");\n          }\n          this._list.push([pair[0], pair[1]]);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (var _i = 0, _Object$keys = Object.keys(init); _i < _Object$keys.length; _i++) {\n        var name = _Object$keys[_i];\n        var value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n  _createClass(URLSearchParamsImpl, [{\n    key: \"_updateSteps\",\n    value: function _updateSteps() {\n      if (this._url !== null) {\n        var query = urlencoded.serializeUrlencoded(this._list);\n        if (query === \"\") {\n          query = null;\n        }\n        this._url._url.query = query;\n      }\n    }\n  }, {\n    key: \"append\",\n    value: function append(name, value) {\n      this._list.push([name, value]);\n      this._updateSteps();\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(name) {\n      var i = 0;\n      while (i < this._list.length) {\n        if (this._list[i][0] === name) {\n          this._list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n      this._updateSteps();\n    }\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var _iterator2 = _createForOfIteratorHelper(this._list),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var tuple = _step2.value;\n          if (tuple[0] === name) {\n            return tuple[1];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return null;\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll(name) {\n      var output = [];\n      var _iterator3 = _createForOfIteratorHelper(this._list),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var tuple = _step3.value;\n          if (tuple[0] === name) {\n            output.push(tuple[1]);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return output;\n    }\n  }, {\n    key: \"has\",\n    value: function has(name) {\n      var _iterator4 = _createForOfIteratorHelper(this._list),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var tuple = _step4.value;\n          if (tuple[0] === name) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return false;\n    }\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      var found = false;\n      var i = 0;\n      while (i < this._list.length) {\n        if (this._list[i][0] === name) {\n          if (found) {\n            this._list.splice(i, 1);\n          } else {\n            found = true;\n            this._list[i][1] = value;\n            i++;\n          }\n        } else {\n          i++;\n        }\n      }\n      if (!found) {\n        this._list.push([name, value]);\n      }\n      this._updateSteps();\n    }\n  }, {\n    key: \"sort\",\n    value: function sort() {\n      this._list.sort(function (a, b) {\n        if (a[0] < b[0]) {\n          return -1;\n        }\n        if (a[0] > b[0]) {\n          return 1;\n        }\n        return 0;\n      });\n      this._updateSteps();\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return this._list[Symbol.iterator]();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return urlencoded.serializeUrlencoded(this._list);\n    }\n  }]);\n  return URLSearchParamsImpl;\n}(Symbol.iterator);","map":{"version":3,"names":["_createForOfIteratorHelper","require","default","_classCallCheck","_createClass","urlencoded","exports","implementation","_Symbol$iterator","URLSearchParamsImpl","globalObject","constructorArgs","_ref","_ref$doNotStripQMark","doNotStripQMark","init","_list","_url","slice","Array","isArray","_iterator","_step","s","n","done","pair","value","length","TypeError","push","err","e","f","Object","getPrototypeOf","_i","_Object$keys","keys","name","parseUrlencodedString","key","_updateSteps","query","serializeUrlencoded","append","_delete","i","splice","get","_iterator2","_step2","tuple","getAll","output","_iterator3","_step3","has","_iterator4","_step4","set","found","sort","a","b","Symbol","iterator","toString"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/URLSearchParams-impl.js"],"sourcesContent":["\"use strict\";\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let query = urlencoded.serializeUrlencoded(this._list);\n      if (query === \"\") {\n        query = null;\n      }\n      this._url._url.query = query;\n    }\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list.sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      }\n      if (a[0] > b[0]) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}