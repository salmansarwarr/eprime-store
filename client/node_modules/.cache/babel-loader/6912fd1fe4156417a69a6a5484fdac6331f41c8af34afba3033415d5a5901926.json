{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RenameOperation = void 0;\nvar collection_1 = require(\"../collection\");\nvar error_1 = require(\"../error\");\nvar utils_1 = require(\"../utils\");\nvar operation_1 = require(\"./operation\");\nvar run_command_1 = require(\"./run_command\");\n/** @internal */\nvar RenameOperation = /*#__PURE__*/function (_run_command_1$RunAdm) {\n  _inherits(RenameOperation, _run_command_1$RunAdm);\n  var _super = _createSuper(RenameOperation);\n  function RenameOperation(collection, newName, options) {\n    var _this;\n    _classCallCheck(this, RenameOperation);\n    // Check the collection name\n    (0, utils_1.checkCollectionName)(newName);\n    // Build the command\n    var renameCollection = collection.namespace;\n    var toCollection = collection.s.namespace.withCollection(newName).toString();\n    var dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n    var cmd = {\n      renameCollection: renameCollection,\n      to: toCollection,\n      dropTarget: dropTarget\n    };\n    _this = _super.call(this, collection, cmd, options);\n    _this.options = options;\n    _this.collection = collection;\n    _this.newName = newName;\n    return _this;\n  }\n  _createClass(RenameOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var _this2 = this;\n      var coll = this.collection;\n      _get(_getPrototypeOf(RenameOperation.prototype), \"executeCallback\", this).call(this, server, session, function (err, doc) {\n        if (err) return callback(err);\n        // We have an error\n        if (doc !== null && doc !== void 0 && doc.errmsg) {\n          return callback(new error_1.MongoServerError(doc));\n        }\n        var newColl;\n        try {\n          newColl = new collection_1.Collection(coll.s.db, _this2.newName, coll.s.options);\n        } catch (err) {\n          return callback(err);\n        }\n        return callback(undefined, newColl);\n      });\n    }\n  }]);\n  return RenameOperation;\n}(run_command_1.RunAdminCommandOperation);\nexports.RenameOperation = RenameOperation;\n(0, operation_1.defineAspects)(RenameOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"names":["collection_1","require","error_1","utils_1","operation_1","run_command_1","RenameOperation","_run_command_1$RunAdm","_inherits","_super","_createSuper","collection","newName","options","_this","_classCallCheck","checkCollectionName","renameCollection","namespace","toCollection","s","withCollection","toString","dropTarget","cmd","to","call","_createClass","key","value","executeCallback","server","session","callback","_this2","coll","_get","_getPrototypeOf","prototype","err","doc","errmsg","MongoServerError","newColl","Collection","db","undefined","RunAdminCommandOperation","exports","defineAspects","Aspect","WRITE_OPERATION"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/operations/rename.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport { Collection } from '../collection';\nimport { MongoServerError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, checkCollectionName } from '../utils';\nimport type { CommandOperationOptions } from './command';\nimport { Aspect, defineAspects } from './operation';\nimport { RunAdminCommandOperation } from './run_command';\n\n/** @public */\nexport interface RenameOptions extends CommandOperationOptions {\n  /** Drop the target name collection if it previously exists. */\n  dropTarget?: boolean;\n  /** Unclear */\n  new_collection?: boolean;\n}\n\n/** @internal */\nexport class RenameOperation extends RunAdminCommandOperation {\n  override options: RenameOptions;\n  collection: Collection;\n  newName: string;\n\n  constructor(collection: Collection, newName: string, options: RenameOptions) {\n    // Check the collection name\n    checkCollectionName(newName);\n\n    // Build the command\n    const renameCollection = collection.namespace;\n    const toCollection = collection.s.namespace.withCollection(newName).toString();\n    const dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n    const cmd = { renameCollection: renameCollection, to: toCollection, dropTarget: dropTarget };\n\n    super(collection, cmd, options);\n    this.options = options;\n    this.collection = collection;\n    this.newName = newName;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Collection>\n  ): void {\n    const coll = this.collection;\n\n    super.executeCallback(server, session, (err, doc) => {\n      if (err) return callback(err);\n      // We have an error\n      if (doc?.errmsg) {\n        return callback(new MongoServerError(doc));\n      }\n\n      let newColl: Collection<Document>;\n      try {\n        newColl = new Collection(coll.s.db, this.newName, coll.s.options);\n      } catch (err) {\n        return callback(err);\n      }\n\n      return callback(undefined, newColl);\n    });\n  }\n}\n\ndefineAspects(RenameOperation, [Aspect.WRITE_OPERATION]);\n"],"mappings":";;;;;;;;;;;;AACA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAGA,IAAAE,OAAA,GAAAF,OAAA;AAEA,IAAAG,WAAA,GAAAH,OAAA;AACA,IAAAI,aAAA,GAAAJ,OAAA;AAUA;AAAA,IACaK,eAAgB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,eAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,eAAA;EAK3B,SAAAA,gBAAYK,UAAsB,EAAEC,OAAe,EAAEC,OAAsB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,eAAA;IACzE;IACA,IAAAH,OAAA,CAAAa,mBAAmB,EAACJ,OAAO,CAAC;IAE5B;IACA,IAAMK,gBAAgB,GAAGN,UAAU,CAACO,SAAS;IAC7C,IAAMC,YAAY,GAAGR,UAAU,CAACS,CAAC,CAACF,SAAS,CAACG,cAAc,CAACT,OAAO,CAAC,CAACU,QAAQ,EAAE;IAC9E,IAAMC,UAAU,GAAG,OAAOV,OAAO,CAACU,UAAU,KAAK,SAAS,GAAGV,OAAO,CAACU,UAAU,GAAG,KAAK;IACvF,IAAMC,GAAG,GAAG;MAAEP,gBAAgB,EAAEA,gBAAgB;MAAEQ,EAAE,EAAEN,YAAY;MAAEI,UAAU,EAAEA;IAAU,CAAE;IAE5FT,KAAA,GAAAL,MAAA,CAAAiB,IAAA,OAAMf,UAAU,EAAEa,GAAG,EAAEX,OAAO;IAC9BC,KAAA,CAAKD,OAAO,GAAGA,OAAO;IACtBC,KAAA,CAAKH,UAAU,GAAGA,UAAU;IAC5BG,KAAA,CAAKF,OAAO,GAAGA,OAAO;IAAC,OAAAE,KAAA;EACzB;EAACa,YAAA,CAAArB,eAAA;IAAAsB,GAAA;IAAAC,KAAA,EAEQ,SAAAC,gBACPC,MAAc,EACdC,OAAkC,EAClCC,QAA8B;MAAA,IAAAC,MAAA;MAE9B,IAAMC,IAAI,GAAG,IAAI,CAACxB,UAAU;MAE5ByB,IAAA,CAAAC,eAAA,CAAA/B,eAAA,CAAAgC,SAAA,4BAAAZ,IAAA,OAAsBK,MAAM,EAAEC,OAAO,EAAE,UAACO,GAAG,EAAEC,GAAG,EAAI;QAClD,IAAID,GAAG,EAAE,OAAON,QAAQ,CAACM,GAAG,CAAC;QAC7B;QACA,IAAIC,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEC,MAAM,EAAE;UACf,OAAOR,QAAQ,CAAC,IAAI/B,OAAA,CAAAwC,gBAAgB,CAACF,GAAG,CAAC,CAAC;;QAG5C,IAAIG,OAA6B;QACjC,IAAI;UACFA,OAAO,GAAG,IAAI3C,YAAA,CAAA4C,UAAU,CAACT,IAAI,CAACf,CAAC,CAACyB,EAAE,EAAEX,MAAI,CAACtB,OAAO,EAAEuB,IAAI,CAACf,CAAC,CAACP,OAAO,CAAC;SAClE,CAAC,OAAO0B,GAAG,EAAE;UACZ,OAAON,QAAQ,CAACM,GAAG,CAAC;;QAGtB,OAAON,QAAQ,CAACa,SAAS,EAAEH,OAAO,CAAC;MACrC,CAAC;IACH;EAAC;EAAA,OAAArC,eAAA;AAAA,EA5CkCD,aAAA,CAAA0C,wBAAwB;AAA7DC,OAAA,CAAA1C,eAAA,GAAAA,eAAA;AA+CA,IAAAF,WAAA,CAAA6C,aAAa,EAAC3C,eAAe,EAAE,CAACF,WAAA,CAAA8C,MAAM,CAACC,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}