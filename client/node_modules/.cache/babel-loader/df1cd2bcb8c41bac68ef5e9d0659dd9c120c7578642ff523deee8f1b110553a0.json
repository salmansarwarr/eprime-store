{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plain = void 0;\nvar bson_1 = require(\"../../bson\");\nvar error_1 = require(\"../../error\");\nvar utils_1 = require(\"../../utils\");\nvar auth_provider_1 = require(\"./auth_provider\");\nvar Plain = /*#__PURE__*/function (_auth_provider_1$Auth) {\n  _inherits(Plain, _auth_provider_1$Auth);\n  var _super = _createSuper(Plain);\n  function Plain() {\n    _classCallCheck(this, Plain);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Plain, [{\n    key: \"auth\",\n    value: function () {\n      var _auth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authContext) {\n        var connection, credentials, username, password, payload, command;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              connection = authContext.connection, credentials = authContext.credentials;\n              if (credentials) {\n                _context.next = 3;\n                break;\n              }\n              throw new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.');\n            case 3:\n              username = credentials.username, password = credentials.password;\n              payload = new bson_1.Binary(Buffer.from(\"\\0\".concat(username, \"\\0\").concat(password)));\n              command = {\n                saslStart: 1,\n                mechanism: 'PLAIN',\n                payload: payload,\n                autoAuthorize: 1\n              };\n              _context.next = 8;\n              return connection.commandAsync((0, utils_1.ns)('$external.$cmd'), command, undefined);\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function auth(_x) {\n        return _auth.apply(this, arguments);\n      }\n      return auth;\n    }()\n  }]);\n  return Plain;\n}(auth_provider_1.AuthProvider);\nexports.Plain = Plain;","map":{"version":3,"names":["bson_1","require","error_1","utils_1","auth_provider_1","Plain","_auth_provider_1$Auth","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_auth","_asyncToGenerator","_regeneratorRuntime","mark","_callee","authContext","connection","credentials","username","password","payload","command","wrap","_callee$","_context","prev","next","MongoMissingCredentialsError","Binary","Buffer","from","concat","saslStart","mechanism","autoAuthorize","commandAsync","ns","undefined","stop","auth","_x","AuthProvider","exports"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/cmap/auth/plain.ts"],"sourcesContent":["import { Binary } from '../../bson';\nimport { MongoMissingCredentialsError } from '../../error';\nimport { ns } from '../../utils';\nimport { type AuthContext, AuthProvider } from './auth_provider';\n\nexport class Plain extends AuthProvider {\n  override async auth(authContext: AuthContext): Promise<void> {\n    const { connection, credentials } = authContext;\n    if (!credentials) {\n      throw new MongoMissingCredentialsError('AuthContext must provide credentials.');\n    }\n\n    const { username, password } = credentials;\n\n    const payload = new Binary(Buffer.from(`\\x00${username}\\x00${password}`));\n    const command = {\n      saslStart: 1,\n      mechanism: 'PLAIN',\n      payload: payload,\n      autoAuthorize: 1\n    };\n\n    await connection.commandAsync(ns('$external.$cmd'), command, undefined);\n  }\n}\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AAAiE,IAEpDI,KAAM,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,KAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,KAAA;EAAA,SAAAA,MAAA;IAAAK,eAAA,OAAAL,KAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,KAAA;IAAAS,GAAA;IAAAC,KAAA;MAAA,IAAAC,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACR,SAAAC,QAAWC,WAAwB;QAAA,IAAAC,UAAA,EAAAC,WAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,OAAA,EAAAC,OAAA;QAAA,OAAAT,mBAAA,GAAAU,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAClCV,UAAU,GAAkBD,WAAW,CAAvCC,UAAU,EAAEC,WAAW,GAAKF,WAAW,CAA3BE,WAAW;cAAA,IAC1BA,WAAW;gBAAAO,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,MACR,IAAI9B,OAAA,CAAA+B,4BAA4B,CAAC,uCAAuC,CAAC;YAAA;cAGzET,QAAQ,GAAeD,WAAW,CAAlCC,QAAQ,EAAEC,QAAQ,GAAKF,WAAW,CAAxBE,QAAQ;cAEpBC,OAAO,GAAG,IAAI1B,MAAA,CAAAkC,MAAM,CAACC,MAAM,CAACC,IAAI,MAAAC,MAAA,CAAQb,QAAQ,QAAAa,MAAA,CAAOZ,QAAQ,CAAE,CAAC,CAAC;cACnEE,OAAO,GAAG;gBACdW,SAAS,EAAE,CAAC;gBACZC,SAAS,EAAE,OAAO;gBAClBb,OAAO,EAAEA,OAAO;gBAChBc,aAAa,EAAE;eAChB;cAAAV,QAAA,CAAAE,IAAA;cAAA,OAEKV,UAAU,CAACmB,YAAY,CAAC,IAAAtC,OAAA,CAAAuC,EAAE,EAAC,gBAAgB,CAAC,EAAEf,OAAO,EAAEgB,SAAS,CAAC;YAAA;YAAA;cAAA,OAAAb,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAAxB,OAAA;MAAA,CACxE;MAAA,SAAAyB,KAAAC,EAAA;QAAA,OAAA9B,KAAA,CAAAL,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAiC,IAAA;IAAA;EAAA;EAAA,OAAAxC,KAAA;AAAA,EAlBwBD,eAAA,CAAA2C,YAAY;AAAvCC,OAAA,CAAA3C,KAAA,GAAAA,KAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}