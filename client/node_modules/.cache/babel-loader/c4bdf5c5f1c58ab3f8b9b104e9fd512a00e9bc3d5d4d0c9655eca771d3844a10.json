{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defineAspects = exports.AbstractCallbackOperation = exports.AbstractOperation = exports.Aspect = void 0;\nvar util_1 = require(\"util\");\nvar bson_1 = require(\"../bson\");\nvar read_preference_1 = require(\"../read_preference\");\nexports.Aspect = {\n  READ_OPERATION: Symbol('READ_OPERATION'),\n  WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n  RETRYABLE: Symbol('RETRYABLE'),\n  EXPLAINABLE: Symbol('EXPLAINABLE'),\n  SKIP_COLLATION: Symbol('SKIP_COLLATION'),\n  CURSOR_CREATING: Symbol('CURSOR_CREATING'),\n  MUST_SELECT_SAME_SERVER: Symbol('MUST_SELECT_SAME_SERVER')\n};\n/** @internal */\nvar kSession = Symbol('session');\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n * @internal\n */\nvar AbstractOperation = /*#__PURE__*/function () {\n  function AbstractOperation() {\n    var _read_preference_1$Re;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, AbstractOperation);\n    this.readPreference = this.hasAspect(exports.Aspect.WRITE_OPERATION) ? read_preference_1.ReadPreference.primary : (_read_preference_1$Re = read_preference_1.ReadPreference.fromOptions(options)) !== null && _read_preference_1$Re !== void 0 ? _read_preference_1$Re : read_preference_1.ReadPreference.primary;\n    // Pull the BSON serialize options from the already-resolved options\n    this.bsonOptions = (0, bson_1.resolveBSONOptions)(options);\n    this[kSession] = options.session != null ? options.session : undefined;\n    this.options = options;\n    this.bypassPinningCheck = !!options.bypassPinningCheck;\n    this.trySecondaryWrite = false;\n  }\n  _createClass(AbstractOperation, [{\n    key: \"hasAspect\",\n    value: function hasAspect(aspect) {\n      var ctor = this.constructor;\n      if (ctor.aspects == null) {\n        return false;\n      }\n      return ctor.aspects.has(aspect);\n    }\n  }, {\n    key: \"session\",\n    get: function get() {\n      return this[kSession];\n    }\n  }, {\n    key: \"clearSession\",\n    value: function clearSession() {\n      this[kSession] = undefined;\n    }\n  }, {\n    key: \"canRetryRead\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"canRetryWrite\",\n    get: function get() {\n      return true;\n    }\n  }]);\n  return AbstractOperation;\n}();\nexports.AbstractOperation = AbstractOperation;\n/** @internal */\nvar AbstractCallbackOperation = /*#__PURE__*/function (_AbstractOperation) {\n  _inherits(AbstractCallbackOperation, _AbstractOperation);\n  var _super = _createSuper(AbstractCallbackOperation);\n  function AbstractCallbackOperation() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, AbstractCallbackOperation);\n    return _super.call(this, options);\n  }\n  _createClass(AbstractCallbackOperation, [{\n    key: \"execute\",\n    value: function execute(server, session) {\n      var _this = this;\n      return (0, util_1.promisify)(function (callback) {\n        _this.executeCallback(server, session, callback);\n      })();\n    }\n  }]);\n  return AbstractCallbackOperation;\n}(AbstractOperation);\nexports.AbstractCallbackOperation = AbstractCallbackOperation;\nfunction defineAspects(operation, aspects) {\n  if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n    aspects = [aspects];\n  }\n  aspects = new Set(aspects);\n  Object.defineProperty(operation, 'aspects', {\n    value: aspects,\n    writable: false\n  });\n  return aspects;\n}\nexports.defineAspects = defineAspects;","map":{"version":3,"names":["util_1","require","bson_1","read_preference_1","exports","Aspect","READ_OPERATION","Symbol","WRITE_OPERATION","RETRYABLE","EXPLAINABLE","SKIP_COLLATION","CURSOR_CREATING","MUST_SELECT_SAME_SERVER","kSession","AbstractOperation","_read_preference_1$Re","options","arguments","length","undefined","_classCallCheck","readPreference","hasAspect","ReadPreference","primary","fromOptions","bsonOptions","resolveBSONOptions","session","bypassPinningCheck","trySecondaryWrite","_createClass","key","value","aspect","ctor","constructor","aspects","has","get","clearSession","AbstractCallbackOperation","_AbstractOperation","_inherits","_super","_createSuper","call","execute","server","_this","promisify","callback","executeCallback","defineAspects","operation","Array","isArray","Set","Object","defineProperty","writable"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/operations/operation.ts"],"sourcesContent":["import { promisify } from 'util';\n\nimport { type BSONSerializeOptions, type Document, resolveBSONOptions } from '../bson';\nimport { ReadPreference, type ReadPreferenceLike } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback, MongoDBNamespace } from '../utils';\n\nexport const Aspect = {\n  READ_OPERATION: Symbol('READ_OPERATION'),\n  WRITE_OPERATION: Symbol('WRITE_OPERATION'),\n  RETRYABLE: Symbol('RETRYABLE'),\n  EXPLAINABLE: Symbol('EXPLAINABLE'),\n  SKIP_COLLATION: Symbol('SKIP_COLLATION'),\n  CURSOR_CREATING: Symbol('CURSOR_CREATING'),\n  MUST_SELECT_SAME_SERVER: Symbol('MUST_SELECT_SAME_SERVER')\n} as const;\n\n/** @public */\nexport type Hint = string | Document;\n\nexport interface OperationConstructor extends Function {\n  aspects?: Set<symbol>;\n}\n\n/** @public */\nexport interface OperationOptions extends BSONSerializeOptions {\n  /** Specify ClientSession for this command */\n  session?: ClientSession;\n  willRetryWrite?: boolean;\n\n  /** The preferred read preference (ReadPreference.primary, ReadPreference.primary_preferred, ReadPreference.secondary, ReadPreference.secondary_preferred, ReadPreference.nearest). */\n  readPreference?: ReadPreferenceLike;\n\n  /** @internal Hints to `executeOperation` that this operation should not unpin on an ended transaction */\n  bypassPinningCheck?: boolean;\n  omitReadPreference?: boolean;\n}\n\n/** @internal */\nconst kSession = Symbol('session');\n\n/**\n * This class acts as a parent class for any operation and is responsible for setting this.options,\n * as well as setting and getting a session.\n * Additionally, this class implements `hasAspect`, which determines whether an operation has\n * a specific aspect.\n * @internal\n */\nexport abstract class AbstractOperation<TResult = any> {\n  ns!: MongoDBNamespace;\n  cmd!: Document;\n  readPreference: ReadPreference;\n  server!: Server;\n  bypassPinningCheck: boolean;\n  trySecondaryWrite: boolean;\n\n  // BSON serialization options\n  bsonOptions?: BSONSerializeOptions;\n\n  options: OperationOptions;\n\n  [kSession]: ClientSession | undefined;\n\n  constructor(options: OperationOptions = {}) {\n    this.readPreference = this.hasAspect(Aspect.WRITE_OPERATION)\n      ? ReadPreference.primary\n      : ReadPreference.fromOptions(options) ?? ReadPreference.primary;\n\n    // Pull the BSON serialize options from the already-resolved options\n    this.bsonOptions = resolveBSONOptions(options);\n\n    this[kSession] = options.session != null ? options.session : undefined;\n\n    this.options = options;\n    this.bypassPinningCheck = !!options.bypassPinningCheck;\n    this.trySecondaryWrite = false;\n  }\n\n  abstract execute(server: Server, session: ClientSession | undefined): Promise<TResult>;\n\n  hasAspect(aspect: symbol): boolean {\n    const ctor = this.constructor as OperationConstructor;\n    if (ctor.aspects == null) {\n      return false;\n    }\n\n    return ctor.aspects.has(aspect);\n  }\n\n  get session(): ClientSession | undefined {\n    return this[kSession];\n  }\n\n  clearSession() {\n    this[kSession] = undefined;\n  }\n\n  get canRetryRead(): boolean {\n    return true;\n  }\n\n  get canRetryWrite(): boolean {\n    return true;\n  }\n}\n\n/** @internal */\nexport abstract class AbstractCallbackOperation<TResult = any> extends AbstractOperation {\n  constructor(options: OperationOptions = {}) {\n    super(options);\n  }\n\n  execute(server: Server, session: ClientSession | undefined): Promise<TResult> {\n    return promisify((callback: (e: Error, r: TResult) => void) => {\n      this.executeCallback(server, session, callback as any);\n    })();\n  }\n\n  protected abstract executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<TResult>\n  ): void;\n}\nexport function defineAspects(\n  operation: OperationConstructor,\n  aspects: symbol | symbol[] | Set<symbol>\n): Set<symbol> {\n  if (!Array.isArray(aspects) && !(aspects instanceof Set)) {\n    aspects = [aspects];\n  }\n\n  aspects = new Set(aspects);\n  Object.defineProperty(operation, 'aspects', {\n    value: aspects,\n    writable: false\n  });\n\n  return aspects;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}