{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KillCursorsOperation = void 0;\nvar error_1 = require(\"../error\");\nvar operation_1 = require(\"./operation\");\nvar KillCursorsOperation = /*#__PURE__*/function (_operation_1$Abstract) {\n  _inherits(KillCursorsOperation, _operation_1$Abstract);\n  var _super = _createSuper(KillCursorsOperation);\n  function KillCursorsOperation(cursorId, ns, server, options) {\n    var _this;\n    _classCallCheck(this, KillCursorsOperation);\n    _this = _super.call(this, options);\n    _this.ns = ns;\n    _this.cursorId = cursorId;\n    _this.server = server;\n    return _this;\n  }\n  _createClass(KillCursorsOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      if (server !== this.server) {\n        return callback(new error_1.MongoRuntimeError('Killcursor must run on the same server operation began on'));\n      }\n      var killCursors = this.ns.collection;\n      if (killCursors == null) {\n        // Cursors should have adopted the namespace returned by MongoDB\n        // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n        return callback(new error_1.MongoRuntimeError('A collection name must be determined before killCursors'));\n      }\n      var killCursorsCommand = {\n        killCursors: killCursors,\n        cursors: [this.cursorId]\n      };\n      server.command(this.ns, killCursorsCommand, {\n        session: session\n      }, function () {\n        return callback();\n      });\n    }\n  }]);\n  return KillCursorsOperation;\n}(operation_1.AbstractCallbackOperation);\nexports.KillCursorsOperation = KillCursorsOperation;\n(0, operation_1.defineAspects)(KillCursorsOperation, [operation_1.Aspect.MUST_SELECT_SAME_SERVER]);","map":{"version":3,"names":["error_1","require","operation_1","KillCursorsOperation","_operation_1$Abstract","_inherits","_super","_createSuper","cursorId","ns","server","options","_this","_classCallCheck","call","_createClass","key","value","executeCallback","session","callback","MongoRuntimeError","killCursors","collection","killCursorsCommand","cursors","command","AbstractCallbackOperation","exports","defineAspects","Aspect","MUST_SELECT_SAME_SERVER"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/operations/kill_cursors.ts"],"sourcesContent":["import type { Long } from '../bson';\nimport { MongoRuntimeError } from '../error';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport type { Callback, MongoDBNamespace } from '../utils';\nimport {\n  AbstractCallbackOperation,\n  Aspect,\n  defineAspects,\n  type OperationOptions\n} from './operation';\n\n/**\n * https://www.mongodb.com/docs/manual/reference/command/killCursors/\n * @internal\n */\ninterface KillCursorsCommand {\n  killCursors: string;\n  cursors: Long[];\n  comment?: unknown;\n}\n\nexport class KillCursorsOperation extends AbstractCallbackOperation {\n  cursorId: Long;\n\n  constructor(cursorId: Long, ns: MongoDBNamespace, server: Server, options: OperationOptions) {\n    super(options);\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<void>\n  ): void {\n    if (server !== this.server) {\n      return callback(\n        new MongoRuntimeError('Killcursor must run on the same server operation began on')\n      );\n    }\n\n    const killCursors = this.ns.collection;\n    if (killCursors == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      return callback(\n        new MongoRuntimeError('A collection name must be determined before killCursors')\n      );\n    }\n\n    const killCursorsCommand: KillCursorsCommand = {\n      killCursors,\n      cursors: [this.cursorId]\n    };\n\n    server.command(this.ns, killCursorsCommand, { session }, () => callback());\n  }\n}\n\ndefineAspects(KillCursorsOperation, [Aspect.MUST_SELECT_SAME_SERVER]);\n"],"mappings":";;;;;;;;;;AACA,IAAAA,OAAA,GAAAC,OAAA;AAIA,IAAAC,WAAA,GAAAD,OAAA;AAKqB,IAYRE,oBAAqB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,oBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,oBAAA;EAGhC,SAAAA,qBAAYK,QAAc,EAAEC,EAAoB,EAAEC,MAAc,EAAEC,OAAyB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAV,oBAAA;IACzFS,KAAA,GAAAN,MAAA,CAAAQ,IAAA,OAAMH,OAAO;IACbC,KAAA,CAAKH,EAAE,GAAGA,EAAE;IACZG,KAAA,CAAKJ,QAAQ,GAAGA,QAAQ;IACxBI,KAAA,CAAKF,MAAM,GAAGA,MAAM;IAAC,OAAAE,KAAA;EACvB;EAACG,YAAA,CAAAZ,oBAAA;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAC,gBACER,MAAc,EACdS,OAAkC,EAClCC,QAAwB;MAExB,IAAIV,MAAM,KAAK,IAAI,CAACA,MAAM,EAAE;QAC1B,OAAOU,QAAQ,CACb,IAAIpB,OAAA,CAAAqB,iBAAiB,CAAC,2DAA2D,CAAC,CACnF;;MAGH,IAAMC,WAAW,GAAG,IAAI,CAACb,EAAE,CAACc,UAAU;MACtC,IAAID,WAAW,IAAI,IAAI,EAAE;QACvB;QACA;QACA,OAAOF,QAAQ,CACb,IAAIpB,OAAA,CAAAqB,iBAAiB,CAAC,yDAAyD,CAAC,CACjF;;MAGH,IAAMG,kBAAkB,GAAuB;QAC7CF,WAAW,EAAXA,WAAW;QACXG,OAAO,EAAE,CAAC,IAAI,CAACjB,QAAQ;OACxB;MAEDE,MAAM,CAACgB,OAAO,CAAC,IAAI,CAACjB,EAAE,EAAEe,kBAAkB,EAAE;QAAEL,OAAO,EAAPA;MAAO,CAAE,EAAE;QAAA,OAAMC,QAAQ,EAAE;MAAA,EAAC;IAC5E;EAAC;EAAA,OAAAjB,oBAAA;AAAA,EApCuCD,WAAA,CAAAyB,yBAAyB;AAAnEC,OAAA,CAAAzB,oBAAA,GAAAA,oBAAA;AAuCA,IAAAD,WAAA,CAAA2B,aAAa,EAAC1B,oBAAoB,EAAE,CAACD,WAAA,CAAA4B,MAAM,CAACC,uBAAuB,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}