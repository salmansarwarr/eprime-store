{"ast":null,"code":"\"use strict\";\n\nvar _get = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _slicedToArray = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _objectSpread = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _createForOfIteratorHelper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexInformationOperation = exports.IndexExistsOperation = exports.ListIndexesOperation = exports.DropIndexesOperation = exports.DropIndexOperation = exports.EnsureIndexOperation = exports.CreateIndexOperation = exports.CreateIndexesOperation = exports.IndexesOperation = void 0;\nvar error_1 = require(\"../error\");\nvar read_preference_1 = require(\"../read_preference\");\nvar utils_1 = require(\"../utils\");\nvar command_1 = require(\"./command\");\nvar common_functions_1 = require(\"./common_functions\");\nvar operation_1 = require(\"./operation\");\nvar VALID_INDEX_OPTIONS = new Set(['background', 'unique', 'name', 'partialFilterExpression', 'sparse', 'hidden', 'expireAfterSeconds', 'storageEngine', 'collation', 'version',\n// text indexes\n'weights', 'default_language', 'language_override', 'textIndexVersion',\n// 2d-sphere indexes\n'2dsphereIndexVersion',\n// 2d indexes\n'bits', 'min', 'max',\n// geoHaystack Indexes\n'bucketSize',\n// wildcard indexes\n'wildcardProjection']);\nfunction isIndexDirection(x) {\n  return typeof x === 'number' || x === '2d' || x === '2dsphere' || x === 'text' || x === 'geoHaystack';\n}\nfunction isSingleIndexTuple(t) {\n  return Array.isArray(t) && t.length === 2 && isIndexDirection(t[1]);\n}\nfunction makeIndexSpec(indexSpec, options) {\n  var key = new Map();\n  var indexSpecs = !Array.isArray(indexSpec) || isSingleIndexTuple(indexSpec) ? [indexSpec] : indexSpec;\n  // Iterate through array and handle different types\n  var _iterator = _createForOfIteratorHelper(indexSpecs),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var spec = _step.value;\n      if (typeof spec === 'string') {\n        key.set(spec, 1);\n      } else if (Array.isArray(spec)) {\n        var _spec$;\n        key.set(spec[0], (_spec$ = spec[1]) !== null && _spec$ !== void 0 ? _spec$ : 1);\n      } else if (spec instanceof Map) {\n        var _iterator2 = _createForOfIteratorHelper(spec),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n              property = _step2$value[0],\n              value = _step2$value[1];\n            key.set(property, value);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else if ((0, utils_1.isObject)(spec)) {\n        for (var _i = 0, _Object$entries = Object.entries(spec); _i < _Object$entries.length; _i++) {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            _property = _Object$entries$_i[0],\n            _value = _Object$entries$_i[1];\n          key.set(_property, _value);\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return _objectSpread(_objectSpread({}, options), {}, {\n    key: key\n  });\n}\n/** @internal */\nvar IndexesOperation = /*#__PURE__*/function (_operation_1$Abstract) {\n  _inherits(IndexesOperation, _operation_1$Abstract);\n  var _super = _createSuper(IndexesOperation);\n  function IndexesOperation(collection, options) {\n    var _this;\n    _classCallCheck(this, IndexesOperation);\n    _this = _super.call(this, options);\n    _this.options = options;\n    _this.collection = collection;\n    return _this;\n  }\n  _createClass(IndexesOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var coll = this.collection;\n      var options = this.options;\n      (0, common_functions_1.indexInformation)(coll.s.db, coll.collectionName, _objectSpread(_objectSpread({\n        full: true\n      }, options), {}, {\n        readPreference: this.readPreference,\n        session: session\n      }), callback);\n    }\n  }]);\n  return IndexesOperation;\n}(operation_1.AbstractCallbackOperation);\nexports.IndexesOperation = IndexesOperation;\n/** @internal */\nvar CreateIndexesOperation = /*#__PURE__*/function (_command_1$CommandOpe) {\n  _inherits(CreateIndexesOperation, _command_1$CommandOpe);\n  var _super2 = _createSuper(CreateIndexesOperation);\n  function CreateIndexesOperation(parent, collectionName, indexes, options) {\n    var _this2;\n    _classCallCheck(this, CreateIndexesOperation);\n    _this2 = _super2.call(this, parent, options);\n    _this2.options = options !== null && options !== void 0 ? options : {};\n    _this2.collectionName = collectionName;\n    _this2.indexes = indexes.map(function (userIndex) {\n      // Ensure the key is a Map to preserve index key ordering\n      var key = userIndex.key instanceof Map ? userIndex.key : new Map(Object.entries(userIndex.key));\n      var name = userIndex.name != null ? userIndex.name : Array.from(key).flat().join('_');\n      var validIndexOptions = Object.fromEntries(Object.entries(_objectSpread({}, userIndex)).filter(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n          optionName = _ref2[0];\n        return VALID_INDEX_OPTIONS.has(optionName);\n      }));\n      return _objectSpread(_objectSpread({}, validIndexOptions), {}, {\n        name: name,\n        key: key\n      });\n    });\n    return _this2;\n  }\n  _createClass(CreateIndexesOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var options = this.options;\n      var indexes = this.indexes;\n      var serverWireVersion = (0, utils_1.maxWireVersion)(server);\n      var cmd = {\n        createIndexes: this.collectionName,\n        indexes: indexes\n      };\n      if (options.commitQuorum != null) {\n        if (serverWireVersion < 9) {\n          callback(new error_1.MongoCompatibilityError('Option `commitQuorum` for `createIndexes` not supported on servers < 4.4'));\n          return;\n        }\n        cmd.commitQuorum = options.commitQuorum;\n      }\n      // collation is set on each index, it should not be defined at the root\n      this.options.collation = undefined;\n      _get(_getPrototypeOf(CreateIndexesOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd, function (err) {\n        if (err) {\n          callback(err);\n          return;\n        }\n        var indexNames = indexes.map(function (index) {\n          return index.name || '';\n        });\n        callback(undefined, indexNames);\n      });\n    }\n  }]);\n  return CreateIndexesOperation;\n}(command_1.CommandOperation);\nexports.CreateIndexesOperation = CreateIndexesOperation;\n/** @internal */\nvar CreateIndexOperation = /*#__PURE__*/function (_CreateIndexesOperati) {\n  _inherits(CreateIndexOperation, _CreateIndexesOperati);\n  var _super3 = _createSuper(CreateIndexOperation);\n  function CreateIndexOperation(parent, collectionName, indexSpec, options) {\n    _classCallCheck(this, CreateIndexOperation);\n    return _super3.call(this, parent, collectionName, [makeIndexSpec(indexSpec, options)], options);\n  }\n  _createClass(CreateIndexOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      _get(_getPrototypeOf(CreateIndexOperation.prototype), \"executeCallback\", this).call(this, server, session, function (err, indexNames) {\n        if (err || !indexNames) return callback(err);\n        return callback(undefined, indexNames[0]);\n      });\n    }\n  }]);\n  return CreateIndexOperation;\n}(CreateIndexesOperation);\nexports.CreateIndexOperation = CreateIndexOperation;\n/** @internal */\nvar EnsureIndexOperation = /*#__PURE__*/function (_CreateIndexOperation) {\n  _inherits(EnsureIndexOperation, _CreateIndexOperation);\n  var _super4 = _createSuper(EnsureIndexOperation);\n  function EnsureIndexOperation(db, collectionName, indexSpec, options) {\n    var _this3;\n    _classCallCheck(this, EnsureIndexOperation);\n    _this3 = _super4.call(this, db, collectionName, indexSpec, options);\n    _this3.readPreference = read_preference_1.ReadPreference.primary;\n    _this3.db = db;\n    _this3.collectionName = collectionName;\n    return _this3;\n  }\n  _createClass(EnsureIndexOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var _this4 = this;\n      var indexName = this.indexes[0].name;\n      var cursor = this.db.collection(this.collectionName).listIndexes({\n        session: session\n      });\n      cursor.toArray().then(function (indexes) {\n        indexes = Array.isArray(indexes) ? indexes : [indexes];\n        if (indexes.some(function (index) {\n          return index.name === indexName;\n        })) {\n          callback(undefined, indexName);\n          return;\n        }\n        _get(_getPrototypeOf(EnsureIndexOperation.prototype), \"executeCallback\", _this4).call(_this4, server, session, callback);\n      }, function (error) {\n        if (error instanceof error_1.MongoError && error.code === error_1.MONGODB_ERROR_CODES.NamespaceNotFound) {\n          // ignore \"NamespaceNotFound\" errors\n          return _get(_getPrototypeOf(EnsureIndexOperation.prototype), \"executeCallback\", _this4).call(_this4, server, session, callback);\n        }\n        return callback(error);\n      });\n    }\n  }]);\n  return EnsureIndexOperation;\n}(CreateIndexOperation);\nexports.EnsureIndexOperation = EnsureIndexOperation;\n/** @internal */\nvar DropIndexOperation = /*#__PURE__*/function (_command_1$CommandOpe2) {\n  _inherits(DropIndexOperation, _command_1$CommandOpe2);\n  var _super5 = _createSuper(DropIndexOperation);\n  function DropIndexOperation(collection, indexName, options) {\n    var _this5;\n    _classCallCheck(this, DropIndexOperation);\n    _this5 = _super5.call(this, collection, options);\n    _this5.options = options !== null && options !== void 0 ? options : {};\n    _this5.collection = collection;\n    _this5.indexName = indexName;\n    return _this5;\n  }\n  _createClass(DropIndexOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var cmd = {\n        dropIndexes: this.collection.collectionName,\n        index: this.indexName\n      };\n      _get(_getPrototypeOf(DropIndexOperation.prototype), \"executeCommand\", this).call(this, server, session, cmd, callback);\n    }\n  }]);\n  return DropIndexOperation;\n}(command_1.CommandOperation);\nexports.DropIndexOperation = DropIndexOperation;\n/** @internal */\nvar DropIndexesOperation = /*#__PURE__*/function (_DropIndexOperation) {\n  _inherits(DropIndexesOperation, _DropIndexOperation);\n  var _super6 = _createSuper(DropIndexesOperation);\n  function DropIndexesOperation(collection, options) {\n    _classCallCheck(this, DropIndexesOperation);\n    return _super6.call(this, collection, '*', options);\n  }\n  _createClass(DropIndexesOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      _get(_getPrototypeOf(DropIndexesOperation.prototype), \"executeCallback\", this).call(this, server, session, function (err) {\n        if (err) return callback(err, false);\n        callback(undefined, true);\n      });\n    }\n  }]);\n  return DropIndexesOperation;\n}(DropIndexOperation);\nexports.DropIndexesOperation = DropIndexesOperation;\n/** @internal */\nvar ListIndexesOperation = /*#__PURE__*/function (_command_1$CommandOpe3) {\n  _inherits(ListIndexesOperation, _command_1$CommandOpe3);\n  var _super7 = _createSuper(ListIndexesOperation);\n  function ListIndexesOperation(collection, options) {\n    var _this6;\n    _classCallCheck(this, ListIndexesOperation);\n    _this6 = _super7.call(this, collection, options);\n    _this6.options = _objectSpread({}, options);\n    delete _this6.options.writeConcern;\n    _this6.collectionNamespace = collection.s.namespace;\n    return _this6;\n  }\n  _createClass(ListIndexesOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var serverWireVersion = (0, utils_1.maxWireVersion)(server);\n      var cursor = this.options.batchSize ? {\n        batchSize: this.options.batchSize\n      } : {};\n      var command = {\n        listIndexes: this.collectionNamespace.collection,\n        cursor: cursor\n      };\n      // we check for undefined specifically here to allow falsy values\n      // eslint-disable-next-line no-restricted-syntax\n      if (serverWireVersion >= 9 && this.options.comment !== undefined) {\n        command.comment = this.options.comment;\n      }\n      _get(_getPrototypeOf(ListIndexesOperation.prototype), \"executeCommand\", this).call(this, server, session, command, callback);\n    }\n  }]);\n  return ListIndexesOperation;\n}(command_1.CommandOperation);\nexports.ListIndexesOperation = ListIndexesOperation;\n/** @internal */\nvar IndexExistsOperation = /*#__PURE__*/function (_operation_1$Abstract2) {\n  _inherits(IndexExistsOperation, _operation_1$Abstract2);\n  var _super8 = _createSuper(IndexExistsOperation);\n  function IndexExistsOperation(collection, indexes, options) {\n    var _this7;\n    _classCallCheck(this, IndexExistsOperation);\n    _this7 = _super8.call(this, options);\n    _this7.options = options;\n    _this7.collection = collection;\n    _this7.indexes = indexes;\n    return _this7;\n  }\n  _createClass(IndexExistsOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var coll = this.collection;\n      var indexes = this.indexes;\n      (0, common_functions_1.indexInformation)(coll.s.db, coll.collectionName, _objectSpread(_objectSpread({}, this.options), {}, {\n        readPreference: this.readPreference,\n        session: session\n      }), function (err, indexInformation) {\n        // If we have an error return\n        if (err != null) return callback(err);\n        // Let's check for the index names\n        if (!Array.isArray(indexes)) return callback(undefined, indexInformation[indexes] != null);\n        // Check in list of indexes\n        for (var i = 0; i < indexes.length; i++) {\n          if (indexInformation[indexes[i]] == null) {\n            return callback(undefined, false);\n          }\n        }\n        // All keys found return true\n        return callback(undefined, true);\n      });\n    }\n  }]);\n  return IndexExistsOperation;\n}(operation_1.AbstractCallbackOperation);\nexports.IndexExistsOperation = IndexExistsOperation;\n/** @internal */\nvar IndexInformationOperation = /*#__PURE__*/function (_operation_1$Abstract3) {\n  _inherits(IndexInformationOperation, _operation_1$Abstract3);\n  var _super9 = _createSuper(IndexInformationOperation);\n  function IndexInformationOperation(db, name, options) {\n    var _this8;\n    _classCallCheck(this, IndexInformationOperation);\n    _this8 = _super9.call(this, options);\n    _this8.options = options !== null && options !== void 0 ? options : {};\n    _this8.db = db;\n    _this8.name = name;\n    return _this8;\n  }\n  _createClass(IndexInformationOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var db = this.db;\n      var name = this.name;\n      (0, common_functions_1.indexInformation)(db, name, _objectSpread(_objectSpread({}, this.options), {}, {\n        readPreference: this.readPreference,\n        session: session\n      }), callback);\n    }\n  }]);\n  return IndexInformationOperation;\n}(operation_1.AbstractCallbackOperation);\nexports.IndexInformationOperation = IndexInformationOperation;\n(0, operation_1.defineAspects)(ListIndexesOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.CURSOR_CREATING]);\n(0, operation_1.defineAspects)(CreateIndexesOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(CreateIndexOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(EnsureIndexOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DropIndexOperation, [operation_1.Aspect.WRITE_OPERATION]);\n(0, operation_1.defineAspects)(DropIndexesOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"names":["error_1","require","read_preference_1","utils_1","command_1","common_functions_1","operation_1","VALID_INDEX_OPTIONS","Set","isIndexDirection","x","isSingleIndexTuple","t","Array","isArray","length","makeIndexSpec","indexSpec","options","key","Map","indexSpecs","_iterator","_createForOfIteratorHelper","_step","s","n","done","spec","value","set","_spec$","_iterator2","_step2","_step2$value","_slicedToArray","property","err","e","f","isObject","_i","_Object$entries","Object","entries","_Object$entries$_i","_objectSpread","IndexesOperation","_operation_1$Abstract","_inherits","_super","_createSuper","collection","_this","_classCallCheck","call","_createClass","executeCallback","server","session","callback","coll","indexInformation","db","collectionName","full","readPreference","AbstractCallbackOperation","exports","CreateIndexesOperation","_command_1$CommandOpe","_super2","parent","indexes","_this2","map","userIndex","name","from","flat","join","validIndexOptions","fromEntries","filter","_ref","_ref2","optionName","has","serverWireVersion","maxWireVersion","cmd","createIndexes","commitQuorum","MongoCompatibilityError","collation","undefined","_get","_getPrototypeOf","prototype","indexNames","index","CommandOperation","CreateIndexOperation","_CreateIndexesOperati","_super3","EnsureIndexOperation","_CreateIndexOperation","_super4","_this3","ReadPreference","primary","_this4","indexName","cursor","listIndexes","toArray","then","some","error","MongoError","code","MONGODB_ERROR_CODES","NamespaceNotFound","DropIndexOperation","_command_1$CommandOpe2","_super5","_this5","dropIndexes","DropIndexesOperation","_DropIndexOperation","_super6","ListIndexesOperation","_command_1$CommandOpe3","_super7","_this6","writeConcern","collectionNamespace","namespace","batchSize","command","comment","IndexExistsOperation","_operation_1$Abstract2","_super8","_this7","i","IndexInformationOperation","_operation_1$Abstract3","_super9","_this8","defineAspects","Aspect","READ_OPERATION","RETRYABLE","CURSOR_CREATING","WRITE_OPERATION"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/operations/indexes.ts"],"sourcesContent":["import type { Document } from '../bson';\nimport type { Collection } from '../collection';\nimport type { Db } from '../db';\nimport { MongoCompatibilityError, MONGODB_ERROR_CODES, MongoError } from '../error';\nimport type { OneOrMore } from '../mongo_types';\nimport { ReadPreference } from '../read_preference';\nimport type { Server } from '../sdam/server';\nimport type { ClientSession } from '../sessions';\nimport { type Callback, isObject, maxWireVersion, type MongoDBNamespace } from '../utils';\nimport {\n  type CollationOptions,\n  CommandOperation,\n  type CommandOperationOptions,\n  type OperationParent\n} from './command';\nimport { indexInformation, type IndexInformationOptions } from './common_functions';\nimport { AbstractCallbackOperation, Aspect, defineAspects } from './operation';\n\nconst VALID_INDEX_OPTIONS = new Set([\n  'background',\n  'unique',\n  'name',\n  'partialFilterExpression',\n  'sparse',\n  'hidden',\n  'expireAfterSeconds',\n  'storageEngine',\n  'collation',\n  'version',\n\n  // text indexes\n  'weights',\n  'default_language',\n  'language_override',\n  'textIndexVersion',\n\n  // 2d-sphere indexes\n  '2dsphereIndexVersion',\n\n  // 2d indexes\n  'bits',\n  'min',\n  'max',\n\n  // geoHaystack Indexes\n  'bucketSize',\n\n  // wildcard indexes\n  'wildcardProjection'\n]);\n\n/** @public */\nexport type IndexDirection =\n  | -1\n  | 1\n  | '2d'\n  | '2dsphere'\n  | 'text'\n  | 'geoHaystack'\n  | 'hashed'\n  | number;\n\nfunction isIndexDirection(x: unknown): x is IndexDirection {\n  return (\n    typeof x === 'number' || x === '2d' || x === '2dsphere' || x === 'text' || x === 'geoHaystack'\n  );\n}\n/** @public */\nexport type IndexSpecification = OneOrMore<\n  | string\n  | [string, IndexDirection]\n  | { [key: string]: IndexDirection }\n  | Map<string, IndexDirection>\n>;\n\n/** @public */\nexport interface IndexDescription\n  extends Pick<\n    CreateIndexesOptions,\n    | 'background'\n    | 'unique'\n    | 'partialFilterExpression'\n    | 'sparse'\n    | 'hidden'\n    | 'expireAfterSeconds'\n    | 'storageEngine'\n    | 'version'\n    | 'weights'\n    | 'default_language'\n    | 'language_override'\n    | 'textIndexVersion'\n    | '2dsphereIndexVersion'\n    | 'bits'\n    | 'min'\n    | 'max'\n    | 'bucketSize'\n    | 'wildcardProjection'\n  > {\n  collation?: CollationOptions;\n  name?: string;\n  key: { [key: string]: IndexDirection } | Map<string, IndexDirection>;\n}\n\n/** @public */\nexport interface CreateIndexesOptions extends Omit<CommandOperationOptions, 'writeConcern'> {\n  /** Creates the index in the background, yielding whenever possible. */\n  background?: boolean;\n  /** Creates an unique index. */\n  unique?: boolean;\n  /** Override the autogenerated index name (useful if the resulting name is larger than 128 bytes) */\n  name?: string;\n  /** Creates a partial index based on the given filter object (MongoDB 3.2 or higher) */\n  partialFilterExpression?: Document;\n  /** Creates a sparse index. */\n  sparse?: boolean;\n  /** Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher) */\n  expireAfterSeconds?: number;\n  /** Allows users to configure the storage engine on a per-index basis when creating an index. (MongoDB 3.0 or higher) */\n  storageEngine?: Document;\n  /** (MongoDB 4.4. or higher) Specifies how many data-bearing members of a replica set, including the primary, must complete the index builds successfully before the primary marks the indexes as ready. This option accepts the same values for the \"w\" field in a write concern plus \"votingMembers\", which indicates all voting data-bearing nodes. */\n  commitQuorum?: number | string;\n  /** Specifies the index version number, either 0 or 1. */\n  version?: number;\n  // text indexes\n  weights?: Document;\n  default_language?: string;\n  language_override?: string;\n  textIndexVersion?: number;\n  // 2d-sphere indexes\n  '2dsphereIndexVersion'?: number;\n  // 2d indexes\n  bits?: number;\n  /** For geospatial indexes set the lower bound for the co-ordinates. */\n  min?: number;\n  /** For geospatial indexes set the high bound for the co-ordinates. */\n  max?: number;\n  // geoHaystack Indexes\n  bucketSize?: number;\n  // wildcard indexes\n  wildcardProjection?: Document;\n  /** Specifies that the index should exist on the target collection but should not be used by the query planner when executing operations. (MongoDB 4.4 or higher) */\n  hidden?: boolean;\n}\n\nfunction isSingleIndexTuple(t: unknown): t is [string, IndexDirection] {\n  return Array.isArray(t) && t.length === 2 && isIndexDirection(t[1]);\n}\n\nfunction makeIndexSpec(\n  indexSpec: IndexSpecification,\n  options?: CreateIndexesOptions\n): IndexDescription {\n  const key: Map<string, IndexDirection> = new Map();\n\n  const indexSpecs =\n    !Array.isArray(indexSpec) || isSingleIndexTuple(indexSpec) ? [indexSpec] : indexSpec;\n\n  // Iterate through array and handle different types\n  for (const spec of indexSpecs) {\n    if (typeof spec === 'string') {\n      key.set(spec, 1);\n    } else if (Array.isArray(spec)) {\n      key.set(spec[0], spec[1] ?? 1);\n    } else if (spec instanceof Map) {\n      for (const [property, value] of spec) {\n        key.set(property, value);\n      }\n    } else if (isObject(spec)) {\n      for (const [property, value] of Object.entries(spec)) {\n        key.set(property, value);\n      }\n    }\n  }\n\n  return { ...options, key };\n}\n\n/** @internal */\nexport class IndexesOperation extends AbstractCallbackOperation<Document[]> {\n  override options: IndexInformationOptions;\n  collection: Collection;\n\n  constructor(collection: Collection, options: IndexInformationOptions) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document[]>\n  ): void {\n    const coll = this.collection;\n    const options = this.options;\n\n    indexInformation(\n      coll.s.db,\n      coll.collectionName,\n      { full: true, ...options, readPreference: this.readPreference, session },\n      callback\n    );\n  }\n}\n\n/** @internal */\nexport class CreateIndexesOperation<\n  T extends string | string[] = string[]\n> extends CommandOperation<T> {\n  override options: CreateIndexesOptions;\n  collectionName: string;\n  indexes: ReadonlyArray<Omit<IndexDescription, 'key'> & { key: Map<string, IndexDirection> }>;\n\n  constructor(\n    parent: OperationParent,\n    collectionName: string,\n    indexes: IndexDescription[],\n    options?: CreateIndexesOptions\n  ) {\n    super(parent, options);\n\n    this.options = options ?? {};\n    this.collectionName = collectionName;\n    this.indexes = indexes.map(userIndex => {\n      // Ensure the key is a Map to preserve index key ordering\n      const key =\n        userIndex.key instanceof Map ? userIndex.key : new Map(Object.entries(userIndex.key));\n      const name = userIndex.name != null ? userIndex.name : Array.from(key).flat().join('_');\n      const validIndexOptions = Object.fromEntries(\n        Object.entries({ ...userIndex }).filter(([optionName]) =>\n          VALID_INDEX_OPTIONS.has(optionName)\n        )\n      );\n      return {\n        ...validIndexOptions,\n        name,\n        key\n      };\n    });\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<T>\n  ): void {\n    const options = this.options;\n    const indexes = this.indexes;\n\n    const serverWireVersion = maxWireVersion(server);\n\n    const cmd: Document = { createIndexes: this.collectionName, indexes };\n\n    if (options.commitQuorum != null) {\n      if (serverWireVersion < 9) {\n        callback(\n          new MongoCompatibilityError(\n            'Option `commitQuorum` for `createIndexes` not supported on servers < 4.4'\n          )\n        );\n        return;\n      }\n      cmd.commitQuorum = options.commitQuorum;\n    }\n\n    // collation is set on each index, it should not be defined at the root\n    this.options.collation = undefined;\n\n    super.executeCommand(server, session, cmd, err => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      const indexNames = indexes.map(index => index.name || '');\n      callback(undefined, indexNames as T);\n    });\n  }\n}\n\n/** @internal */\nexport class CreateIndexOperation extends CreateIndexesOperation<string> {\n  constructor(\n    parent: OperationParent,\n    collectionName: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ) {\n    super(parent, collectionName, [makeIndexSpec(indexSpec, options)], options);\n  }\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<string>\n  ): void {\n    super.executeCallback(server, session, (err, indexNames) => {\n      if (err || !indexNames) return callback(err);\n      return callback(undefined, indexNames[0]);\n    });\n  }\n}\n\n/** @internal */\nexport class EnsureIndexOperation extends CreateIndexOperation {\n  db: Db;\n\n  constructor(\n    db: Db,\n    collectionName: string,\n    indexSpec: IndexSpecification,\n    options?: CreateIndexesOptions\n  ) {\n    super(db, collectionName, indexSpec, options);\n\n    this.readPreference = ReadPreference.primary;\n    this.db = db;\n    this.collectionName = collectionName;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback\n  ): void {\n    const indexName = this.indexes[0].name;\n    const cursor = this.db.collection(this.collectionName).listIndexes({ session });\n    cursor.toArray().then(\n      indexes => {\n        indexes = Array.isArray(indexes) ? indexes : [indexes];\n        if (indexes.some(index => index.name === indexName)) {\n          callback(undefined, indexName);\n          return;\n        }\n        super.executeCallback(server, session, callback);\n      },\n      error => {\n        if (error instanceof MongoError && error.code === MONGODB_ERROR_CODES.NamespaceNotFound) {\n          // ignore \"NamespaceNotFound\" errors\n          return super.executeCallback(server, session, callback);\n        }\n        return callback(error);\n      }\n    );\n  }\n}\n\n/** @public */\nexport type DropIndexesOptions = CommandOperationOptions;\n\n/** @internal */\nexport class DropIndexOperation extends CommandOperation<Document> {\n  override options: DropIndexesOptions;\n  collection: Collection;\n  indexName: string;\n\n  constructor(collection: Collection, indexName: string, options?: DropIndexesOptions) {\n    super(collection, options);\n\n    this.options = options ?? {};\n    this.collection = collection;\n    this.indexName = indexName;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const cmd = { dropIndexes: this.collection.collectionName, index: this.indexName };\n    super.executeCommand(server, session, cmd, callback);\n  }\n}\n\n/** @internal */\nexport class DropIndexesOperation extends DropIndexOperation {\n  constructor(collection: Collection, options: DropIndexesOptions) {\n    super(collection, '*', options);\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback\n  ): void {\n    super.executeCallback(server, session, err => {\n      if (err) return callback(err, false);\n      callback(undefined, true);\n    });\n  }\n}\n\n/** @public */\nexport interface ListIndexesOptions extends Omit<CommandOperationOptions, 'writeConcern'> {\n  /** The batchSize for the returned command cursor or if pre 2.8 the systems batch collection */\n  batchSize?: number;\n}\n\n/** @internal */\nexport class ListIndexesOperation extends CommandOperation<Document> {\n  /**\n   * @remarks WriteConcern can still be present on the options because\n   * we inherit options from the client/db/collection.  The\n   * key must be present on the options in order to delete it.\n   * This allows typescript to delete the key but will\n   * not allow a writeConcern to be assigned as a property on options.\n   */\n  override options: ListIndexesOptions & { writeConcern?: never };\n  collectionNamespace: MongoDBNamespace;\n\n  constructor(collection: Collection, options?: ListIndexesOptions) {\n    super(collection, options);\n\n    this.options = { ...options };\n    delete this.options.writeConcern;\n    this.collectionNamespace = collection.s.namespace;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const serverWireVersion = maxWireVersion(server);\n\n    const cursor = this.options.batchSize ? { batchSize: this.options.batchSize } : {};\n\n    const command: Document = { listIndexes: this.collectionNamespace.collection, cursor };\n\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (serverWireVersion >= 9 && this.options.comment !== undefined) {\n      command.comment = this.options.comment;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n}\n\n/** @internal */\nexport class IndexExistsOperation extends AbstractCallbackOperation<boolean> {\n  override options: IndexInformationOptions;\n  collection: Collection;\n  indexes: string | string[];\n\n  constructor(\n    collection: Collection,\n    indexes: string | string[],\n    options: IndexInformationOptions\n  ) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n    this.indexes = indexes;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<boolean>\n  ): void {\n    const coll = this.collection;\n    const indexes = this.indexes;\n\n    indexInformation(\n      coll.s.db,\n      coll.collectionName,\n      { ...this.options, readPreference: this.readPreference, session },\n      (err, indexInformation) => {\n        // If we have an error return\n        if (err != null) return callback(err);\n        // Let's check for the index names\n        if (!Array.isArray(indexes)) return callback(undefined, indexInformation[indexes] != null);\n        // Check in list of indexes\n        for (let i = 0; i < indexes.length; i++) {\n          if (indexInformation[indexes[i]] == null) {\n            return callback(undefined, false);\n          }\n        }\n\n        // All keys found return true\n        return callback(undefined, true);\n      }\n    );\n  }\n}\n\n/** @internal */\nexport class IndexInformationOperation extends AbstractCallbackOperation<Document> {\n  override options: IndexInformationOptions;\n  db: Db;\n  name: string;\n\n  constructor(db: Db, name: string, options?: IndexInformationOptions) {\n    super(options);\n    this.options = options ?? {};\n    this.db = db;\n    this.name = name;\n  }\n\n  override executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<Document>\n  ): void {\n    const db = this.db;\n    const name = this.name;\n\n    indexInformation(\n      db,\n      name,\n      { ...this.options, readPreference: this.readPreference, session },\n      callback\n    );\n  }\n}\n\ndefineAspects(ListIndexesOperation, [\n  Aspect.READ_OPERATION,\n  Aspect.RETRYABLE,\n  Aspect.CURSOR_CREATING\n]);\ndefineAspects(CreateIndexesOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(CreateIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(EnsureIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropIndexOperation, [Aspect.WRITE_OPERATION]);\ndefineAspects(DropIndexesOperation, [Aspect.WRITE_OPERATION]);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}