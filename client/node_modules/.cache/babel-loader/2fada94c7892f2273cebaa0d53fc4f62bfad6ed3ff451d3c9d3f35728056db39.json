{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CreateSearchIndexesOperation = void 0;\nvar operation_1 = require(\"../operation\");\n/** @internal */\nvar CreateSearchIndexesOperation = /*#__PURE__*/function (_operation_1$Abstract) {\n  _inherits(CreateSearchIndexesOperation, _operation_1$Abstract);\n  var _super = _createSuper(CreateSearchIndexesOperation);\n  function CreateSearchIndexesOperation(collection, descriptions) {\n    var _this;\n    _classCallCheck(this, CreateSearchIndexesOperation);\n    _this = _super.call(this);\n    _this.collection = collection;\n    _this.descriptions = descriptions;\n    return _this;\n  }\n  _createClass(CreateSearchIndexesOperation, [{\n    key: \"executeCallback\",\n    value: function executeCallback(server, session, callback) {\n      var namespace = this.collection.fullNamespace;\n      var command = {\n        createSearchIndexes: namespace.collection,\n        indexes: this.descriptions\n      };\n      server.command(namespace, command, {\n        session: session\n      }, function (err, res) {\n        var _res$indexesCreated;\n        if (err || !res) {\n          callback(err);\n          return;\n        }\n        var indexesCreated = (_res$indexesCreated = res === null || res === void 0 ? void 0 : res.indexesCreated) !== null && _res$indexesCreated !== void 0 ? _res$indexesCreated : [];\n        callback(undefined, indexesCreated.map(function (_ref) {\n          var name = _ref.name;\n          return name;\n        }));\n      });\n    }\n  }]);\n  return CreateSearchIndexesOperation;\n}(operation_1.AbstractCallbackOperation);\nexports.CreateSearchIndexesOperation = CreateSearchIndexesOperation;","map":{"version":3,"names":["operation_1","require","CreateSearchIndexesOperation","_operation_1$Abstract","_inherits","_super","_createSuper","collection","descriptions","_this","_classCallCheck","call","_createClass","key","value","executeCallback","server","session","callback","namespace","fullNamespace","command","createSearchIndexes","indexes","err","res","_res$indexesCreated","indexesCreated","undefined","map","_ref","name","AbstractCallbackOperation","exports"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb/src/operations/search_indexes/create.ts"],"sourcesContent":["import type { Document } from 'bson';\n\nimport type { Collection } from '../../collection';\nimport type { Server } from '../../sdam/server';\nimport type { ClientSession } from '../../sessions';\nimport type { Callback } from '../../utils';\nimport { AbstractCallbackOperation } from '../operation';\n\n/**\n * @public\n */\nexport interface SearchIndexDescription {\n  /** The name of the index. */\n  name?: string;\n\n  /** The index definition. */\n  definition: Document;\n}\n\n/** @internal */\nexport class CreateSearchIndexesOperation extends AbstractCallbackOperation<string[]> {\n  constructor(\n    private readonly collection: Collection,\n    private readonly descriptions: ReadonlyArray<SearchIndexDescription>\n  ) {\n    super();\n  }\n\n  executeCallback(\n    server: Server,\n    session: ClientSession | undefined,\n    callback: Callback<string[]>\n  ): void {\n    const namespace = this.collection.fullNamespace;\n    const command = {\n      createSearchIndexes: namespace.collection,\n      indexes: this.descriptions\n    };\n\n    server.command(namespace, command, { session }, (err, res) => {\n      if (err || !res) {\n        callback(err);\n        return;\n      }\n\n      const indexesCreated: Array<{ name: string }> = res?.indexesCreated ?? [];\n\n      callback(\n        undefined,\n        indexesCreated.map(({ name }) => name)\n      );\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;AAMA,IAAAA,WAAA,GAAAC,OAAA;AAaA;AAAA,IACaC,4BAA6B,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,4BAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,4BAAA;EACxC,SAAAA,6BACmBK,UAAsB,EACtBC,YAAmD;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,4BAAA;IAEpEO,KAAA,GAAAJ,MAAA,CAAAM,IAAA;IAHiBF,KAAA,CAAAF,UAAU,GAAVA,UAAU;IACVE,KAAA,CAAAD,YAAY,GAAZA,YAAY;IAAuC,OAAAC,KAAA;EAGtE;EAACG,YAAA,CAAAV,4BAAA;IAAAW,GAAA;IAAAC,KAAA,EAED,SAAAC,gBACEC,MAAc,EACdC,OAAkC,EAClCC,QAA4B;MAE5B,IAAMC,SAAS,GAAG,IAAI,CAACZ,UAAU,CAACa,aAAa;MAC/C,IAAMC,OAAO,GAAG;QACdC,mBAAmB,EAAEH,SAAS,CAACZ,UAAU;QACzCgB,OAAO,EAAE,IAAI,CAACf;OACf;MAEDQ,MAAM,CAACK,OAAO,CAACF,SAAS,EAAEE,OAAO,EAAE;QAAEJ,OAAO,EAAPA;MAAO,CAAE,EAAE,UAACO,GAAG,EAAEC,GAAG,EAAI;QAAA,IAAAC,mBAAA;QAC3D,IAAIF,GAAG,IAAI,CAACC,GAAG,EAAE;UACfP,QAAQ,CAACM,GAAG,CAAC;UACb;;QAGF,IAAMG,cAAc,IAAAD,mBAAA,GAA4BD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,cAAc,cAAAD,mBAAA,cAAAA,mBAAA,GAAI,EAAE;QAEzER,QAAQ,CACNU,SAAS,EACTD,cAAc,CAACE,GAAG,CAAC,UAAAC,IAAA;UAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;UAAA,OAAOA,IAAI;QAAA,EAAC,CACvC;MACH,CAAC,CAAC;IACJ;EAAC;EAAA,OAAA7B,4BAAA;AAAA,EAhC+CF,WAAA,CAAAgC,yBAAmC;AAArFC,OAAA,CAAA/B,4BAAA,GAAAA,4BAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}