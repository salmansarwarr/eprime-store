{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/home/salman/Documents/GitHub/FakeShop/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar usm = require(\"./url-state-machine\");\nvar urlencoded = require(\"./urlencoded\");\nvar URLSearchParams = require(\"./URLSearchParams\");\nexports.implementation = /*#__PURE__*/function () {\n  function URLImpl(globalObject, constructorArgs) {\n    _classCallCheck(this, URLImpl);\n    var url = constructorArgs[0];\n    var base = constructorArgs[1];\n    var parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        throw new TypeError(\"Invalid base URL: \".concat(base));\n      }\n    }\n    var parsedURL = usm.basicURLParse(url, {\n      baseURL: parsedBase\n    });\n    if (parsedURL === null) {\n      throw new TypeError(\"Invalid URL: \".concat(url));\n    }\n    var query = parsedURL.query !== null ? parsedURL.query : \"\";\n    this._url = parsedURL;\n\n    // We cannot invoke the \"new URLSearchParams object\" algorithm without going through the constructor, which strips\n    // question mark by default. Therefore the doNotStripQMark hack is used.\n    this._query = URLSearchParams.createImpl(globalObject, [query], {\n      doNotStripQMark: true\n    });\n    this._query._url = this;\n  }\n  _createClass(URLImpl, [{\n    key: \"href\",\n    get: function get() {\n      return usm.serializeURL(this._url);\n    },\n    set: function set(v) {\n      var parsedURL = usm.basicURLParse(v);\n      if (parsedURL === null) {\n        throw new TypeError(\"Invalid URL: \".concat(v));\n      }\n      this._url = parsedURL;\n      this._query._list.splice(0);\n      var query = parsedURL.query;\n      if (query !== null) {\n        this._query._list = urlencoded.parseUrlencodedString(query);\n      }\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      return usm.serializeURLOrigin(this._url);\n    }\n  }, {\n    key: \"protocol\",\n    get: function get() {\n      return \"\".concat(this._url.scheme, \":\");\n    },\n    set: function set(v) {\n      usm.basicURLParse(\"\".concat(v, \":\"), {\n        url: this._url,\n        stateOverride: \"scheme start\"\n      });\n    }\n  }, {\n    key: \"username\",\n    get: function get() {\n      return this._url.username;\n    },\n    set: function set(v) {\n      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n        return;\n      }\n      usm.setTheUsername(this._url, v);\n    }\n  }, {\n    key: \"password\",\n    get: function get() {\n      return this._url.password;\n    },\n    set: function set(v) {\n      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n        return;\n      }\n      usm.setThePassword(this._url, v);\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      var url = this._url;\n      if (url.host === null) {\n        return \"\";\n      }\n      if (url.port === null) {\n        return usm.serializeHost(url.host);\n      }\n      return \"\".concat(usm.serializeHost(url.host), \":\").concat(usm.serializeInteger(url.port));\n    },\n    set: function set(v) {\n      if (usm.hasAnOpaquePath(this._url)) {\n        return;\n      }\n      usm.basicURLParse(v, {\n        url: this._url,\n        stateOverride: \"host\"\n      });\n    }\n  }, {\n    key: \"hostname\",\n    get: function get() {\n      if (this._url.host === null) {\n        return \"\";\n      }\n      return usm.serializeHost(this._url.host);\n    },\n    set: function set(v) {\n      if (usm.hasAnOpaquePath(this._url)) {\n        return;\n      }\n      usm.basicURLParse(v, {\n        url: this._url,\n        stateOverride: \"hostname\"\n      });\n    }\n  }, {\n    key: \"port\",\n    get: function get() {\n      if (this._url.port === null) {\n        return \"\";\n      }\n      return usm.serializeInteger(this._url.port);\n    },\n    set: function set(v) {\n      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n        return;\n      }\n      if (v === \"\") {\n        this._url.port = null;\n      } else {\n        usm.basicURLParse(v, {\n          url: this._url,\n          stateOverride: \"port\"\n        });\n      }\n    }\n  }, {\n    key: \"pathname\",\n    get: function get() {\n      return usm.serializePath(this._url);\n    },\n    set: function set(v) {\n      if (usm.hasAnOpaquePath(this._url)) {\n        return;\n      }\n      this._url.path = [];\n      usm.basicURLParse(v, {\n        url: this._url,\n        stateOverride: \"path start\"\n      });\n    }\n  }, {\n    key: \"search\",\n    get: function get() {\n      if (this._url.query === null || this._url.query === \"\") {\n        return \"\";\n      }\n      return \"?\".concat(this._url.query);\n    },\n    set: function set(v) {\n      var url = this._url;\n      if (v === \"\") {\n        url.query = null;\n        this._query._list = [];\n        return;\n      }\n      var input = v[0] === \"?\" ? v.substring(1) : v;\n      url.query = \"\";\n      usm.basicURLParse(input, {\n        url: url,\n        stateOverride: \"query\"\n      });\n      this._query._list = urlencoded.parseUrlencodedString(input);\n    }\n  }, {\n    key: \"searchParams\",\n    get: function get() {\n      return this._query;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      if (this._url.fragment === null || this._url.fragment === \"\") {\n        return \"\";\n      }\n      return \"#\".concat(this._url.fragment);\n    },\n    set: function set(v) {\n      if (v === \"\") {\n        this._url.fragment = null;\n        return;\n      }\n      var input = v[0] === \"#\" ? v.substring(1) : v;\n      this._url.fragment = \"\";\n      usm.basicURLParse(input, {\n        url: this._url,\n        stateOverride: \"fragment\"\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.href;\n    }\n  }]);\n  return URLImpl;\n}();","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","usm","urlencoded","URLSearchParams","exports","implementation","URLImpl","globalObject","constructorArgs","url","base","parsedBase","undefined","basicURLParse","TypeError","concat","parsedURL","baseURL","query","_url","_query","createImpl","doNotStripQMark","key","get","serializeURL","set","v","_list","splice","parseUrlencodedString","serializeURLOrigin","scheme","stateOverride","username","cannotHaveAUsernamePasswordPort","setTheUsername","password","setThePassword","host","port","serializeHost","serializeInteger","hasAnOpaquePath","serializePath","path","input","substring","fragment","value","toJSON","href"],"sources":["/home/salman/Documents/GitHub/FakeShop/node_modules/mongodb-connection-string-url/node_modules/whatwg-url/lib/URL-impl.js"],"sourcesContent":["\"use strict\";\nconst usm = require(\"./url-state-machine\");\nconst urlencoded = require(\"./urlencoded\");\nconst URLSearchParams = require(\"./URLSearchParams\");\n\nexports.implementation = class URLImpl {\n  constructor(globalObject, constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === null) {\n        throw new TypeError(`Invalid base URL: ${base}`);\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${url}`);\n    }\n\n    const query = parsedURL.query !== null ? parsedURL.query : \"\";\n\n    this._url = parsedURL;\n\n    // We cannot invoke the \"new URLSearchParams object\" algorithm without going through the constructor, which strips\n    // question mark by default. Therefore the doNotStripQMark hack is used.\n    this._query = URLSearchParams.createImpl(globalObject, [query], { doNotStripQMark: true });\n    this._query._url = this;\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === null) {\n      throw new TypeError(`Invalid URL: ${v}`);\n    }\n\n    this._url = parsedURL;\n\n    this._query._list.splice(0);\n    const { query } = parsedURL;\n    if (query !== null) {\n      this._query._list = urlencoded.parseUrlencodedString(query);\n    }\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return `${this._url.scheme}:`;\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(`${v}:`, { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return `${usm.serializeHost(url.host)}:${usm.serializeInteger(url.port)}`;\n  }\n\n  set host(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    return usm.serializePath(this._url);\n  }\n\n  set pathname(v) {\n    if (usm.hasAnOpaquePath(this._url)) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return `?${this._url.query}`;\n  }\n\n  set search(v) {\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      this._query._list = [];\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n    this._query._list = urlencoded.parseUrlencodedString(input);\n  }\n\n  get searchParams() {\n    return this._query;\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return `#${this._url.fragment}`;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}